%!PS-Adobe-2.0
%%Creator: dvips(k) 5.92b Copyright 2002 Radical Eye Software
%%Title: main.dvi
%%Pages: 13
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: Times-Roman Times-Bold Helvetica-Bold CMMI10 CMR7
%%+ CMSY10 CMSY7 Helvetica Times-Italic NewCenturySchlbk-Bold Courier
%%+ CMR10 CMMI7 Courier-Bold NewCenturySchlbk-Roman Symbol CMMIB10
%%+ CMMIB7 CMBX10 CMEX10 CMBX7
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips main.dvi -o main.ps
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2005.03.13:1709
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc
% File  8r.enc as of 2002-03-12 for PSNFSS 9
%
% This is the encoding vector for Type1 and TrueType fonts to be used
% with TeX.  This file is part of the PSNFSS bundle, version 9
% 
% Authors: S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry, W. Schmidt
%
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida + Euro.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (6) /Euro is assigned to 128, as in Windows ANSI
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there down to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /Euro /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: texnansi.enc
% @psencodingfile{
%   author = "Y&Y, Inc.",
%   version = "1.1",
%   date = "1 December 1996",
%   filename = "texnansi.enc",
%   email = "help@YandY.com",
%   address = "45 Walden Street // Concord, MA 01742, USA",
%   codetable = "ISO/ASCII",
%   checksum = "xx",
%   docstring = "Encoding for fonts in Adobe Type 1 format for use with TeX."
% }
%
% The idea is to have all 228 characters normally included in Type 1 text
% fonts (plus a few more) available for typesetting.  This is effectively
% the character set in Adobe Standard Encoding, ISO Latin 1, plus a few more.
%
% Character code assignments were made as follows:
%
% (1) The character layout largely matches `ASCII' in the 32 -- 126 range,
% except for `circumflex' in 94 and `tilde' in 126, to match `TeX text'
% (`asciicircumflex' and `asciitilde' appear in 158 and 142 instead).
%
% (2) The character layout matches `Windows ANSI' in almost all places,
% except for `quoteright' in 39 and `quoteleft' in 96 to match ASCII
% (`quotesingle' and `grave' appear in 129 and 18 instead).
%
% (3) The character layout matches `TeX typewriter' used by CM text fonts
% in most places (except for discordant positions such as hungarumlaut
% (instead of braceright), dotaccent (instead of underscore) etc.
%
% (4) Remaining characters are assigned arbitrarily to the `control character'
% range (0 -- 31), avoiding 0, 9, 10 and 13 in case we meet dumb software
% - similarly one should really avoid 127 and 128 if possible.
% In addition, the 8 open slots in Windows ANSI between 128 and 159 are used.
%
% (5) Y&Y Lucida Bright includes some extra ligatures and such; ff, ffi, ffl,
% and `dotlessj,' these are included 11 -- 15, and 17.
%
% (6) Hyphen appears both at 45 and 173 for compatibility with both ASCII
% and Windows ANSI.
%
% (7) It doesn't really matter where ligatures appear (both real, such as ffi,
% and pseudo such as ---) since these should not be accessed directly, only
% via ligature information in the TFM file.
%
% SAMPLE USAGE (in `psfonts.map' file for DVIPS):
% 
% lbr LucidaBright "TeXnANSIEncoding ReEncodeFont" <texnansi.enc <lbr.pfb
%
% This tells DVIPS that the font called `lbr' in TeX has PostScript 
% FontName `LucidaBright.'  It also asks DVIPS to expand the file `lbr.pfb'
% into PFA form, to include the attached `texnansi.enc' encoding vector,
% and to then actually reencode the font based on that encoding vector.
%
% Revised 1996 June 1 by adding second position for `fl' to avoid Acrobat bug.
% Revised 1996 June 1 by adding second position for `fraction' for same reason.
% Revised 1997 Oct 1 by adding cwm  (used in boundary char TFM code)
% Revised 1998 Mar 1 by adding Unicode for Euro character
%
/TeXnANSIEncoding [
/.notdef % 0
/Euro % /Uni20AC 1
/.notdef % 2
/.notdef % 3
/fraction %	4
/dotaccent %	5
/hungarumlaut %	6
/ogonek	%	7
/fl	%	8
/.notdef % /fraction %	9	not used (see 4), backward compatability only
/cwm	%	10	not used, except boundary char internally maybe
/ff    %	11
/fi    %	12
/.notdef % /fl    %	13	not used (see 8), backward compatability only
/ffi   %	14
/ffl   %	15
/dotlessi %	16
/dotlessj %	17
/grave %	18
/acute %	19
/caron %	20
/breve %	21
/macron %	22
/ring  %	23
/cedilla %	24
/germandbls %	25
/ae    %	26
/oe    %	27
/oslash %	28
/AE    %	29
/OE    %	30
/Oslash %	31
/space %	32	% /suppress in TeX text
/exclam %	33
/quotedbl %	34	% /quotedblright in TeX text
/numbersign %	35
/dollar %	36
/percent %	37
/ampersand %	38
/quoteright %	39	% /quotesingle in ANSI
/parenleft %	40
/parenright %	41
/asterisk %	42
/plus  %	43
/comma %	44
/hyphen %	45
/period %	46
/slash %	47
/zero  %	48
/one   %	49
/two   %	50
/three %	51
/four  %	52
/five  %	53
/six   %	54
/seven %	55
/eight %	56
/nine  %	57
/colon %	58
/semicolon %	59
/less  %	60	% /exclamdown in Tex text
/equal %	61
/greater %	62	% /questiondown in TeX text
/question %	63
/at %	64
/A %	65
/B %	66
/C %	67
/D %	68
/E %	69
/F %	70
/G %	71
/H %	72
/I %	73
/J %	74
/K %	75
/L %	76
/M %	77
/N %	78
/O %	79
/P %	80
/Q %	81
/R %	82
/S %	83
/T %	84
/U %	85
/V %	86
/W %	87
/X %	88
/Y %	89
/Z %	90
/bracketleft %	91
/backslash %	92	% /quotedblleft in TeX text
/bracketright %	93
/circumflex %	94	% /asciicircum in ASCII
/underscore %	95	% /dotaccent in TeX text
/quoteleft %	96	% /grave accent in ANSI
/a %	97
/b %	98
/c %	99
/d %	100
/e %	101
/f %	102
/g %	103
/h %	104
/i %	105
/j %	106
/k %	107
/l %	108
/m %	109
/n %	110
/o %	111
/p %	112
/q %	113
/r %	114
/s %	115
/t %	116
/u %	117
/v %	118
/w %	119
/x %	120
/y %	121
/z %	122
/braceleft %	123	% /endash in TeX text
/bar   %	124	% /emdash in TeX test
/braceright %	125	% /hungarumlaut in TeX text
/tilde %	126	% /asciitilde in ASCII
/dieresis %	127	not used (see 168), use higher up instead
/Lslash	%	128	this position is unfortunate, but now too late to fix
/quotesingle %	129
/quotesinglbase %	130
/florin %	131
/quotedblbase %	132
/ellipsis %	133
/dagger %	134
/daggerdbl %	135
/circumflex %	136
/perthousand %	137
/Scaron %	138
/guilsinglleft %	139
/OE    %	140
/Zcaron %	141
/asciicircum %	142
/minus %	143
/lslash %	144
/quoteleft %	145
/quoteright %	146
/quotedblleft %	147
/quotedblright %	148
/bullet %	149
/endash %	150
/emdash %	151
/tilde %	152
/trademark %	153
/scaron %	154
/guilsinglright %	155
/oe    %	156
/zcaron %	157
/asciitilde %	158
/Ydieresis %	159
/nbspace %	160	% /space (no break space)
/exclamdown %	161
/cent  %	162
/sterling %	163
/currency %	164
/yen   %	165
/brokenbar %	166
/section %	167
/dieresis %	168
/copyright %	169
/ordfeminine %	170
/guillemotleft %	171
/logicalnot %	172
/sfthyphen %	173 % /hyphen (hanging hyphen)
/registered %	174
/macron %	175
/degree %	176
/plusminus %	177
/twosuperior %	178
/threesuperior %	179
/acute %	180
/mu    %	181
/paragraph %	182
/periodcentered %	183
/cedilla %	184
/onesuperior %	185
/ordmasculine %	186
/guillemotright %	187
/onequarter %	188
/onehalf %	189
/threequarters %	190
/questiondown %	191
/Agrave %	192
/Aacute %	193
/Acircumflex %	194
/Atilde %	195
/Adieresis %	196
/Aring %	197
/AE    %	198
/Ccedilla %	199
/Egrave %	200
/Eacute %	201
/Ecircumflex %	202
/Edieresis %	203
/Igrave %	204
/Iacute %	205
/Icircumflex %	206
/Idieresis %	207
/Eth   %	208
/Ntilde %	209
/Ograve %	210
/Oacute %	211
/Ocircumflex %	212
/Otilde %	213
/Odieresis %	214
/multiply %	215	% OE in T1
/Oslash %	216
/Ugrave %	217
/Uacute %	218
/Ucircumflex %	219
/Udieresis %	220
/Yacute %	221
/Thorn %	222
/germandbls %	223
/agrave %	224
/aacute %	225
/acircumflex %	226
/atilde %	227
/adieresis %	228
/aring %	229
/ae    %	230
/ccedilla %	231
/egrave %	232
/eacute %	233
/ecircumflex %	234
/edieresis %	235
/igrave %	236
/iacute %	237
/icircumflex %	238
/idieresis %	239
/eth   %	240
/ntilde %	241
/ograve %	242
/oacute %	243
/ocircumflex %	244
/otilde %	245
/odieresis %	246
/divide %	247	% oe in T1
/oslash %	248
/ugrave %	249
/uacute %	250
/ucircumflex %	251
/udieresis %	252
/yacute %	253
/thorn %	254
/ydieresis %	255	% germandbls in T1
] def

%%EndProcSet
%%BeginProcSet: aae443f0.enc
% Thomas Esser, Dec 2002. public domain
%
% Encoding for:
%     cmmi10 cmmi12 cmmi5 cmmi6 cmmi7 cmmi8 cmmi9 cmmib10
%
/TeXaae443f0Encoding [
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /Omega
/alpha /beta /gamma /delta /epsilon1 /zeta /eta /theta /iota /kappa
/lambda /mu /nu /xi /pi /rho /sigma /tau /upsilon /phi /chi /psi
/omega /epsilon /theta1 /pi1 /rho1 /sigma1 /phi1 /arrowlefttophalf
/arrowleftbothalf /arrowrighttophalf /arrowrightbothalf /arrowhookleft
/arrowhookright /triangleright /triangleleft /zerooldstyle /oneoldstyle
/twooldstyle /threeoldstyle /fouroldstyle /fiveoldstyle /sixoldstyle
/sevenoldstyle /eightoldstyle /nineoldstyle /period /comma /less /slash
/greater /star /partialdiff /A /B /C /D /E /F /G /H /I /J /K /L /M /N
/O /P /Q /R /S /T /U /V /W /X /Y /Z /flat /natural /sharp /slurbelow
/slurabove /lscript /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p
/q /r /s /t /u /v /w /x /y /z /dotlessi /dotlessj /weierstrass /vector
/tie /psi /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi
/.notdef /.notdef /Omega /alpha /beta /gamma /delta /epsilon1 /zeta /eta
/theta /iota /kappa /lambda /mu /nu /xi /pi /rho /sigma /tau /upsilon
/phi /chi /psi /tie /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef
] def

%%EndProcSet
%%BeginProcSet: f7b6d320.enc
% Thomas Esser, Dec 2002. public domain
%
% Encoding for:
%     cmb10 cmbx10 cmbx12 cmbx5 cmbx6 cmbx7 cmbx8 cmbx9 cmbxsl10
%     cmdunh10 cmr10 cmr12 cmr17cmr6 cmr7 cmr8 cmr9 cmsl10 cmsl12 cmsl8
%     cmsl9 cmss10cmss12 cmss17 cmss8 cmss9 cmssbx10 cmssdc10 cmssi10
%     cmssi12 cmssi17 cmssi8cmssi9 cmssq8 cmssqi8 cmvtt10
%
/TeXf7b6d320Encoding [
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /Omega
/ff /fi /fl /ffi /ffl /dotlessi /dotlessj /grave /acute /caron /breve
/macron /ring /cedilla /germandbls /ae /oe /oslash /AE /OE /Oslash
/suppress /exclam /quotedblright /numbersign /dollar /percent /ampersand
/quoteright /parenleft /parenright /asterisk /plus /comma /hyphen
/period /slash /zero /one /two /three /four /five /six /seven /eight
/nine /colon /semicolon /exclamdown /equal /questiondown /question /at
/A /B /C /D /E /F /G /H /I /J /K /L /M /N /O /P /Q /R /S /T /U /V /W /X
/Y /Z /bracketleft /quotedblleft /bracketright /circumflex /dotaccent
/quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s /t /u
/v /w /x /y /z /endash /emdash /hungarumlaut /tilde /dieresis /suppress
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /space
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /.notdef
/.notdef /Omega /ff /fi /fl /ffi /ffl /dotlessi /dotlessj /grave /acute
/caron /breve /macron /ring /cedilla /germandbls /ae /oe /oslash /AE
/OE /Oslash /suppress /dieresis /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
] def

%%EndProcSet
%%BeginProcSet: bbad153f.enc
% Thomas Esser, Dec 2002. public domain
%
% Encoding for:
%     cmsy10 cmsy5 cmsy6 cmsy7 cmsy8 cmsy9
%
/TeXbbad153fEncoding [
/minus /periodcentered /multiply /asteriskmath /divide /diamondmath
/plusminus /minusplus /circleplus /circleminus /circlemultiply
/circledivide /circledot /circlecopyrt /openbullet /bullet
/equivasymptotic /equivalence /reflexsubset /reflexsuperset /lessequal
/greaterequal /precedesequal /followsequal /similar /approxequal
/propersubset /propersuperset /lessmuch /greatermuch /precedes /follows
/arrowleft /arrowright /arrowup /arrowdown /arrowboth /arrownortheast
/arrowsoutheast /similarequal /arrowdblleft /arrowdblright /arrowdblup
/arrowdbldown /arrowdblboth /arrownorthwest /arrowsouthwest /proportional
/prime /infinity /element /owner /triangle /triangleinv /negationslash
/mapsto /universal /existential /logicalnot /emptyset /Rfractur /Ifractur
/latticetop /perpendicular /aleph /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /union /intersection
/unionmulti /logicaland /logicalor /turnstileleft /turnstileright
/floorleft /floorright /ceilingleft /ceilingright /braceleft /braceright
/angbracketleft /angbracketright /bar /bardbl /arrowbothv /arrowdblbothv
/backslash /wreathproduct /radical /coproduct /nabla /integral
/unionsq /intersectionsq /subsetsqequal /supersetsqequal /section
/dagger /daggerdbl /paragraph /club /diamond /heart /spade /arrowleft
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/minus /periodcentered /multiply /asteriskmath /divide /diamondmath
/plusminus /minusplus /circleplus /circleminus /.notdef /.notdef
/circlemultiply /circledivide /circledot /circlecopyrt /openbullet
/bullet /equivasymptotic /equivalence /reflexsubset /reflexsuperset
/lessequal /greaterequal /precedesequal /followsequal /similar
/approxequal /propersubset /propersuperset /lessmuch /greatermuch
/precedes /follows /arrowleft /spade /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: CMBX7
%!PS-AdobeFont-1.1: CMBX7 1.0
%%CreationDate: 1991 Aug 20 16:35:49
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-55 -250 1289 751}readonly def
/UniqueID 5000765 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660F74BEE96790DE35AFA90CCF712
B1805DA88AE375A04F3C90C160DE16F890E93B13B46BB2F4971D900BB550E53F
EC6248832A83CF441B4851445885479839AFAA2903A27676E5FDBCD653467C5B
6757DA1B722133018873A10B4FD9D710BBD9BE518D989B67DD4533F8702D640E
B84C3CC2607748FBD7C4BC6DA98537C7A83BCDCD871BC342E318F22902994EA5
8F5F698960BF55B6DD1ADBAA57D96E80D7C28E06447C5E0131B450234C39D332
D6EBE6E76DD503B658866DF4DB6774597338B1DB90AC6C0ABAEBA29CE9656E89
167D88958F3BF262133689AD41A5B9A90DF2838A221C5067B73066612A0FAD18
6A3670B2A69D1731367C8335600294ABC365F383F983A8AB1E37C1C1804893F7
DBF122DA9C3843D1715ACBEF92F28AECE850981251D1D25F13B0DE4320D26157
D14147622A29E7E7F6A037AF34A0197D57AB2A9F7129001F7F636F3B07E0F12F
D409D880B878EC8C911E3B1F24AE299AC56227FB9D6ECDDDC5F8DFCD18D8D0B1
4BF4C36A2E36F69E7291A1A0F738ED27D586BAAE8C04E00D5B3C88316AD3374C
5164218F5588EEDBF966055C55E9781D75B1D7B9C1A2FD2682E7CB88FA9C6889
8C5510BD1964BB505CABF99F91C7110745DFBC4B8A2A15295320EAF27A97ED84
C6E59474C2832859A5E2536E33893D90929D6D2585C73A6F3D316B96DCF60413
912E288DC3945E3A2C53EE1580FA68D40CC336D9AF2EDB87DAC04ACBF223D379
5482F7EF56A8DE5175D4D988BD67040B7B4634B145F6C995009C1D9671217E37
758B75D54A26EF8D6F56822318B256B2C43B27E2892E250E98F438334182171D
99CF39FD8F18FECC0C511B82F9E4B4F4105FB790D635D44CC9EADB5CB7F61CAE
FD72FA3ECCDA89D292F3006297BA24565170174F7DC8EF0FB0793A5A861B3A54
CE7E36A339066D1B7E2F60A9682BB4613080028E2B345A354396C7A75C8446DF
E5FCEE0EACC4DEC1735FD13458B08963BEE0DAE02A8A1D5760190DD509A229DF
6B149FEA6260F2AF15A60E0581FB1919C2E4DFD78BDEC0B636A7B05D415D27EF
93D284ADDCA86C113F23F476F50D8D67FCAEA39A9ACF575C8D289763FAED8551
BF8B8B7670555BC7C6F065C38DA320A1C27B79218B4C580A643E730D0EDEEF45
164EACE15EEE191E623B0B7D9C0236BA1EB8B39C563D714EE97FEC92D52D0A52
476549B3F329A58F3C4C40B9DB9C099B73C38F91E45C3B0ACAE272DD021AA3C0
A06A9CA1D2C3379D0FD06A284EBAFA0A87FE71586C68810F333475D5014BC190
63EA67C7B95D4269E21D7ADAD4A968292D4E62AE1D4CA47C586222EFC872BFBA
9DC0C7C215875379CF84B0FCDBBDB2D138F2E85A1F8F83EB57BB72CEA79D0DE2
283A8A730903
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMEX10
%!PS-AdobeFont-1.1: CMEX10 1.00
%%CreationDate: 1992 Jul 23 21:22:48
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMEX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 88 /summationdisplay put
readonly def
/FontBBox{-24 -2960 1454 772}readonly def
/UniqueID 5000774 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF5B8CAC6A7BEB5D02276E511FFAF2AE11910
DE076F24311D94D07CACC323F360887F1EA11BDDA7927FF3325986FDB0ABDFC8
8E4B40E7988921D551EC0867EBCA44C05657F0DC913E7B3004A5F3E1337B6987
FEBC45F989C8DC6DC0AD577E903F05D0D54208A0AE7F28C734F130C133B48422
BED48639A2B74E4C08F2E710E24A99F347E0F4394CE64EACB549576E89044E52
EABE595BC964156D9D8C2BAB0F49664E951D7C1A3D1789C47F03C7051A63D5E8
DF04FAAC47351E82CAE0794AA9692C6452688A74A7A6A7AD09B8A9783C235EC1
EA2156261B8FB331827145DE315B6EC1B3D8B67B3323F761EAF4C223BB214C4C
6B062D1B281F5041D068319F4911058376D8EFBA59884BA3318C5BC95684F281
E0591BC0D1B2A4592A137FF301610019B8AC46AE6E48BC091E888E4487688350
E9AD5074EE4848271CE4ACC38D8CBC8F3DB32813DDD5B341AF9A6601281ABA38
4A978B98483A63FCC458D0E3BCE6FD830E7E09B0DB987A6B63B74638FC9F21A5
8C68479E1A85225670D79CDDE5AC0B77F5A994CA700B5F0FF1F97FC63EFDE023
8135F04A9D20C31998B12AE06676C362141AAAA395CDEF0A49E0141D335965F2
FB4198499799CECCC8AA5D255264784CD30A3E8295888EFBC2060ADDD7BAC45A
EEEECDFF7A47A88E69D84C9E572616C1AC69A34B5F0D0DE8EE4EDF9F4ADE0387
680924D8D5B73EF04EAD7F45977CA8AD73D4DD45DE1966A3B8251C0386164C35
5880DD2609C80E96D1AB861C9259748E98F6711D4E241A269ED51FF328344664
3AF9F18DCE671611DB2F5D3EA77EE734D2BED623F973E6840B8DAD1E2C3C2666
DD4DD1C1C8384F906A7BAACDF441BB0AAEA2A697E453D89E61340D3A13F615FF
3E64BC24A22786C838BF3BAF6B2829B5E16372EE3B9347142EE6853C37C61423
540C793D56EF624F68D2BD0C0A43524C3DD7DE1A30702B79032D9EAF715668AC
6701F3B3E54B877104A17D328FA3B6F17B484771428F11365153D779E59132B8
8AA4D47495417DC5F6CC5315B779C2B12A4EA32D16BE254D2EF2E0FEE0021791
B46226F1A45386FA41C56864FD6EEBE29E98E00C279EBA6F17ABFC1F8E0519F0
A9E5A7FFDBFF06D6475D65A977BEA0F5DACFAB70461E8E08B1BFD3D31ABB37C0
5C42D17ACBC194B89A50063B9C2F02ED26A99FF436DFEACD70511658C9554FA6
6EB73CA3F0A8F17C8C34B79C6A5BB7C395190BA6822EBBB81A40EEE29A69E316
9AC9134E9DF5007B32E8CFA45579F310413D25E82691774DF4B83610A41BCFFE
E2119028B24BFAED5197C3ECAC5F0D0D66D17E69
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.1: CMBX10 1.00B
%%CreationDate: 1992 Feb 19 19:54:06
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-301 -250 1164 946}readonly def
/UniqueID 5000768 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F00F963068B8B731A88D7740B0DDAED1B3F82
7DB9DFB4372D3935C286E39EE7AC9FB6A9B5CE4D2FAE1BC0E55AE02BFC464378
77B9F65C23E3BAB41EFAE344DDC9AB1B3CCBC0618290D83DC756F9D5BEFECB18
2DB0E39997F264D408BD076F65A50E7E94C9C88D849AB2E92005CFA316ACCD91
FF524AAD7262B10351C50EBAD08FB4CD55D2E369F6E836C82C591606E1E5C73F
DE3FA3CAD272C67C6CBF43B66FE4B8677DAFEEA19288428D07FEB1F4001BAA68
7AAD6DDBE432714E799CFA49D8A1A128F32E8B280524BC8041F1E64ECE4053C4
9F0AEC699A75B827002E9F95826DB3F643338F858011008E338A899020962176
CF66A62E3AEF046D91C88C87DEB03CE6CCDF4FB651990F0E86D17409F121773D
6877DF0085DFB269A3C07AA6660419BD0F0EF3C53DA2318BA1860AB34E28BAC6
E82DDB1C43E5203AC9DF9277098F2E42C0F7BD03C6D90B629DE97730245B8E8E
8903B9225098079C55A37E4E59AE2A9E36B6349FA2C09BB1F5F4433E4EEFC75E
3F9830EB085E7E6FBE2666AC5A398C2DF228062ACF9FCA5656390A15837C4A99
EC3740D873CFEF2E248B44CA134693A782594DD0692B4DBF1F16C4CDECA692C4
0E44FDBEF704101118BC53575BF22731E7F7717934AD715AC33B5D3679B784C9
4046E6CD3C0AD80ED1F65626B14E33CFDA6EB2825DC444FA62096FE53B3181F1
34B6A0FC125B7E8B4447C8A5E11A7F414CE043ABAA584B2F67DE3FE1325334CB
63B98D4A88F8D5306D7EA98B62723EA709806FC982EDF78271ED4545B07C4617
EFA1A50D7E2D02E904EB093B5745BDF79F8143589E6296BF025CBC11411F348C
E687D0E97CF4FA509B30E1E82D6E03DA737F760525DAC028AD08B70B6F14750E
FC9EE46958A6FE7EC484B84DD4DDD8BF2C4162E29745A69E7717731DC3556B48
BF53EDCE1499F3925DACEC43096E1743E2EC204EA0883B4272A2E6FFFE12A187
49602C5F4EFEC4C0CBE41CAE0129E9F3CB9D1D32F10FC1198E32511F945E1172
87AD86E517267E421D345D782334244B767EB7651FF0B70681E8AFCB58655A8E
02FA0753A44EC9E581AE3691C027FB01BEDE9F738284B246BE4FA7493A92539F
FE7664A8A8D9BF3903299A0C81E94A8380D89096E480D7B112A801A369534D3C
3A0CC1CFCF4A01F9BEFA8EB263C089CE1074CC656155ED2C2E95398C0BE9BC7D
C784E4ACBC3A4A0B6E6454DD3107E2BFDFA2EBC7A3E2A78C8927F24C016C102C
FA346BF944CBBB0E7BABC0413F678204811AFB3C12D7E0B65E32A8EEA690C33C
850A8BC6988EC47457B2253F632FE978DDAF5E0A70C2137B983B1A5F867C0C10
36B2DD83C5BB5CC6161D7722B3ECAD7CACA869C48B50DDF960297D39DF2B708B
EF605075EE157E6B6AEEC9D5B0D1C9641E59CE041594E0396A0BE4B3AED032D7
FC1564C2A4E47DE0CA1168AD094354299D29BCEE77EF87B8A5D2E790172D4585
FBDFDA6D354A2C284EC40EC00C947C89359505A0025D7C70D0C35223B51E6511
3305932CDB1FA7BD0B36275E56FB1984F22890699F277A3B4ECCBCE4AB764ABC
44BA3828D3FE557EA837042CCC330766EA028CA0FD447F07894348F3B93043F3
ED792CFCF5AC617DBF2FB8C7A3E567BA556285CDF549243B2365325A3A4F028F
88CB2CE97F756273333E84F341637A1BDB292EADD055C97BDE28EB556402AE34
4855464338F161DD40C84177B8959E4D61960B8408BF7CE6B503202AD177075B
ED8D1B35D99C0F144261391B4EDE0BCE9B255D18B359D8F5D1673BDC63E43DF5
65AB45FC363D0CBC0649976309BC0586B4B91100B29BD22F26D11674C1813C23
4ABB421FC944610F082432080128605B0908FEDC419A83C48419B1E27B6E11B9
B064AA02CDBF9254EB3276B67CDB86F603C9D52F0435515AAC239AE21B3E3D97
6C39C5C1AAE6721252FF41B2B8CE5555953700AB8314338DAB81DCB94EEFFFED
21D76201098127CA2E1BC8F69B10904D06FBD00C0BEB553784741D36FEA41D23
CFEC5DF411F96FD32CC53B1A053E9E559B4D768CB821BA68AED3AA12421EA194
17487D7A7E227D9A9605BF0D763E60B084D5EEC2CE05D6BBC322C25C13435531
156836624872CDAF15B44742D0907CF47D88C939724BB3ED11543F836874075C
94B6F8D893FCED7EAB43EADB713DEAD5E419498B73E68B52C947FF9A3DA6D11F
C302816B2063777F7174D3727EEEAA183120DF7B93618AE1DC76F8617A7035FF
740B705B468D55EF34E081011F7889DE9C283201E533142300547542C8248B0E
5DF76EDCD9EBD5988053E80A9B5A58E0A96293909D265158C9877926E3FA22B3
37AF2D5D010800CD406144A4D67C1C39AB7A32D7514F04AA61AFC51A394EC99C
A6D849E2851E9BCA73CD0D6DA665508319737785B49A1B56F30E57DFB5C9A04C
54603B38B7E4104F198785F88703759F9AEC1E40FE53A9D66412514245683DC6
ADE5300E1477EAF791738709C322FD1CD40F6104B73F243B01D42645B3807294
5FC8FA75D15BDE51EC4BFFEADC05C5560158C6AB58FE96F82023ABDD90DAFC5F
4C4C191B969962CE4E0456F3BF4D17E11A4655D5C81EB97CB904D2FBEACB3446
0A6471B11FF4961BF90B0E8BFBE314A7BF5F3C767064B9F349C01CF1E8B1571A
645E9939DF6A6490B9DBAA915F4ED5C63607064F3DDC55A728FF738F25D37515
7DEC5848D50E06C44CF46249D96516DC91953893458F1652A6713D78F41ED2D3
772BBC1672CCC734BB41DCF60ACB5DF9F2BBF11F8946EF9F81C021A48DE2DA13
6D95DED7E79BEDB56C087C47E6BDA2EFCD085D0575FA30AC0A342EB6FA9116A1
77699228D09EC26F207C24A7ECBEA1563902630E73A002A25555732A3D843E33
60E00364AA83FD2ADD8E6C6E7808F54C0BE24FC22F6E54CB3B04F59937E59A33
98FBBD0D239205A262BD839161E24BE47AB4A8E2189326184F4960970BBF8F77
EB89541E01FD0975046719D51C65AF6A9807691449A72DCD73E74B0DB31C8E1D
51EE9B0FBE982081A720CB56D5CA2D8F707645E7210DC6481F55CA0E75800105
914E93EAF185C52C17FD7F527384D2126A3BE08A711F68A9E0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMIB7
%!PS-AdobeFont-1.1: CMMIB7 001.100
%%CreationDate: 1996 Jul 27 07:35:50
% Computer Modern fonts were designed by Donald E. Knuth.
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (001.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMIB7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMMIB7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 105 /i put
dup 106 /j put
dup 110 /n put
readonly def
/FontBBox{0 -250 1294 750}readonly def
/UniqueID 5087389 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670BAB68BB2A3981BBAA823C8858EF31989BDBABDF4098A
E4EF75BB1764F1578F9CFAAF2948789888274ABDFD1043B1979B55446F38D4A9
BEE0FA78F366D6A169A173AA6011E82B445A8797E37C48107C750383AAB274E4
8EA55C83AFBD4D7CA454D8D0B21B556D7ACB02B73A82444FA1B1D6F5BD26D69D
E9E4C809F92B4A969F8953AE78FFDBF365F24DE9C46852EF06999ACF1AF23DCA
C20F84FEEB9BFC15D6796CC805729E436B6D4FFAE09F971F0B863021CD0AA3DD
648543DB7B2919D93A47C7BE06FA63199D2697B931F831AB560D301B759E72C7
0B9B20F9955B9D4EB96888A7F16B7B75E10C7F9B415D1443A152450E84669799
8BFC554C45650CDE076205E109A1E3D453664BA189E4E782FC320A7D64C140B5
1A9805779CF1E5E3A2472704B86C7063EA80DEB00782DF225A155AA968A78D8E
7A7D6349517378B46444669ACF48916FB453EA83799897FF177D6479B1C4D74E
DDC0E907586009102FDEFD1CFAEE2798FBA979DF5C292454A6B5423F01C6923B
22A74651C32CBA3434D016D9659A5DEE6CB6D7AAEC53858197D177D3E2CE658C
0C09E5DA54E975FEF16EBB05EF82698407D3AE2C29A773FE41B535035FAF1882
964518468C3D0C7FA4618555F52670EF9E09C975A2AAEA4A3FF91290CD705070
6C97C740FD7F1FC881D1190D4346DFBF5591DD5CF6B37DF81109B347FC9751D5
4E02ACE998F1498CC1F441D3667571369CCBBE584F28D5903482AD0A907FE9D3
EBEF19D6284A5D738000A435B451557F3813CEAEBD4360711F1C40D357CE81CF
E775B1D22F31E6118E22929C25224D5FA6052AC82255206DC7521711D1E9A508
5F5794A86112CFF73F6560AE7C49AA90065CD69993388F07AB96281644250E7D
D83E2476204C74CBB662283EA3EAC5256F54532E0F9C211A84629F7848BD9CE2
DF5FBE56C763613B1D86650ADCD9D9E8CFADC3BAB3E404CCAA91FEA4E8C51093
DB28F7C996D5A69FE651AB0637C908BFBBE7AA46A79400E279407A451B1D866F
A197A055ED7D8E64D01390E9E92FB6FA21943BA9C3AA45E959FBDC140AE17DE9
6263A6CA5338F0545FC28B003E40E664D88B56E6F9CEAE61FBB850C398377A8B
3B9EB1D7893DF52D57BD6C1A6B744024CFC65AAF3200825E813406778E1EC1CC
156EFF2B00A8E11013102557F957C636987F2ED81971E9FC729AFC1E778A3C05
7C6070BF2E49EDA9528B7D8F8724EADAB1EA2DE9F4DBE5BCE6D4AF2E318F2058
F294D236578CFFBE68A6347F911C34150B85ACF4262B137D9E0FAF538F883A4A
0250B12E20239252CADD4C97377315695C92C8F3C7D431BB5A2E1B9C1740751C
B0C82D8E1C74333BD4C1039D8FF63151BB62BB3E92B484FE87E65B2DDEFF14C7
4744F93ADF8FE08B4C8BDE976D18C8F669EFA9F306BD4AFA8323B32617FE09DD
ABB4DA5C9565A5FC7BA362436980B6D47AD18A9ED91BE5AB10A28CD2198EA165
3959BD6F18A593F7F2F727BAE27D7A66202AED4D8AC7A08A586B816A9FBE78FF
96BF1E3CD5279B929D6833903A296C641CC83BA1B169B1729DA75FB682E6D392
AD188FCA5ED5CC9D1A8CF9027A5F84AE6F910479CACA512B828D37AAE601EEB0
642723FC51D140A3137E037B89ABC1A0DA96A502BC592C6A9D7784860831E129
95576C36C436F36AC3326F77174F31BCBDAA2D89E80DDFC057ED56BB01B2696B
0493718E8D42D1412E9B9DDBAF765F1D8D8D947418B39D9362E30E71132EF8F2
68D26C820C046B27660764AB934C819A4F1D24AA343DEF4111789939E0FCEAEC
A3F2DDCD4131E71B5A08654A650CC4ED751B9D7E5E40CBBE0D90C3F85CC6DA95
83C17F86D5B0B2250D6C9B9CE32A16F68BE7787C019BB336FE740E910E23A2DA
E1FFA45890A4B0FFF30E797028EAB3B1BDFFA460614B2120B7428D3B7981318F
18B73101EC3FC981242A3BA1F71854B122C090824E3AEEB3A49818AAA6521BDB
AD1284DFD9CC211B66138C63E38AD82C977966935829C264A881621ADFDE2F60
6622D43F76AEF0E0CD3BFD9A6D1B6F6769D486FCABFF76BB4EFDB38BB38AECE7
66B615142B9185E0773DDF093E2204C58EE55B8493C87806865C7EB1D54DF2F8
F78487E3BE466097BF94B3BE6A6799849AB942FD8DA81F44C3A48261DBB7E3CC
023C52FEF948B3E9B388412ADE8C4D883A1F8E4602920A9F0B269A608514EED3
FB0871EB1A7B5526749FEE4620BBBD4899CCB20754111049114288B9863BCB68
8C7A106F1AECA2FD438E20B796ED577DF51CBAD00E2C55E78942A24B70F8BB97
B830AC56E3214A99EC02D6DA64049868C9601B5777B02C2BCA3DD259F6B0CE09
047693E019FB6EFB5B988B9B2A2C2ECDC1D02DEFD684F2D234C39DDB0CACFCFA
4F615CF90BB953B51F9A080F00076D2FF8F15B26B0F60CEB50188A592EAEDEB5
DC8A1C7AFDAB6F7493923906CADC03191D7900FE46A98CEA8A06BBB9B4F0B8E6
8B55797CC2F6A0C4E995BEFD15974709CA6DE79EAC094F87D9C16B4957BDF3AF
5EF034DBE895ACA55F9425618823B9C3FD2BBD40A015447C7D416C23C3A036AE
E720BFC78B5BDD832631D3697321CB0D76CF8BBE4117907745629CC3C379B085
30696128C42EDB3A3F85D9118CBFC284518547D515D313FA35B34C8ED7CE889E
DFE0910EAD0CAEB0B035608CA2A6EAFCDD41630365393E8851479D8131D9B6D0
BAD38DEC1C0809DAA7A3E74AD4BB9753CA1EE776A30D1F85D0952955DDAA454C
EE4803C12B9228007EB443ACA356EC3DEEF4E7EBC4E3FE30552AF20CD3475E9A
FECF67E9886066E6231587E971579D55A00AD65DF8A01E03B674AAFBA0CD527A

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMIB10
%!PS-AdobeFont-1.1: CMMIB10 1.100
%%CreationDate: 1996 Jul 23 07:54:00
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMIB10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMIB10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-15 -250 1216 750}readonly def
/UniqueID 5087392 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D004B836D34E88C25F6CE738846C8E2E59A2BCF
4ACF80A26D78872E9343A0537BC3BD7715F32ACD958D5AAED865BFE129278935
063A31C2634DE2F9077E0AAAAEB224466B779096D8E3FF0A12AD5157F6603DED
1A82F3511359143311179080C510740B401C930C96270FD1AB3ECBCFEF5DE53F
E846BAAE95828D5790922640EF8AB9D7CEBE7669FEA02B72F86872D3D8754A18
A1629C40A7C00C956F140BC63362478279C36EE353638CD3E249897207A94504
4400668C8E702058EBF7284C9BDF830A3FC79C7EE900CC4C3664F9767A237275
CEE3671644A75F1E696DA906B4C66870DBE87F5B4A176920C078ADBE24F55C09
3D18CDE21B5FBC1C6A8AB18E05EDBEF9D1C1C18B3E6377BA2A688579D4F708F9
A5CF4F56C5E39E2726106E9713E638775E606464CD674E5DC25CE9A696A65806
C8E9D206B421E246F18013ACC6C7B2985BA93B1B7D7745CCB25B09957F50128C
B523A55ACA6A7A2A0193A536E590291ED9D577B527CAD0372E05BFCA1829FED1
662D06144A5FFA628C587A4FA05B179F1A7E3B23B47765FDC054271A0DBF9C2B
B4F4771F80D1F7AAD9024868C30DAD5CF728DB2A71D86D53B0E674996E8C01F7
EF97B225A28872F8AD4752A466E078C2B020EB832F237CB9B5631EB2D2EDDB00
709D3864CA3A6C3EF18085EAEABC011E9F35C9BE4B5D0B608361F329B5784DAC
5557A602E9E3C204909D84DB988F0BAB914E87CD685C7DA55C5E0B9F0176184F
FC39B570873BBF346A0D1DE3942DA05434949A65CE64D8BAB0A091C40F7FF47A
4FC57CB4420221C7B3EB8B891044B5FB0227009F0F6028D3F28545E63BC996D4
ADD6E35FA301B8E06658043FBC01BABAE30EED2F2EF91EF111C191F08AED49BA
A9CC03B250C02F124EF58C1C72DF660256D01C6AC34E9C091DC3AF6CC44AF9BE
B944719EBCB9680ED6D8A352453BB0509CDB24C39862FB08DBD6A8409E27ADC6
C91A4D18F82081623B322D263DE8B1BDD0544485B4BA6DE21F47816B27236097
46A25587294DB153A1CD596EBFD604CEC2FBE9DC75407E80C49BA966E86D4244
6E20041A3D716A24F2A0276B24C5DBA5A66BD6A5B48709B7B9AFF452AE61F8EE
13CBD4074B19C4364BD7049B721FCCE24959DCE24B81E9DE21DF3432EB3990C6
CCFB7DC6EA5FD67B23C688D8D2EAB0742599AE4212BBB7015BB9A5FAABF93B45
FB46D92840CBF5D46B830D359D42D4FE6151AF8F59F62E69FD54BFE1E334613C
F799741FF84D1D1E500A349DE44C53104032394620536B1F9637DA15AA1CDB5D
2BF1C052BE8E51196BB1E80C391262486B37F39B54ED87A8B7AC8532AEF0D0C5
7C8DC1FDBD48956433F061DA4B771AA09E0D9A442AC85A61CF1887EA2EBBF0A8
C93F6B4A4FBA9001FE2D8CE4DB14FBFF6BAFB684A09C2FDC75991F3780BBC54A
0EF3F4EB993E0498482B4EBA01124E2FAC5CC15324CEEA3BD3DE6BE993300C84
FD1A210F353CDE7D546C7A3231DC1CE41BA712593EE54ACCFF7A444D7F5709DE
E880C8EBA4BE5958F97162DD2666E5DA94A5401B151D2D802C767E7CE2CDD22A
351650CA2510078E10258B37E3EB70A634444FD381201541B7CA60AA155A9CE7
F97DDD4C8A261342A90763AD2A8E0B479BB0578C29749AF2CB5130F90DA63567
073C30A747FE4E106370AE121071240D6C361BB39AF0406A36374EB779DD023C
DE5274B1B7393A5EDF83769AAD0D746383AE98DB2F12D3E6F73929E57ED0943B
33478ECCBB008880BFEF229EA0700D91ACD65FD92C85AD8FFF4A60AF796D6F3D
3875F03B05AE734ECB0CE88A99E2DE0B092D4E05B3114F0779F4AC86C3F1B4FF
8B3300CE21C9F9798728F0034B663E3C5FA310CA20ED55BD669F4027F40A7C1D
91DE265D7C7E1F06BB68807F6C8AAA0286C60C6564EF918F948A5A6680D10909
999A5C01E89E39F43D83A1614892324EBA5153D9D909D9BE653FFA69499BD3AB
52AD9A56F332888158EE7D8C8068C8E3F9C30766529AC702883C309A0AB4C218
3FBB06E86FE8B9668BB3024114DBA440F83E94908AE71D4E7AE145C53B6F67D2
9772433C1A7A6827BAAC00EBD8E54B6C13384D31470D8CFE8E0895CAD9EA88F3
1A8EBD853EBFCBBFA77D29741D2857E22B6C7EC76D143AA6C7DB1D773293D1DE
B270ABF5313DDD95C970CE619DE252A75C4C265750ED7E35FA0E85FE1ACC3C1B

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI7
%!PS-AdobeFont-1.1: CMMI7 1.100
%%CreationDate: 1996 Jul 23 07:53:53
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{0 -250 1171 750}readonly def
/UniqueID 5087382 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D77639DF1232A4D6233A9CAF69B151DFD33F
C0962EAC6E3EBFB8AD256A3C654EAAF9A50C51BC6FA90B61B60401C235AFAB7B
B078D20B4B8A6D7F0300CF694E6956FF9C29C84FCC5C9E8890AA56B1BC60E868
DA8488AC4435E6B5CE34EA88E904D5C978514D7E476BF8971D419363125D4811
4D886EDDDCDDA8A6B0FDA5CF0603EA9FA5D4393BEBB26E1AB11C2D74FFA6FEE3
FAFBC6F05B801C1C3276B11080F5023902B56593F3F6B1F37997038F36B9E3AB
76C2E97E1F492D27A8E99F3E947A47166D0D0D063E4E6A9B535DC9F1BED129C5
123775D5D68787A58C93009FD5DA55B19511B95168C83429BD2D878207C39770
012318EA7AA39900C97B9D3859E3D0B04750B8390BF1F1BC29DC22BCAD50ECC6
A3C633D0937A59E859E5185AF9F56704708D5F1C50F78F43DFAC43C4E7DC9413
44CEFE43279AFD3C167C942889A352F2FF806C2FF8B3EB4908D50778AA58CFFC
4D1B14597A06A994ED8414BBE8B26E74D49F6CF54176B7297CDA112A69518050
01337CBA5478EB984CDD22020DAED9CA8311C33FBCC84177F5CE870E709FC608
D28B3A7208EFF72988C136142CE79B4E9C7B3FE588E9824ABC6F04D141E589B3
914A73A42801305439862414F893D5B6C327A7EE2730DEDE6A1597B09C258F05
261BC634F64C9F8477CD51634BA648FC70F659C90DC042C0D6B68CD1DF36D615
24F362B85A58D65A8E6DFD583EF9A79A428F2390A0B5398EEB78F4B5A89D9AD2
A517E0361749554ABD6547072398FFDD863E40501C316F28FDDF8B550FF8D663
9843D0BEA42289F85BD844891DB42EC7C51229D33EE7E83B1290404C799B8E8C
889787CDC43FBDFE1B4A245C9AA8693DE3556FCF9B554CDD7F7C4AED9A836CBA
5204201FD54A8FBADB94CE34561638E8F925F0095D3B03850134E00B76501085
0A6ADAA5F12E05CCEF09C608E5DD8EA4ADCA9E11433CEB19BE0E5C771F7119B9
903AB915939518F34C1E06300B83A6DE7768DA0845EAB46F9326ADCD95383F29
F9959DBF64EEB5661911DEC99A152B827AF3FC0DACCD8E6104F1F424F41B05DB
C9411C6D0C7F530FB3949C9019664A7A5367559E3FD97840B1408AD94B5C177F
53B121580B48C983C0F6EE7731FB7ADA7E7372B710657F229431A8EDD813D648
4A861966CB9A406A7FF22F2F2074C91F056FDBB71484B98C1503D697D7C2995B
09159EB6733BD579ADCFD9A94C786E3559D33215861466367C7591AF7B0A6949
DE5920739D5D526B70D79318FB8FA594E189940067D9F6E9514DB14A47EECDF5
9C8DA307E2025629FF0D166C8BDDFF33F533397FB90FAEFA068825C96493B92B
10D1497910C1283C5DED083F4C554C2FC64F7EFC6944428D891764AC31C52D1E
BFFE21611D664F33FA762ACD05284C6C6B8DD38A066B863C0441BFB9ED2827D1
97524AA0922BC15ABD80BF51DA3B15967C954496D4893E67A1DFE5AA0ECC89CC
2CF798F417D5AA90860CBB14337FF9A6BF99DA41F9E4126581EAAC11C26CF54A
B6AF0C0CFDF8B4C2B530DA57C304E38F33C798A0B88CF8548EBF9432C5047F02
A95437F0FE033B1D04C98DBD264585CAB20683297FCAD82E93B5AFA31C6F6B1D
395457585127D9799299FEF9C01ABF1D6F395465519996135D672B1CED3BABC7
E18CCCBDB183FFC1EF13ED34D75242E3639B4FF70492FE9CB2C6CF87FD955F58
00012746CFE0489F6312BA26E275AE35E04BF38F7D242A9C3FE104300CEC76BA
064CBC469B89BE2A37BD5E8F460EAE1A7EE87D0D3D7602EF49FC0E8AD263E694
5D8CDBFBA09A74E0CC5A14926B50758D4F4005A16D2C2A45F479EE1650848FA0
936DB7BFE6499FC8C0C7938E37AE69B502E9A879820D79DBBD636F272EA19D7F
35D644DD6470837EE146DC274A8B683606872036AAD41EDD8932440A8DB2EDA2
A9520DCC0126D90186461D4E00D3692D1E0D5251D8B2596257E7BAB3909E8390
E131733F1DDF55FB957824229CD3C46F6774017DEE5BB246FCA6E835C255F124
05899F11F1DD77C7367ABD4CD490A8DC29FDEDB15E2AB1339EFE2C380D4F8737
658F57536F81A0E20314D48A3EF26DDBB570A42A851A9030C6BA9ECBA5CD5D53
B7EEA4FCE08FCEFA04EAC6FA56DFCBEB07FDECF4B78CB6E8FBC005879C80FD94
D7BA1C68E88443057FE48E97808FDDA48A8B624D34AA1E185A75B4D999F8A934
BA10CF6350A45EC4D19ED14E52330188C18576704B44290FA6ADCC9DB852ED7C
97784AE78D09B5DB26540F527377AB340A17A4E2EEF82E6D79D5C14B6B6D6F9F
744BAE3B7E2D9D203F5095657E0FDAF2DF72F72B5041C688A88D16F9A70834F1
3FF27EE9AAD1A36D4A34BA192B55F9269B0B72677B9C1830D8B11353C262D8A0
5DDB028E79752982DB2C0BFD166B48D3FEAC0256DDFF97F87F398AB13836726A
465485938D90207740A134EA5B05ED1FC29C3F8A7F1A23A88DF3B885CE17BB3E
97B4F0B17A7186BC6B5393132C3249415F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
/UniqueID 5000793 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3C8578EF9A20A0E06E
4F7ADDAF0E7D1E182D115BF1AD931977325AD391E72E2B13CC108E3726C11099
E2000623188AAAC9F3E233EB253BDD8B0A4759A66A113E066238B0086AC1B634
5ABFF90E4B5ED3FA69C22541981B2BFC9710AEF6B50A8BB53431C7B4D380D721
639E005D6B4688EE16BFF48443E7C9E5FB5BC5883E271CB0342899970AC8DEBE
F6852C945EA76BF981A44BE299B02599FAD1941485623A6C258D6B9AA2102743
208979F7B8626C6FC8EAB989C8DE15D190F5F4A1EA8A46953FA010DAF684CC95
F66FD027234077F2FE73DDF0CF04EB616D8AAB427E7FC2470F2B0D4FF03BB6EF
5BB4F97C3C3E66AA90E329C011BA69E438E428A9B0CECD111842BF804B6AB80F
D94BA19F960CB7B818C877392D0252127FA2F95626D0DD1AD2A39D9004882509
7D7F201AA6B300A9891070C037C36FA07B30A75FD43FEDB8BEDDA2FE72A7AABA
0116EDEAB4710E77ABD890DB2FC9D72B01A9BBF83ECA3C1E749AC366958D7174
46DBB81F5034A6E123B19056AC025F16AC7E22F0A34BA206EF12790320F68DEB
07CF982F07D3E58FFB0AAB96C7902D26640BA6D48F1A733F8307C83E0E01C54C
AECABFC43C3A00F1D15AF2B91EDD040B82F2B66D5F321B99A98A7E67AFB1CFFD
4005305CC09274D16596E560364F6919F685F2995BF4593D6F5A3064187B311E
04B277A049D7B4D7F89652E62DBD51829E5E99344069DD5FB61BF904361126FA
04361698CDD5B1AB007AD65BF15B8DFCD525DE96A8E4AEC420A0A952FC829C58
186D02BC1B73E2F7A57FD16EF5D209D06A2460B1A56BC2A43C7EF17A90B61B4B
E2F2897E91DC99094BD1C5F81044C34ED57328AFB9730811D603F04F16DB2129
C385F5A9E525AA386C5EE1F28A1A7C8DAD574B2E294A84BD0ABACCCB37A8D304
9874711EA0B3E564D68FF1D32FAA3A757129A73A6A3D61D9365E5203187350AF
DCF469DC0782B2DF69A90707B15AB8D6F0B049083DE8582E4753AD0363F23FB1
5611C14569BBC7583DB4E828E1C766053614DF0FD21AEE5CC07BBB00663A31C3
C0687C46D738215D2E739CDF655035F3DFB8E1F0ABAD610CEFBFF0D837138851
BC0E00E494B75EB2CA9B9612EF6DD5D7E1C3147F258473566C42A8C1BAA680CB
CFC661DD3FBD2255861D59B351F19440336F9B2BD8C15AE907293929D1434FFE
69CACEE24CBD1797FF9CBF443A0D944AE568D33054ABD7C8977A34B58CB70FBC
8E7F8808A4C2DC20B84C050941E7AFFF139C4AE3F178A4739D8EB2473234D816
1312865FB52EB17D7DD199A0956BE472D47D4D26E9D264690E22097A146DBDFF
DFD0A26537E22498A56209D275ADCDEC3AA812E0B4649D2964D93C4B35D1EE42
05EBC637927562DD249A8ADB4A0CE869A21E7848F02E611FD80BCF70EF43F71E
4998DAEEAD374EB9B6CB0DCF8C7D247186D6A1BFB8944F6E300C9D13398611FC
084FDBF8780253E7F27F638B0E80D10808A741B927004180227D783A6FFCF916
3832FDE27074D8E6877C6AA75CA8A4AA6066507A73A2162C1D9912AE28A58AFF
2F507B060C73E6202F94C2232F6F2A90442078239AC7287C864BB32709CB728F
9C10CF5B0DAB271F09980802A99FB3A5ECC9AB1F696D2219C32C595BAE65FB7E
72459A1761BE2BE6603B8C3ACCF8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY7
%!PS-AdobeFont-1.1: CMSY7 1.0
%%CreationDate: 1991 Aug 15 07:21:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-15 -951 1252 782}readonly def
/UniqueID 5000817 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D251491EBF65A98C9FE2B1CF8D725A70281949
8F4AFFE638BBA6B12386C7F32BA350D62EA218D5B24EE612C2C20F43CD3BFD0D
F02B185B692D7B27BEC7290EEFDCF92F95DDEB507068DE0B0B0351E3ECB8E443
E611BE0A41A1F8C89C3BC16B352C3443AB6F665EAC5E0CC4229DECFC58E15765
424C919C273E7FA240BE7B2E951AB789D127625BBCB7033E005050EB2E12B1C8
E5F3AD1F44A71957AD2CC53D917BFD09235601155886EE36D0C3DD6E7AA2EF9C
C402C77FF1549E609A711FC3C211E64E8F263D60A57E9F2B47E3480B978AAF63
868AEA25DA3D5413467B76D2F02F8097D2841EDA6677731A6ACFEC0BABF1016A
089B2D24F47B9D66B677886B90AA787AD865B5F78EE434AA47B7B0F1244A4215
251FDCC670FD01A92226E2C667C2344298D001575BDF782D969D836ECA11E229
C7A17E28F70F9B17273FF243452DA885068A8BCB5165534F3996CBD8D97307DB
593D606C197AFC259E691C242F6E1E651575B6852AAD54567905E6F542DCA109
7F6DA24DC9112FBF7CE48B387953787B2BCB841873AED2DFA83339D39E14F4DD
3A51584527AC3A93630D121E2AE0C89D9C3F2FFA767743B1276BE1E648041010
0FD510F1A8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.0
%%CreationDate: 1991 Aug 15 07:20:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
/UniqueID 5000820 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D31FF2B87F97C73D63EECDDA4C49501773468A
27D1663E0B62F461F6E40A5D6676D1D12B51E641C1D4E8E2771864FC104F8CBF
5B78EC1D88228725F1C453A678F58A7E1B7BD7CA700717D288EB8DA1F57C4F09
0ABF1D42C5DDD0C384C7E22F8F8047BE1D4C1CC8E33368FB1AC82B4E96146730
DE3302B2E6B819CB6AE455B1AF3187FFE8071AA57EF8A6616B9CB7941D44EC7A
71A7BB3DF755178D7D2E4BB69859EFA4BBC30BD6BB1531133FD4D9438FF99F09
4ECC068A324D75B5F696B8688EEB2F17E5ED34CCD6D047A4E3806D000C199D7C
515DB70A8D4F6146FE068DC1E5DE8BC57033D79919697C81395D5B94C3AAAB11
52D73937B8F82D3E2E764DA1B3BE273CBB84E4B1919CC1D5586C21F6FC23BF1D
82DE5A8DFA3E8F5C25622AAB9F7A588532D13C663079C8FB84DA6BD4D2DEDB2F
84CE30D0F188EEA26599AF12D2B68EF456BB49FCA08D2A00B313F09E479FBD7F
F9D3AE8B8D718C4A887D9B2C50BCBD5E938009A2F6525865FA6C27F52780F5E7
4BB47CCF6138873D3350EE8CA87D95844D901F55D6C6D0A22B5C9753CE107E78
F3ED47D17FDF299BC250432625E78131054A2EB6BBF485DFBDDB80EDB9FA0E88
B9DAD3A7DD1EB003F279B2E26944130BF83E9C0C48506E556225EC36718C2BEE
FC4B35C6A4224FBDBF122D9DED21FECEF994A9CE680D18E92874131DDC256B51
2D61FADBC704C819939D5FFAF0970F27CB04637E2C0B3E5CAAE03B17323C960A
48092066818DC03F34622A648AB96FEAB16FBB48024F5FF1ABF8794B7F95DF19
B3F1759ABE74B50760DDFB950DF74E62793B9052F0BEA076519D29D4E1D8150E
8E43C67CE9F56E18816CD51298D7B7C112A6A27ACD3F2AC4617EF9DF8BC183DB
5579174EA7C9AA59F7EC6541E052708FC58F75EC60AD8D767551C91A008B8324
A9971BE97AFB2382A537205459F91E139588F659555DB9996AEC271591F9968E
973F335C7CE0B94C5799F6AED8547C076737696CD72E03BECAF60DA4A60DEEC5
8D7DBD70447CD3C549341E278283D2F081D6BECE44E0BF65E8E4FC31A232D708
F021979D3EC100001B9F9904B7BFA84D7B2ED62C7E398B4B14C28E8BA5F71FAA
826124F335D1E641D717E5877E257159DA9F3552FF02F24D254DD7A13492CD8D
EECAB869CC0A1FB00E0430DAD7A6D1838E82DD16026FCD1817669E2215D8362F
3014C9D200D0BE4650C72921638FE6BC7765D7C1B4B9658BD0149658118AF89B
7F39A3B4CC9F2CB8A5EA037067ED9784B8C52D91FD0DD63F0AB346FB0C4005B3
A5F84CAA1521DAA0417EA78FC42DCF8A2C6C4AF9E93B1CA603FC9EA5F0A08D2A
00A6F9449DE103C42A1DD8E308E96F224726D950A35FCBEE4E650B5E3C28D23D
FD027470A194EF4E2B92DA98639738AC46D637A31775CCA137870ADEBC9EAC0E
6F0B3100828DA7CEA8D3C4FE6A050EB7B6145DF525C0965E81DD3C7C0A66FA18
FA29DAD279295B80913921299EC22C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR7
%!PS-AdobeFont-1.1: CMR7 1.0
%%CreationDate: 1991 Aug 20 16:39:21
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-27 -250 1122 750}readonly def
/UniqueID 5000790 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF5B8CABB9FFC6CC3F1E9AE32F234EB60FE7D
E34995B1ACFF52428EA20C8ED4FD73E3935CEBD40E0EAD70C0887A451E1B1AC8
47AEDE4191CCDB8B61345FD070FD30C4F375D8418DDD454729A251B3F61DAE7C
8882384282FDD6102AE8EEFEDE6447576AFA181F27A48216A9CAD730561469E4
78B286F22328F2AE84EF183DE4119C402771A249AAC1FA5435690A28D1B47486
1060C8000D3FE1BF45133CF847A24B4F8464A63CEA01EC84AA22FD005E74847E
01426B6890951A7DD1F50A5F3285E1F958F11FC7F00EE26FEE7C63998EA1328B
C9841C57C80946D2C2FC81346249A664ECFB08A2CE075036CEA7359FCA1E90C0
F686C3BB27EEFA45D548F7BD074CE60E626A4F83C69FE93A5324133A78362F30
8E8DCC80DD0C49E137CDC9AC08BAE39282E26A7A4D8C159B95F227BDA2A281AF
A9DAEBF31F504380B20812A211CF9FEB112EC29A3FB3BD3E81809FC6293487A7
455EB3B879D2B4BD46942BB1243896264722CB59146C3F65BD59B96A74B12BB2
9A1354AF174932210C6E19FE584B1B14C00E746089CBB17E68845D7B3EA05105
EEE461E3697FCF835CBE6D46C75523478E766832751CF6D96EC338BDAD57D53B
52F5340FAC9FE0456AD13101824234B262AC0CABA43B62EBDA39795BAE6CFE97
563A50AAE1F195888739F2676086A9811E5C9A4A7E0BF34F3E25568930ADF80F
0BDDAC3B634AD4BA6A59720EA4749236CF0F79ABA4716C340F98517F6F06D9AB
7ED8F46FC1868B5F3D3678DF71AA772CF1F7DD222C6BF19D8EF0CFB7A76FC6D1
0AD323C176134907AB375F20CFCD667AB094E2C7CB2179C4283329C9E435E7A4
1E042AD0BAA059B3F862236180B34D3FCED833472577BACD472A49A93DBF6953
27E62C03870E8063F974AF7FAC75B50210C4D54D66B5B8C0D4614FD5611455BA
3BEA2239FC8C365D607663D509D4373E9FAC1B4DF85C9C371BCA5345FE710867
95C699C4CEF898A8195D49DDE3B8AF4AF8B6DA77AA76B49032FACCE93C3A5680
7C0901FB01381F5C4ACD0C0102D9A125D8D710C845C25A4FE6A4CC1A559529C4
83E4302DB39FC94B57089486EC697E7F4F94C5840DA6686F0F9C171A48DA948B
587E6D30BC6A4610C55BC77F3D7163DCF8D3E43D1FDAD451C3C5D509DF09A9EA
DDDBCB815806E57CC6328CD202A5184073C9C6069F6795228BBD9868F384C792
0E04BF14C1EDFDBC07D78CEFB47CA4B74C354817A7B08C375E4B23B6865C505E
3CA6D9540A0921A090D88782043E9FFEB012377F0979B1F0E075B6AFA05C8359
839CB2F2E4906F1E28918B727EB5D3C5F5B509BBE712FC73D1E2D182645E56CE
C58ADFF1CFCA77F9A8885064F8B2F12DACAC48225224069D0129AF964391B54F
26DB52E1CAB8017317CA36FF2F729C17F860981BB1184E69B4672EEBC61B965F
12E1AF3EE283268583753F6A3B6FAC90C60542A3312B5FCFB1D4D078CDA24274
2C1765D4557621BC7748C1C3A73AB20EEB26877825A49026A099ADAB32F4EF56
98FF28ADB6301F35B1B55E9AB880D452313993C909BA57CEC6942C9376BC13F9
17F93DEA99E7DD43F9D4783AE970E955D2ED587B77ECE43DCAB0ACFA16A2197D
E3D853EA9295B8CDB2786EDC4D061C632A8548CEAC7919302742BC63626C4760
1611B677005823B7D35EF906146BEDD655D121DCEF12B62D19937A5853D8C24C
5B24FF693D71C3D31D3D40981B94F9528C904A16CC80284B7319DAEBEF4BE8C0
AF2B08D1FE8B3D35A6CDA45672D11E816B5C47D0085E362E172E356B2533C05E
65ADF0573163CEBAD699609A0EFF46B62EFE45DD8CF146F703B0A863AE515A4B
7D4160FBA548BE717364125B8C51E690F4A04631CD0D70794D285FFF765AFD45
CE9AAC876D4FE42D0EAC4B8D4339B72412BA25852A17A6969146154DB006ED30
EC7F1C4AE4F30275E3C604BC6C046E5BE640B992CD2719F53E2E90BC429FE3BC
AE4DB2A36EFDD8FEA25ED6947D9CCFA66CE5102CBA7CD5EBD1F2ABC172B8DE97
BFE7BC6EDB618A90618DD68B1758B9ABD7EC7C1B0AAA6E455EE27EB2CEF69587
9FD86A5F9F42757FED7A5AC4895CC2CE0D3D88A1FA4F0EBC46016F2C361F61D9
40D2615547941F7AF9DDE2E47DD79C4D72B7CC0E7ACA60DEDFCE7686B6FF489F
15D45EC58B378DB601059F087A7C373E823A96878D5D85DE924C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.1: CMMI10 1.100
%%CreationDate: 1996 Jul 23 07:53:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-32 -250 1048 750}readonly def
/UniqueID 5087385 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D456A09920001A3D2199583EB9B84B4DEE08E3D12939E321
990CD249827D9648574955F61BAAA11263A91B6C3D47A5190165B0C25ABF6D3E
6EC187E4B05182126BB0D0323D943170B795255260F9FD25F2248D04F45DFBFB
DEF7FF8B19BFEF637B210018AE02572B389B3F76282BEB29CC301905D388C721
59616893E774413F48DE0B408BC66DCE3FE17CB9F84D205839D58014D6A88823
D9320AE93AF96D97A02C4D5A2BB2B8C7925C4578003959C46E3CE1A2F0EAC4BF
8B9B325E46435BDE60BC54D72BC8ACB5C0A34413AC87045DC7B84646A324B808
6FD8E34217213E131C3B1510415CE45420688ED9C1D27890EC68BD7C1235FAF9
1DAB3A369DD2FC3BE5CF9655C7B7EDA7361D7E05E5831B6B8E2EEC542A7B38EE
03BE4BAC6079D038ACB3C7C916279764547C2D51976BABA94BA9866D79F13909
95AA39B0F03103A07CBDF441B8C5669F729020AF284B7FF52A29C6255FCAACF1
74109050FBA2602E72593FBCBFC26E726EE4AEF97B7632BC4F5F353B5C67FED2
3EA752A4A57B8F7FEFF1D7341D895F0A3A0BE1D8E3391970457A967EFF84F6D8
47750B1145B8CC5BD96EE7AA99DDC9E06939E383BDA41175233D58AD263EBF19
AFC0E2F840512D321166547B306C592B8A01E1FA2564B9A26DAC14256414E4C8
42616728D918C74D13C349F4186EC7B9708B86467425A6FDB3A396562F7EE4D8
40B43621744CF8A23A6E532649B66C2A0002DD04F8F39618E4F572819DD34837
B5A08E643FDCA1505AF6A1FA3DDFD1FA758013CAED8ACDDBBB334D664DFF5B53
956017667585B4BAAAD7FDF53D9BB21648DA99254AF6AD61F5DBA69F2A79404D
6BE2370B4C22C3E85CBB9F983434E0A23BBCF23B085BEB50892EC4EC706BC499
4E5A163679B59A690CC0AA9AA23D3D7DD98521873EADFEE5A994F0C5A49912F0
5A137F69D543459DA004BE515795EC1F94C5CBA81C2E777139E018D6D6EB1ACC
94FD4DEF9B77501E096A8C9C2E5C927D77544C926071A7A1E655705A82B73A15
F2F99A5CB0571D9A73D7A3E51042D799502712C30AF136797927E872C582B51A
644B228B1FC55629522B228F16064F89A6CF5B5868AD1F33BCA8940DDF99F717
AAA8A1A73E9129656350DE9B363B0F992EA8C6A43442E5CF9A6559EE447EED67
960D23E239AEBB4F58E53CCEB5EE23B18AA898C2301DFD95CEF0EA11AF1059F2
9419B8B21757BCC7967F28D124909DBE64EE12C4801E61FFBD4C0778730361AD
2BEDC407C991C93CF5AE846E236DA33C7EC07B9A0EAFB0E3634C4BCD177DC1DE
C784A7B40F8DD4F8E66E4799A8E058F2CAD7DDD9A0AB0C0EC29C2E1E4E882477
FF59CA032D69616A14586BF181CB035A1543420CBDF4813B882936BC4B79BBF3
D9DAAB0C65146863FB6808FB4780F70DA6A6B9C3233A22DEC6D199908BB6D313
54B589219A3A3E10D59B8D5500A23CE0A98ECFFC6B678C80FD5EBC25D7F14804
30B09295FB24B3F2449013F9893D700754A25D9880929653513BB0BD254C7BB9
9BCD527ADD15A798CB0409BDB32B054A685EA0C051A594264C15AB90A43B3F20
D735C3D6A62EFB6E6E0B0D8AA5093E8B85AB8EC88C66AC1F7887BD3CB0BE64FE
EB1DF9B00D37DEDCC57D0343F209DCC391FB6221BB433E80673E462D40FB8B3A
A75B4D87C5749650DC97E7BB418513C60AED754ABF5BB64BC66BED42883E0272
E33F8F4803EEFA52011C1B3122217AC0F2E47A05C1609B7776E76156EC0AC4AB
936DFA9082CC8AEA3B4E0EE26E71CC7A91727F285C716D321C0768FFF9004D24
F19E3F180828DEE4CA0D72C2CEA087D2FE372AB0F7E82003963FFEC2D7B12731
DA75FC02017A499212E238978D925C74CFBF443E2747B0E59DCD575F80590BCF
C07A505677B107CBCEDF9EFC6DE5B5356288B798D5366362A57984937D6F1D7A
12924EF0484461608129DABA45C2E2357B2DC8A25EAE136084580BC4DF0E4904
AD4B5D8BF9D5377FD6F016CC54DF2C74C27E05A04D96E51AE74CC33C875121F4
E652745BA49DCE34035478DE3C2C1734F9188DD2D89375A95576CD37A0DD19F5
4967D3420EE9A4F485AB9848B381F3A6D44336D6FD8AB4D0A8274CA7AD8F56F8
879F02520F5978A2A59DFD0271B695E8AC78270B9BB25A02664BAE2A76E28448
C4FEED9BFEF97C31A4C97FF6DE6B00A5676F07D88E604A25BF7569FB6338A96F
C6855DAB0CEAA9EC101A414E61614E7605B1F8D070D8C1EBA6F060C39D70154B
B1C2182FB0DEA587A83D9FAAE2D679FF7BCB3BB4E3B6873FBE7FE1EACC68A7AA
7E2A922BA6E42F534CCFCF93D6E65707E1485FAABA35C912A8CB53C33B90A8D1
EF87F3D35BE42C2A2E5CB5B08ADD08D7F45CF78755BEC14CBF2694B0D4B97A8B
F50C87FDC72E2BF2B9729DEA39836D7FF64C21B0032DE4D9C67E858D3A2FE239
A086AD8D956BB296DDE607895AC23F16D71BBA86BD17380A8739AF6DFA70B745
869BC748158743398E64174493A774478578DACCA6CACD5123FBD04F2809AD21
724D3C233DC1EF3A79D530DE85AB4A454D63F4F6F13A33AEAFE556202FBAB39F
E517F3946233C9A83F8FBE5021C508392DB352B1243D8F57D6C26FA3B0F67B0D
EA955195DE58D48DD6E630F503404EFB7DBFD22D636391BB6B5D76F28D04620F
608DF6C240E303C02ADDBB995CF5671A27FDEA59A03DBA1E30460F04F8CFDA82
782B249EECECD3C277652779BA1307FCE81E81214C0092CBABE335BBA32EBE86
56D0ED6FA7E5D0187058413F47C5F9DAB2E497370959D8B30A85648A3F625005
82B8C8C624BBD202795DA6262BAB13D8681FD330565DE72A0C14A8984C673D76
81DA13E513E97EFEBB46CCAA4E3C9F35E45F78B212EFC42D5AFA1C896D0B0FBC
F549D7CD2D6F95CDD00B597E2AD5793F2D44C8F32ECA331478A07A7FEE1A9F5F
9C497C9B0EEA91778CDB12FA0CAD6999BBFE0FD1A5D5C4534FCD755745A6B0C5
862E69AF85AE41E18F90E979852ECBB41CCE6E26480F75C2E48DA6F08260C557
60F0225A0258F770E354DCDDEEF6DA4F5174E83E93AD13D0287EB2E9CA658FFE
7A0F0E22747E701BFDAB92712E5E032C9D1433C83C6C101F0322EA0CB42446BB
8A275D6F81C2469F1540D6CFC10343AE0A1F80639EE262803BB8701A2CF90863
9CA6ABEC6E77B48DCD4EC3E112E90280CF551B51642056B4823D224E57BF179E
E1B954B6720A6CBC4888F50318401C99A7A43C7AE1EBBC7E414C01ED6DB21B10
2F589038D10F11FAC518EDBEBF1C83B10FAE44E66B1DC6973941A428CA161A9D
F89839E4F7C969DB82D560975A6A0AE96A8736676B692A39C7DAF49CB16C58BD
D6841E6FFDAC6E43153F0ADD825FF8D39C548DA94CA8F0FE14874A85DF0AF890
EF21C5E94C1905D562CB6A1AB50E4C03CEABDDE203568B5655480244648BA307
FE384DA4B8BCDA7FF474A55F54F9E48465B127C9C076494B389A0E9C9C99C96D
65256455CE4C1750F013AA8ED08CF1AF3EEA7587DBD0CAAEA57660AF9B041C6B
F0BEBF6635DC5B0B07376638DF151A0D29D2AC02238B58318607D5AF6744625A
E296C7F5CEF438730E6BBE22488B40D01BD52FD9EA5CF7E4DF21088C8BC3B3E8
96166EDDBDA9716E50CADFD16430D9FBF7E8620480A40EDB88A72033FFBD4E55
2D27A5B1FBDAEBDB6A71948F052C449C1FF351C5DF8E9A8FE049C37F3B86C1B9
C3508326B5A46796B29DCD027A2E0D5194B64898BAE8B9DCBBB35D006E8F5188
1AFAC959DA7EF81AB645C19D793D1EB7F807182FD34D4A9AF78F45E26B429BB8
4FBDB83C8F054A0AD0472D500C0B28EF203899B30F5593BBA1C4E5D66085FCA2
A41B64912FE4A7C4BEA92E8A53508083754A2AFF4367E3FE7276F4D0CDD05689
1E8E7302B14122159027219268EAD6FD5852AB8908CD42F9184D402E86A82A09
3BCCA6C1D6390E7D6C4263D8168F8E15B7CE88DA0827DB46B6CD88B78D468A12
C456A4B801A0080196E6681F5A0615AA2F0FF93B34E42DBD9FD8944ABA7D8F8D
8FAA0D64C8F60DE9B986961DF2930921CAF7DFF42B5540F2343E1000AC8EB454
623AD3D2634A8943597ACC0BCA981D8AE957B4156F590B0189FB1263FF6A1425
4093691E5CF1A5A36451A8921BF769F290A5A09B3BD2990D7A4D143BE6BD71FF
32EF643BC5E6C26A290BCAF2FEDF9A3D940A752BF8BECEEBB79A236C274D43B7
39968C5600E8C2F017A76C9F102ED9552C3177A603E0CB7CB3E4ED32996A786F
D4A8CAC43EC14B28CF7409EB8F24E0408ED686089457B20691C23D9D3220758C
1F81A1F21D329B00C970CA8EA302B5B0057010F21D53CAC1EAC0981A7E87596D
A69AF857A58AEF5B873AAF91BB3DBBC2E0083B3F29E7D4FBE688F4A49C498FFA
06BC4EFCA2DDA409F9566D423A9E1432B90D8080F4596E020A68D39B31660191
B16ACD7EE34493C20D0EE72BC8EB96876B35498EB36819844A1F8AB32C2B39E8
D0449395333F8A56014A56B51CEA337027018D18F5ED98D1E1E264B38515FE7D
307DD1B1F53E9FCA7C551FDA76496DA887F4F4A317BE26E4A0740161816B4C30
A9F87B4DBC5D0E8F06A8FBEF35AA7CF39E08E8B69F75D30FD65726E365413A87
DEF40F8F1F930D7E81ECD57A9411B6BC7082ED729B26165111EB57AC180351B3
302BF1B0468BB24F24E2EF5BF74204D3E2B56321AB7B018898BAFD3C07CEC07B
47C46CB823EB1CA3EE6EAAD0ED9D41EB3F9FF4AFCE8BD905996C7F65366DCFF8
C437F2952C1ACB9E683776BC486BDB9093C273AF49A4A167300B9B0FC06281F0
1F0E08F6F79E0D818B8A19582DE4591D9A475D5F48D3C05AEDB244EA16F19F86
981A248D8C33A4031ED8C987B0E2CE616415FA21E96CF680B52B4BADBB5C981E
6B1206B7FFBB8A6960A4101CB486A1AD4296C57CDAE2637B907925D2D83F7695
CD4E759873A438F0401BE2A205F337139CE00E04792A153414A175A5966B9A46
47C1D8D36FAC7E04C51A15BD1EC86ACF8CF99D9025FB365EC825BEF7D22CC5BC
01276EFAA3AF463B0A4946DCAF8272442139C6DA8B1C7DB98E8E81250A03B82F
594D8823F2DA776DC64979FF47FE4DA0D483725F01D5FE3365E618CFA0039D97
57F6093573024A008AD0371C51EE972FE4E1DF80767ECF36E84CE34DF31B05E7
B1ED44048CEC2AF8DFBCB33DF1DE31331B5511E754DA0BD73393A857DB9E2BEB
D53160C34DB16C91A79D0B0A01074C691D5F82E74CA35BBFDBD3F0DDA14945F0
ACB16BD5B56862E9C3ED19CCFFEDF33BAB3CC61D032822BCBDBB0CD8998A2B32
467EBD845E1564F4A0B4008D461BC07B8FCD4AD83B9618966BD7921979990AD1
4357BF0534B7D7B18CE014F1379496B93B8FF15B9B2A2093A444CAAAAA55D3D6
90E28C5B4CBF0E5F1047111E8067FDE6E7089E8BBC079FF9DAB1EC48C23704D6
D840B2410E7C5F5C2CC9DD3CB51E2DE29F60C5772EEAA86D60140753F1DA7912
F977B68180E468A0E9D99A19CE93EB3EEDDBC7E9A262AC2445CC1846698DFE9F
E31FEAE63391E47AA3E475C702085BAB38EC2280C9B93B34CD19D97B0D93A0E8
A2B1AB60B37F03AD2A937E8CF9CBC75BD1B427030754960D57B119E48EFDE1FB
43204A00CC0AC90529BA31B2725F9B066D1BA962FAB80EBE5DA5B99AEC20D610
61A2F58A07D55BE122C8B451F33F1EBBDD02C5C31A750043CE5C0BB20E846375
7B0042C0A49FEF87FB959431CF6F4A79178E2FEDA33FEE822428F96AFB3CCAD7
47C9D801BA82EF0D75CF0796C3187F064DABA3E273782C5863151C3C03FC1BB2
48E479C7629CCFC10CC0435C99C186BD3148EC91CCB7FA4108A9B3F9F41F617B
7AB8F8DBBFA00D00D5CEAA032233F3E972B2E019E6BB1420FB15791F7F41839C
2CFC76B4B4767A18AA7F846660B579F69E515E0684277E220AC2B04F53430E76
33E85056671EA7F68612BA602586952CEB07E38CD4AB04512CE05A1F9D11EC12
938380A61DF25A5E2926ACB62C0A0D082B3896116CC1601EFD1C10A7B684EC48
D637655CD219C30E9B6039C3977FF697EB0E80237E79FAD5762AD6C376463CEA
9F4831
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 39158280 55380996 1000 600 600 (main.dvi)
@start /Fa 136[40 1[40 40 1[40 1[40 1[40 40 40 2[40 40
40 40 40 40 40 1[40 38[40 4[40 5[40 40 40 45[{
 TeXBase1Encoding ReEncodeFont }21 66.4176 /Courier rf
/Fb 206[25 49[{ TeXBase1Encoding ReEncodeFont }1 49.8132
/Times-Roman rf /Fc 206[29 49[{ TeXBase1Encoding ReEncodeFont }1
58.1154 /Times-Roman rf /Fd 133[25 25 25 25 25 25 25
25 25 25 25 25 25 25 25 1[25 25 25 25 25 25 25 25 25
25 1[25 1[25 1[25 2[25 25 25 25 25 25 25 1[25 25 25 25
25 1[25 25 1[25 25 25 25 25 25 25 2[25 25 1[25 1[25 25
25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 4[25
35[{ TeXBase1Encoding ReEncodeFont }71 41.511 /Courier
rf /Fe 192[42 9[42 42 1[42 50[{ TeXBase1Encoding ReEncodeFont }4
83.022 /Times-Bold rf /Ff 133[35 35 35 2[35 35 3[35 35
35 35 35 1[35 35 1[35 35 35 35 35 1[35 1[35 1[35 1[35
6[35 35 2[35 35 35 35 35 1[35 35 2[35 35 3[35 5[35 4[35
3[35 35 35 35 2[35 2[35 35 4[35 35[{ TeXBase1Encoding ReEncodeFont }43
58.1154 /Courier rf /Fg 194[58 11[38 49[{
 TeXf7b6d320Encoding ReEncodeFont }2 58.1154 /CMBX7 rf
/Fh 167[120 88[{}1 83.022 /CMEX10 rf /Fi 141[39 16[46
35[74 19[37 37 40[{ TeXf7b6d320Encoding ReEncodeFont }5
83.022 /CMBX10 rf /Fj 145[48 3[30 27 105[{}3 58.1154
/CMMIB7 rf /Fk 143[50 9[47 31[57 10[27 59[{
 TeXaae443f0Encoding ReEncodeFont }4 83.022 /CMMIB10
rf /Fl 134[34 10[41 3[27 23 43[34 2[20 58[{
 TeXaae443f0Encoding ReEncodeFont }6 58.1154 /CMMI7 rf
/Fm 194[65 10[42 42 42 4[65 1[32 32 40[{
 TeXf7b6d320Encoding ReEncodeFont }7 83.022 /CMR10 rf
/Fn 133[50 50 50 1[50 50 50 50 50 50 50 50 50 50 50 2[50
50 50 50 50 50 50 50 50 1[50 35[50 4[50 3[50 50 4[50
2[50 50 40[{ TeXBase1Encoding ReEncodeFont }31 83.022
/Courier rf /Fo 147[23 10[42 97[{ TeXBase1Encoding ReEncodeFont }2
83.022 /Times-Italic rf /Fp 133[44 50 2[50 55 33 39 44
1[55 50 55 83 28 2[28 55 50 1[44 55 44 55 50 14[72 1[61
2[94 66 4[78 2[72 1[66 72 6[33 5[50 50 50 50 2[25 43[55
2[{ TeXBase1Encoding ReEncodeFont }35 99.6264 /Times-Bold
rf /Fq 255[52{ TeXbbad153fEncoding ReEncodeFont }1 58.1154
/CMSY7 rf /Fr 143[69 70[83 16[65 21[65 1[65{
 TeXbbad153fEncoding ReEncodeFont }5 83.022 /CMSY10 rf
/Fs 199[33 3[33 33 33 33 49[{ TeXf7b6d320Encoding ReEncodeFont }5
58.1154 /CMR7 rf /Ft 133[39 41 47 5[37 1[42 1[50 73 2[34
29 2[41 4[44 17[63 67 7[53 8[42 1[23 23 23[39 34[{
 TeXaae443f0Encoding ReEncodeFont }18 83.022 /CMMI10
rf /Fu 87[28 16[83 42 1[37 37 24[37 42 42 60 42 42 23
32 28 42 42 42 42 65 23 42 23 23 42 42 28 37 42 37 42
37 3[28 1[28 1[60 60 78 60 60 51 46 55 1[46 60 60 74
51 60 32 28 60 60 46 51 60 55 55 60 5[23 23 42 42 42
42 42 42 42 42 42 42 23 21 28 21 47 1[28 28 28 65 1[42
32[46 46 2[{ TeXBase1Encoding ReEncodeFont }81 83.022
/Times-Roman rf /Fv 134[60 1[86 1[66 40 47 53 1[66 60
66 100 33 66 1[33 1[60 40 53 66 53 66 60 14[86 1[73 3[80
2[47 1[93 3[86 1[86 6[40 3[60 60 60 60 60 60 46[66 2[{
 TeXBase1Encoding ReEncodeFont }35 119.552 /Times-Bold
rf /Fw 134[50 3[50 28 39 33 1[50 50 50 78 28 50 28 28
50 2[44 50 44 1[44 9[94 2[61 55 66 1[55 1[72 89 1[72
39 33 72 72 1[61 1[66 1[72 92 6[50 50 2[50 1[50 50 50
50 1[25 33 25 2[33 33 40[{ TeXBase1Encoding ReEncodeFont }46
99.6264 /Times-Roman rf /Fx 134[72 2[72 72 40 56 48 2[72
72 112 40 2[40 1[72 48 64 1[64 72 64 13[80 96 1[80 2[128
5[104 68[80 2[{ TeXBase1Encoding ReEncodeFont }23 143.462
/Times-Roman rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 2 789 a Fx(Massi)l(v)n(ely)34 b(P)n(arallel)g
(Processors)g(Generator)f(for)i(Recon\002gurable)e(System)1203
1029 y Fw(Tsuyoshi)23 b(Hamada,)i(Naohito)e(Nakasato)1226
1146 y(Computational)g(Astrophysics)g(Group,)820 1262
y(The)h(Physical)g(and)h(Chemical)g(Research)h(Institute)e(\(RIKEN\),)
1305 1378 y(W)-8 b(ak)o(o,)25 b(Saitama)g(351-0198,)f(Japan)1579
1494 y(thamada@rik)o(en.jp)1630 1689 y(March)h(13,)f(2005)0
1993 y Fv(Abstract)0 2217 y Fu(W)-7 b(e)31 b(ha)n(v)o(e)e(de)n(v)o
(eloped)e(PGR)k(\(Processors)e(Generator)f(for)h(Re-)0
2316 y(con\002gurable)14 b(system\))i(package,)f(a)i(softw)o(are)e
(which)h(generates)0 2416 y(lo)n(w-le)n(v)o(el)h(design)g(of)h(the)g
(pipeline)f(processors)h(and)f(communi-)0 2516 y(cation)31
b(softw)o(are)g(for)f(FPGA-based)h(accelerator)f(\(FB)m(A\).)i(An)0
2615 y(FB)m(A)24 b(typically)e(consists)h(of)g(one)f(or)h(multiple)f
(FPGAs)i(\(Field-)0 2715 y(Programmable)17 b(Gate)k(Arrays\))e(and)g
(local)h(memory)-5 b(.)23 b(Here,)d(the)0 2814 y(term)30
b(\223Field-Programmable\224)e(means)i(that)h(one)f(can)g(re)n(write)0
2914 y(the)g(logic)g(implemented)f(to)h(the)h(chip)f(after)g(the)g
(hardw)o(are)f(is)0 3014 y(completed,)i(and)f(therefore)f(a)i(single)g
(FB)m(A)g(can)g(be)f(used)h(for)0 3113 y(calculation)15
b(of)h(v)n(arious)f(functions,)g(for)g(e)o(xample)g(pipeline)g(pro-)0
3213 y(cessors)20 b(for)g(gra)n(vity)-5 b(,)18 b(SPH)j(interaction,)d
(or)i(image)g(processing.)0 3313 y(The)i(main)f(problem)f(with)j(FB)m
(As)g(is)g(that)f(the)g(user)g(need)f(to)h(de-)0 3412
y(v)o(elop)27 b(the)h(detailed)f(hardw)o(are)g(design)g(for)h(the)g
(pipeline)f(pro-)0 3512 y(cessors)c(to)f(be)h(implemented)d(to)j
(FPGAs.)33 b(In)22 b(addition,)g(she)g(or)0 3611 y(he)k(has)h(to)f
(write)h(the)f(control)f(logic)h(for)f(the)i(pipeline)e(proces-)0
3711 y(sor)m(,)h(communication)d(and)h(data)h(con)m(v)o(ersion)e(softw)
o(are)i(on)g(the)0 3811 y(host)30 b(processor)m(,)g(and)f(application)f
(program)g(which)h(uses)h(the)0 3910 y(de)n(v)o(eloped)d(processor)-5
b(.)52 b(These)30 b(require)e(detailed)h(kno)n(wledge)0
4010 y(of)17 b(hardw)o(are)f(design,)h(a)g(hardw)o(are)f(description)g
(language)f(such)0 4110 y(as)26 b(VHDL,)f(the)h(operating)d(system)j
(and)e(the)i(application,)e(and)0 4209 y(amount)h(of)g(human)g(w)o(ork)
g(is)i(huge.)42 b(A)26 b(relati)n(v)o(ely)f(simple)h(de-)0
4309 y(sign)16 b(w)o(ould)f(require)g(1)h(person-year)d(or)j(more.)22
b(The)16 b(PGR)h(pack-)0 4408 y(age)35 b(generates)f(all)h(necessary)f
(design)h(descriptions,)i(e)o(xcept)0 4508 y(for)27 b(the)h
(application)e(softw)o(are)i(itself,)i(from)c(a)j(high-le)n(v)o(el)c
(de-)0 4608 y(sign)16 b(description)f(of)h(the)h(pipeline)e(processors)
h(in)g(the)h(PGR)g(lan-)0 4707 y(guage.)33 b(The)23 b(PGR)i(language)c
(is)k(a)f(simple)f(language,)f(special-)0 4807 y(ized)k(to)h(the)g
(description)e(of)h(pipeline)f(processors.)43 b(Thus,)28
b(the)0 4907 y(design)g(of)h(pipeline)f(processors)g(in)h(PGR)h
(language)d(is)j(much)0 5006 y(easier)h(than)g(the)g(traditional)f
(design.)57 b(F)o(or)31 b(real)g(applications)1988 1993
y(such)d(as)g(the)f(pipeline)g(processors)f(for)h(gra)n(vitational)f
(interac-)1988 2093 y(tion,)g(the)e(pipeline)g(processors)f(generated)g
(by)h(PGR)i(achie)n(v)o(ed)1988 2192 y(the)c(performance)d(better)j
(than)f(that)h(of)g(hand-written)d(code.)30 b(In)1988
2292 y(this)20 b(paper)f(we)h(present)f(a)h(detailed)f(description)f
(of)h(PGR)h(pack-)1988 2392 y(age.)1988 2709 y Fv(1)120
b(Intr)n(oduction)1988 2907 y Fu(After)16 b(pioneering)e(de)n(v)o
(elopment)f(of)j(Splash-1/2)f([1)o(],)i(a)f(number)1988
3007 y(of)27 b(FPGA-based)g(recon\002gurable)e(system/accelarator)h
(\(here-)1988 3107 y(after)g(FB)m(A\))h(such)f(as)h(PRISM)f([9],)h
(PeRLe-0/1)e([10)o(])h(are)g(pro-)1988 3206 y(posed,)43
b(de)n(v)o(eloped)37 b(and)h(widely)h(used)g(in)g(se)n(v)o(eral)f
(research)1988 3306 y(area.)45 b(Especially)-5 b(,)27
b(it)h(has)f(been)f(sho)n(wn)g(that)h(an)g(FB)m(A)h(is)f(v)o(ery)1988
3405 y(ef)n(fecti)n(v)o(e)h(for)h(problems)f(which)h(only)f(need)h
(bit-operation)e(or)1988 3505 y(inte)o(ger)n(-operations)37
b(such)k(as)g(pattern)e(matching,)44 b(or)c(image)1988
3605 y(recognition,)22 b(etc.)34 b(T)-7 b(o)24 b(be)f(more)g
(speci\002c,)h(a)f(pattern)g(matching)1988 3704 y(between)18
b(tw)o(o)g(strings)g(can)g(be)g(easily)g(implemented)e(by)i(the)g(dy-)
1988 3804 y(namic)28 b(programming)d(algorithm)i([7)o(])i(as)g(a)f
(logic)g(on)g(FPGAs)1988 3904 y([1].)65 b(Their)33 b(system)h(ha)n(v)o
(e)f(achie)n(v)o(ed)f(280)h(times)h(better)g(per)n(-)1988
4003 y(formance)25 b(than)h(a)h(supercomputer)d(system)i(\(CM-2)g(with)
h(64k)1988 4103 y(nodes\))19 b(at)i(that)f(time.)2071
4209 y(There)30 b(are)h(tw)o(o)g(types)f(of)h(an)f(FB)m(A;)i
(standalone)e(type)g(and)1988 4309 y(co-processor)20
b(type.)28 b(In)22 b(the)f(case)i(of)e(standalone)f(type)h(system,)1988
4408 y(all)27 b(arithmetic/computational)c(operations)h(are)i
(implemented)1988 4508 y(as)g(logics)f(on)g(FPGAs)h(and)f(w)o(orking)e
(by)i(itself.)40 b(On)25 b(the)g(other)1988 4608 y(hand,)19
b(co-processor)e(type)j(system)g(beha)n(v)o(es)f(as)h(an)g(add-in)e
(pro-)1988 4707 y(cessor)33 b(to)g(a)g(con)m(v)o(entional)c(computer)i
(\(host)h(computer\).)60 b(In)1988 4807 y(most)22 b(cases,)h(a)f(host)g
(computer)e(and)h(a)h(co-processor)e(type)h(sys-)1988
4907 y(tem)28 b(are)f(connected)e(by)i(an)g(e)o(xternal)f(b)n(us,)i
(e.g.,)h(PCI,)e(PCI-X,)1988 5006 y(or)f(PCI-Express)e(etc.,)j(and)e
(the)h(host)f(and)g(the)h(FB)m(A)h(w)o(ork)e(co-)p eop
end
%%Page: 2 2
TeXDict begin 2 1 bop 8 1274 a
 currentpoint currentpoint translate 0.99033 0.99033 scale neg exch
neg exch translate
 8 1274 a 8 1274 a
 gsave currentpoint currentpoint translate +0 neg rotate neg exch neg
exch translate
 8 1274
a @beginspecial 69 @llx 621 @lly 298 @urx 722 @ury 2290
@rwi @setspecial
%%BeginDocument: ./mat/CPU-BOARD.eps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 69 621 298 722
%%Title: fba
%%CreationDate: Wed Dec  8 14:28:41 2004
%%Creator: Tgif-4.1.40 by William Chia-Wei Cheng (william@cs.UCLA.edu)
%%ProducedBy: (unknown)
%%Pages: 1
%%DocumentFonts: (atend)
%%EndComments
%%BeginProlog

/tgifdict 53 dict def
tgifdict begin

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/TGAT % tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/TGMAX
 { exch dup 3 1 roll exch dup 3 1 roll gt { pop } { exch pop } ifelse
 } def
/TGMIN
 { exch dup 3 1 roll exch dup 3 1 roll lt { pop } { exch pop } ifelse
 } def
/TGSW { stringwidth pop } def

/bd { bind def } bind def

/GS { gsave } bd
/GR { grestore } bd
/NP { newpath } bd
/CP { closepath } bd
/CHP { charpath } bd
/CT { curveto } bd
/L { lineto } bd
/RL { rlineto } bd
/M { moveto } bd
/RM { rmoveto } bd
/S { stroke } bd
/F { fill } bd
/TR { translate } bd
/RO { rotate } bd
/SC { scale } bd
/MU { mul } bd
/DI { div } bd
/DU { dup } bd
/NE { neg } bd
/AD { add } bd
/SU { sub } bd
/PO { pop } bd
/EX { exch } bd
/CO { concat } bd
/CL { clip } bd
/EC { eoclip } bd
/EF { eofill } bd
/IM { image } bd
/IMM { imagemask } bd
/ARY { array } bd
/SG { setgray } bd
/RG { setrgbcolor } bd
/SD { setdash } bd
/W { setlinewidth } bd
/SM { setmiterlimit } bd
/SLC { setlinecap } bd
/SLJ { setlinejoin } bd
/SH { show } bd
/FF { findfont } bd
/MS { makefont setfont } bd
/AR { arcto 4 {pop} repeat } bd
/CURP { currentpoint } bd
/FLAT { flattenpath strokepath clip newpath } bd
/TGSM { tgiforigctm setmatrix } def
/TGRM { savematrix setmatrix } def

end

%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1

%%PageBoundingBox: 69 621 298 722
tgifdict begin
/tgifsavedpage save def

1 SM
1 W

0 SG

72 0 MU 72 11 MU TR
72 128 DI 100.000 MU 100 DI DU NE SC

GS

/tgiforigctm matrix currentmatrix def

% BOX
0 SG
GS
   10 SM
   GS
      NP 128 128 M 256 128 L 256 240 L 128 240 L CP
      3 W
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      164 192 M
      GS
            0 SG
            /Helvetica-Bold FF [24 0 0 -24 0 0] MS
            (CPU) SH
      GR
   GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 392 128 M 520 128 L 520 240 L 392 240 L CP
      3 W
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      424 192 M
      GS
            0 SG
            /Helvetica-Bold FF [24 0 0 -24 0 0] MS
            (FPGA) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      272 184 M
      0 100 atan DU cos 12.000 MU exch sin 12.000 MU RM
      0 100 atan DU cos 12.000 MU 372 exch SU
      exch sin 12.000 MU 184 exch SU L
   TGSM
   3 W
   S
   1 W
GR
GS
   TGSM
   NP
      272 184 12.000 5.000 -100 0 TGAT
   1 SG CP F
   0 SG
   NP
      272 184 12.000 5.000 -100 0 TGAT
   CP F
GR
GS
   TGSM
   NP
      372 184 12.000 5.000 100 0 TGAT
   1 SG CP F
   0 SG
   NP
      372 184 12.000 5.000 100 0 TGAT
   CP F
GR

% TEXT
NP
0 SG
   GS
      1 W
      272 216 M
      GS
            0 SG
            /Helvetica-Bold FF [17 0 0 -17 0 0] MS
            (data transfer) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      460 284 M
      GS
        GS
        0
            /Helvetica-Bold FF [17 0 0 -17 0 0] MS
            (heavy calculation) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Helvetica-Bold FF [17 0 0 -17 0 0] MS
            (heavy calculation) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      192 276 M
      GS
        GS
        0
            /Helvetica-Bold FF [17 0 0 -17 0 0] MS
            (miscellaneous) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Helvetica-Bold FF [17 0 0 -17 0 0] MS
            (miscellaneous) SH
      GR
      0 20 RM
      GS
        GS
        0
            /Helvetica-Bold FF [17 0 0 -17 0 0] MS
            (calculation) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Helvetica-Bold FF [17 0 0 -17 0 0] MS
            (calculation) SH
      GR
   GR

GR
tgifsavedpage restore
end
showpage

%%Trailer
%MatchingCreationDate: Wed Dec  8 14:28:41 2004
%%DocumentFonts: Helvetica-Bold
%%EOF

%%EndDocument
 @endspecial 1916 1274 a
 currentpoint grestore moveto
 1916 1274 a 8 1274 a
 currentpoint currentpoint translate 1 0.99033 div 1 0.99033 div scale
neg exch neg exch translate
 8 1274
a 79 1456 a Fu(Figure)19 b(1:)25 b(Co-processor)19 b(type)h
(Recon\002gurable)e(System.)0 1814 y(operationally)30
b(\(Figure)h(1\).)61 b(In)32 b(this)h(case,)i(only)d(a)h(part)e(of)h(a)
0 1914 y(problem)20 b(that)h(should)f(be)h(a)h(most)f(computationally)e
(dominant)0 2013 y(part)26 b(of)h(the)f(problem)f(is)j(implemented)d
(as)i(logics)g(on)f(FPGAs)0 2113 y(and)g(a)g(remaining)f(part)h(of)g
(the)g(problem)f(is)i(processed)e(by)h(the)0 2213 y(host)c(computer)-5
b(.)28 b(F)o(or)22 b(e)o(xample,)e(in)i(astrophysical)e(man)o(y-body)0
2312 y(simulations,)f(we)g(inte)o(grate)g(equations)f(of)h(motion)f
(for)h(gra)n(vita-)0 2412 y(tionally)i(interacting)g(particles,)h(and)g
(a)h(most)f(computationally)0 2512 y(dominant)j(part)i(of)f(the)h
(problem)e(is)j(computation)c(of)j(gra)n(vita-)0 2611
y(tional)15 b(interaction)f(that)i(has)g(O\()p Ft(N)1008
2581 y Fs(2)1044 2611 y Fu(\))g(dependenc)o(y)d(on)i(a)h(number)0
2711 y(of)24 b(particles)h Ft(N)9 b Fu(.)38 b(The)25
b(computation)d(of)i(gra)n(vity)g(is)i(a)f(part)f(that)0
2810 y(should)16 b(be)g(implemented)f(on)h(an)g(FB)m(A)i(and)e(other)g
(part)g(\(e.g.,)g(in-)0 2910 y(te)o(gration)j(of)g(equations)g(of)h
(motion\))f(is)i(computed)d(by)i(the)g(host)0 3010 y(computer)-5
b(.)28 b(In)21 b(this)h(paper)m(,)e(we)i(present)f(our)g(results)h(of)f
(consid-)0 3109 y(erable)e(ef)n(forts)g(to)g(mak)o(e)g(use)h(of)g(an)f
(FB)m(A)i(easy)-5 b(.)24 b(Especially)-5 b(,)19 b(we)0
3209 y(ha)n(v)o(e)29 b(made)h(a)g(special)g(attention)f(to)h(numerical)
f(simulations,)0 3309 y(such)17 b(as)h(the)f(man)o(y-body)d(problem)h
(as)j(e)o(xplained)d(abo)o(v)o(e,)h(on)h(an)0 3408 y(FB)m(A.)25
b(W)-7 b(e)25 b(are)e(no)n(w)g(de)n(v)o(eloping)e(a)j(softw)o(are)g
(package)e(named)0 3508 y(as)f(Processors)f(Generator)f(for)h
(Recon\002gurable)e(system)i(\(PGR)0 3607 y(package\))83
3711 y(There)32 b(are)i(three)f(moti)n(v)n(ations)e(which)i(let)h(us)g
(to)f(start)h(the)0 3811 y(de)n(v)o(elopment)28 b(of)i(PGR;)i(First,)h
(there)d(is)i(little)f(softw)o(are)f(sup-)0 3910 y(port)c(for)f(using)h
(an)g(FB)m(A)h(for)f(computationally)d(intensi)n(v)o(e)j(nu-)0
4010 y(merical)35 b(problem,)i(e.g.,)h(astrophysical)c(simulations)g
(in)i(our)0 4110 y(case.)47 b(In)28 b(the)f(astrophysics)f(community)-5
b(,)27 b(the)h(success)g(of)f(the)0 4209 y(GRAPE)c(project)e([5)o(])i
(sho)n(ws)f(us)g(a)h(great)f(possibility)f(of)h(de)n(v)o(el-)0
4309 y(oping)h(special)i(purpose)e(hardw)o(are)h(system)h(to)g
(accelerate)f(nu-)0 4408 y(merical)j(simulations.)46
b(In)27 b(the)h(recent)f(GRAPE)h(project,)g(spe-)0 4508
y(cially)k(de)n(v)o(eloped)e(LSIs,)36 b(which)31 b(are)i(mounted)d(on)i
(a)h(e)o(xpan-)0 4608 y(sion)g(board)f(for)g(a)h(host)g(computer)m(,)h
(are)f(used)g(as)g(a)h(comput-)0 4707 y(ing)f(engine.)63
b(Ho)n(we)n(v)o(er)m(,)34 b(total)g(de)n(v)o(elopment)c(costs)k(of)f
(most)0 4807 y(recent)25 b(generation)f(of)i(the)g(GRAPE)g(system)h
(already)d(reaches)0 4907 y(5)31 b(million)g($)h(and)e(most)i(of)f(the)
g(cost)h(w)o(as)g(de)n(v)n(oted)e(to)i(initial)0 5006
y(de)n(v)o(elopment)22 b(of)j(LSIs.)40 b(Such)25 b(big)g(b)n(udget)f
(become)g(a)h(barrier)1988 523 y(for)e(constructing)f(a)i(ne)n(w)f
(generation)f(system)i(or)f(ne)n(w)g(LSI)h(for)1988 623
y(other)h(kind)g(of)h(astrophysical)e(simulations.)41
b(No)n(w)-5 b(,)27 b(using)e(FP-)1988 722 y(GAs)g(as)f(a)h(computing)c
(engine)i(to)h(accelerate)f(numerical)f(sim-)1988 822
y(ulations)30 b(is)g(becoming)e(feasible)h(and)g(a)i(practical)e
(alternati)n(v)o(e)1988 922 y(to)e(ASICs)h(as)g(sho)n(wn)e(in)h([2)o
(].)45 b(The)o(y)26 b(ha)n(v)o(e)g(sho)n(wn)g(a)i(possibil-)1988
1021 y(ity)d(of)f(an)h(FB)m(A)g(\(PR)m(OGRAPE-1)g(system\))f(as)h(the)g
(computing)1988 1121 y(engine)19 b(for)h(astrophysical)e(simulations.)
24 b(In)c(their)g(w)o(ork,)f(prim-)1988 1220 y(iti)n(v)o(e)26
b(operations)f(such)g(as)i(addition,)f(subtraction,)f(and)h(multi-)1988
1320 y(plication)20 b(etc.,)h(numerical)e(algorithm)g(itself,)i(I/O,)f
(and)h(control)1988 1420 y(logic)f(ha)n(v)o(e)f(been)g(implemented)f
(by)h(VHDL)h(from)f(full-scratch)1988 1519 y(since)29
b(there)e(w)o(as)i(a)f(no)g(softw)o(are)f(support)g(for)g(implementing)
1988 1619 y(numerical)17 b(calculations)g(on)g(FPGAs)i(at)f(that)g
(time.)25 b(Especially)-5 b(,)1988 1719 y(there)23 b(w)o(as)h(\(and)d
(still)k(no)n(w)d(is\))h(no)g(suitable)g(\003oating-point)d(op-)1988
1818 y(erations)27 b(IP)g(core)f(for)g(their)g(and)h(our)f(purpose.)43
b(As)27 b(sho)n(wn)f(in)1988 1918 y([4],)k(surprisingly)d(small)h
(number)f(of)h(digits)g(\(say)h(mantissa)f(3)1988 2017
y(bits\))h(is)g(suf)n(\002cient)f(for)f(a)i(kind)e(of)h(astrophysical)f
(man)o(y-body)1988 2117 y(problem.)58 b(Ho)n(we)n(v)o(er)m(,)33
b(a)n(v)n(ailable)e(IP)i(cores)e(of)h(\003oating-point)1988
2217 y(operations)19 b(from)f(a)i(se)n(v)o(eral)g(v)o(endors)e(are)h
(not)h(ef)n(\002cient)f(for)g(our)1988 2316 y(purpose)k(of)g(reduced)f
(accurac)o(y)-5 b(.)34 b(This)24 b(is)g(the)g(\002rst)h(reason)e(and)
1988 2416 y(the)h(strong)f(moti)n(v)n(ation)f(to)i(de)n(v)o(elop)e
(parametrized)g(arithmetic)1988 2516 y(modules)15 b(with)h(support)e
(of)i(arbitrary)e(bit-length)g(\003oating-point)1988
2615 y(operations,)19 b(which)g(is)j(a)e(core)g(and)f(base)i(of)f(the)g
(PGR)h(package.)2071 2715 y(Secondly)-5 b(,)36 b(a)f(fe)n(w)g(recently)
e(released)h(computing)e(system)1988 2814 y(such)26 b(as)h(Cray)f(XD1)g
(has)h(FPGAs)g(as)g(co-processors)d(and)i(this)1988 2914
y(is)34 b(e)o(xactly)d(a)i(co-processor)d(type)i(FB)m(A.)h(Although)e
(we)i(ha)n(v)o(e)1988 3014 y(already)26 b(de)n(v)o(eloped)e(a)k(lar)o
(gest)e(FB)m(A)i(\(PR)m(OGPRAE-3)e(board\))1988 3113
y(with)34 b(4)f(Xilinx)g(XC2VP70)g(chips)g(for)f(our)h(purpose,)i(an)e
(ad-)1988 3213 y(v)n(antage)28 b(of)h(such)h(system)f(de)n(v)o(eloped)e
(by)i(high)f(performance)1988 3313 y(computing)19 b(v)o(endors)g(o)o(v)
o(er)h(the)h(PR)m(OGRAPE-3)g(is)h(high)e(speed)1988 3412
y(bandwidth)15 b(between)i(the)g(host)g(computer)e(\(CPU\))i(and)f
(FPGAs.)1988 3512 y(T)-7 b(able)22 b(1)f(sho)n(ws)g(comparisons)f
(between)g(our)h(board)f(and)g(a)n(v)n(ail-)1988 3611
y(able/planed)28 b(HPC)i(system)f(with)g(FPGAs)h(by)f(three)f(v)o
(endors.)1988 3711 y(High)j(bandwidth)f(will)i(certainly)e(e)o(xpands)g
(area)h(of)g(applica-)1988 3811 y(tions)24 b(because)e(ratio)h(between)
g(number)e(of)i(\003oating-point)e(op-)1988 3910 y(erations)c(and)g
(input)g(data)g(size)i(\(in)e(a)h(number)e(of)h(operations)f(per)1988
4010 y(byte\))23 b(strongly)f(depends)g(on)h(a)g(kind)g(of)g
(applications.)33 b(An)23 b(e)o(x-)1988 4110 y(ample)e(of)f(an)h
(application)f(that)h(has)g(a)g(lar)o(ge)f(number)f(of)i(opera-)1988
4209 y(tions)g(per)f(byte)g(is)h(matrix)f(multiplication)e(\(O\()p
Ft(N)9 b Fu(\))20 b(dependence)1988 4309 y(on)j(a)h(number)d(of)i
(element\),)g(and)g(an)g(application)e(that)j(has)f(op-)1988
4408 y(posite)f(nature)f(is)h(discrete)g(fourier)e(transform)g(\(O\()p
Ft(N)3582 4378 y Fs(2)3618 4408 y Fu(\))i(depen-)1988
4508 y(dence\).)30 b(Note)22 b(astrophysical)e(gra)n(vitational)h(man)o
(y-body)d(sim-)1988 4608 y(ulations)g(also)g(do)g(not)f(need)g(high)h
(bandwidth)e(and)h(this)h(is)h(a)g(rea-)1988 4707 y(son)25
b(why)f(the)h(GRAPE)h(project)e(has)h(been)g(greatly)f(succeeded)1988
4807 y(with)18 b(e)n(v)o(en)e(modest)h(bandwidth)f(of)h
Fr(\030)h Fu(0.13)e(GB)i(s)3450 4777 y Fq(\000)p Fs(1)3540
4807 y Fu(.)24 b(This)18 b(pos-)1988 4907 y(sibility)e(strongly)e
(encourage)g(us)h(to)h(de)n(v)o(elop)e(the)h(PGR)i(package)1988
5006 y(that)26 b(supports)e(not)i(only)e(our)h(PR)m(OGRAPE-3)g(b)n(ut)h
(an)f(general)p eop end
%%Page: 3 3
TeXDict begin 3 2 bop 856 580 a Fu(T)-7 b(able)20 b(1:)25
b(Comparisons)19 b(of)h(co-processor)e(type)i(recon\002gurable)d
(system)p 561 692 2772 4 v 561 709 V 1395 779 a(Cray)j(XD1)99
b(SGI)20 b(Altix)175 b(SRC)232 b(PR)m(OGRAPE-3)p 561
812 V 611 882 a(host)20 b(CPU)499 b(Opteron)167 b(Itanium)195
b(Xeon)162 b(Pentium4/Opteron)611 981 y(bandwidth)18
b(\(GB)j(s)1178 951 y Fq(\000)p Fs(1)1267 981 y Fu(\))220
b(3.2)297 b(TBD)281 b(2.6)455 b(0.5)611 1081 y(A)21 b(number)d(of)i
(FGP)-8 b(As)254 b(6)329 b(TBD)180 b(unkno)n(wn)382 b(4)p
561 1114 V 561 1131 V 529 3278 a
 currentpoint currentpoint translate 0.79109 0.79109 scale neg exch
neg exch translate
 529 3278 a 529 3278
a
 gsave currentpoint currentpoint translate +0 neg rotate neg exch neg
exch translate
 529 3278 a @beginspecial 34 @llx 459 @lly 464 @urx
757 @ury 4300 @rwi @setspecial
%%BeginDocument: ./mat/tradflow.eps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 34 459 464 757
%%Title: tradflow
%%CreationDate: Wed Dec  8 15:04:51 2004
%%Creator: Tgif-4.1.40 by William Chia-Wei Cheng (william@cs.UCLA.edu)
%%ProducedBy: (unknown)
%%Pages: 1
%%DocumentFonts: (atend)
%%EndComments
%%BeginProlog

/tgifdict 53 dict def
tgifdict begin

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/TGAT % tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/TGMAX
 { exch dup 3 1 roll exch dup 3 1 roll gt { pop } { exch pop } ifelse
 } def
/TGMIN
 { exch dup 3 1 roll exch dup 3 1 roll lt { pop } { exch pop } ifelse
 } def
/TGSW { stringwidth pop } def

/bd { bind def } bind def

/GS { gsave } bd
/GR { grestore } bd
/NP { newpath } bd
/CP { closepath } bd
/CHP { charpath } bd
/CT { curveto } bd
/L { lineto } bd
/RL { rlineto } bd
/M { moveto } bd
/RM { rmoveto } bd
/S { stroke } bd
/F { fill } bd
/TR { translate } bd
/RO { rotate } bd
/SC { scale } bd
/MU { mul } bd
/DI { div } bd
/DU { dup } bd
/NE { neg } bd
/AD { add } bd
/SU { sub } bd
/PO { pop } bd
/EX { exch } bd
/CO { concat } bd
/CL { clip } bd
/EC { eoclip } bd
/EF { eofill } bd
/IM { image } bd
/IMM { imagemask } bd
/ARY { array } bd
/SG { setgray } bd
/RG { setrgbcolor } bd
/SD { setdash } bd
/W { setlinewidth } bd
/SM { setmiterlimit } bd
/SLC { setlinecap } bd
/SLJ { setlinejoin } bd
/SH { show } bd
/FF { findfont } bd
/MS { makefont setfont } bd
/AR { arcto 4 {pop} repeat } bd
/CURP { currentpoint } bd
/FLAT { flattenpath strokepath clip newpath } bd
/TGSM { tgiforigctm setmatrix } def
/TGRM { savematrix setmatrix } def

end

%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1

%%PageBoundingBox: 34 459 464 757
tgifdict begin
/tgifsavedpage save def

1 SM
1 W

0 SG

72 0 MU 72 11 MU TR
72 128 DI 100.000 MU 100 DI DU NE SC

GS

/tgiforigctm matrix currentmatrix def

% RCBOX
0 SG
GS
   GS
      NP
         480 64 M
         496 64 496 128 16 AR
         496 112 L
         496 128 320 128 16 AR
         336 128 L
         320 128 320 64 16 AR
         320 80 L
         320 64 496 64 16 AR
      CP
      2 W
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      340 100 M
      GS
            0 SG
            /Helvetica-Bold FF [18 0 0 -18 0 0] MS
            (Target Function) SH
      GR
   GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 192 212 M 308 212 L 308 276 L 192 276 L CP
      5 W
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      208 236 M
      GS
            0 SG
            /Helvetica-Bold FF [18 0 0 -18 0 0] MS
            (C source) SH
      GR
      0 23 RM
      GS
            0 SG
            /Helvetica-Bold FF [18 0 0 -18 0 0] MS
            (File) SH
      GR
   GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 348 212 M 464 212 L 464 276 L 348 276 L CP
      5 W
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      388 236 M
      GS
            0 SG
            /Helvetica-Bold FF [18 0 0 -18 0 0] MS
            (HDL) SH
      GR
      0 23 RM
      GS
            0 SG
            /Helvetica-Bold FF [18 0 0 -18 0 0] MS
            (File) SH
      GR
   GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 628 212 M 744 212 L 744 276 L 628 276 L CP
      5 W
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      644 236 M
      GS
            0 SG
            /Helvetica-Bold FF [18 0 0 -18 0 0] MS
            (C source) SH
      GR
      0 23 RM
      GS
            0 SG
            /Helvetica-Bold FF [18 0 0 -18 0 0] MS
            (File) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   [8 8] 0 SD
   NP
      352 140 M
      64 -96 atan DU cos 20.000 MU 256 exch SU
      exch sin 20.000 MU 204 exch SU L
   TGSM
   6 W
   S
   [] 0 SD
   1 W
GR
GS
   TGSM
   NP
      256 204 20.000 8.000 -96 64 TGAT
   1 SG CP F
   0 SG
   NP
      256 204 20.000 8.000 -96 64 TGAT
   CP F
GR

% POLY/OPEN-SPLINE
0 SG
GS
   [8 8] 0 SD
   NP
      404 136 M
      68 0 atan DU cos 20.000 MU 404 exch SU
      exch sin 20.000 MU 204 exch SU L
   TGSM
   6 W
   S
   [] 0 SD
   1 W
GR
GS
   TGSM
   NP
      404 204 20.000 8.000 0 68 TGAT
   1 SG CP F
   0 SG
   NP
      404 204 20.000 8.000 0 68 TGAT
   CP F
GR

% POLY/OPEN-SPLINE
0 SG
GS
   [8 8] 0 SD
   NP
      460 136 M
      68 192 atan DU cos 20.000 MU 652 exch SU
      exch sin 20.000 MU 204 exch SU L
   TGSM
   6 W
   S
   [] 0 SD
   1 W
GR
GS
   TGSM
   NP
      652 204 20.000 8.000 192 68 TGAT
   1 SG CP F
   0 SG
   NP
      652 204 20.000 8.000 192 68 TGAT
   CP F
GR

% TEXT
NP
0 SG
   GS
      1 W
      108 244 M
      GS
            0 SG
            /Helvetica FF [18 0 0 -18 0 0] MS
            (software) SH
      GR
      0 22 RM
      GS
            0 SG
            /Helvetica FF [18 0 0 -18 0 0] MS
            (emulator) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      476 232 M
      GS
            0 SG
            /Helvetica FF [18 0 0 -18 0 0] MS
            (processor logic) SH
      GR
      0 22 RM
      GS
            0 SG
            /Helvetica FF [18 0 0 -18 0 0] MS
            (control logic) SH
      GR
      0 22 RM
      GS
            0 SG
            /Helvetica FF [18 0 0 -18 0 0] MS
            (interface logic) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      752 240 M
      GS
            0 SG
            /Helvetica FF [18 0 0 -18 0 0] MS
            (interface) SH
      GR
      0 22 RM
      GS
            0 SG
            /Helvetica FF [18 0 0 -18 0 0] MS
            (program) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      508 92 M
      GS
            0 SG
            /Helvetica-Bold FF [24 0 0 -24 0 0] MS
            (\(A\)) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      188 200 M
      GS
            0 SG
            /Helvetica-Bold FF [24 0 0 -24 0 0] MS
            (\(B\)) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      448 200 M
      GS
            0 SG
            /Helvetica-Bold FF [24 0 0 -24 0 0] MS
            (\(C\)) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      744 200 M
      GS
            0 SG
            /Helvetica-Bold FF [24 0 0 -24 0 0] MS
            (\(D\)) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      252 276 M
      36 0 atan DU cos 10.000 MU 252 exch SU
      exch sin 10.000 MU 312 exch SU L
   TGSM
   2 W
   S
   1 W
GR
GS
   TGSM
   NP
      252 312 10.000 4.000 0 36 TGAT
   1 SG CP F
   0 SG
   NP
      252 312 10.000 4.000 0 36 TGAT
   CP F
GR

% RCBOX
0 SG
GS
   GS
      NP
         292 316 M
         308 316 308 356 16 AR
         308 340 L
         308 356 196 356 16 AR
         212 356 L
         196 356 196 316 16 AR
         196 332 L
         196 316 308 316 16 AR
      CP
      2 W
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      204 344 M
      GS
            0 SG
            /Helvetica-Bold FF [18 0 0 -18 0 0] MS
            (C compiler) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      252 356 M
      36 0 atan DU cos 10.000 MU 252 exch SU
      exch sin 10.000 MU 392 exch SU L
   TGSM
   2 W
   S
   1 W
GR
GS
   TGSM
   NP
      252 392 10.000 4.000 0 36 TGAT
   1 SG CP F
   0 SG
   NP
      252 392 10.000 4.000 0 36 TGAT
   CP F
GR

% RCBOX
0 SG
GS
   GS
      NP
         292 396 M
         308 396 308 440 16 AR
         308 424 L
         308 440 196 440 16 AR
         212 440 L
         196 440 196 396 16 AR
         196 412 L
         196 396 308 396 16 AR
      CP
      2 W
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      208 424 M
      GS
            0 SG
            /Helvetica-Bold FF [18 0 0 -18 0 0] MS
            (API library) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   [4 4] 0 SD
   NP
      148 524 M
      -168 -56 atan DU cos 10.000 MU exch sin 10.000 MU RM
      110.67 412.00 87.33 326.67 78.00 268.00 CT
      68.67 209.33 83.33 166.67 122.00 140.00 CT
      160.67 113.33 222.67 100.00
      0 128 atan DU cos 10.000 MU 308 exch SU
      exch sin 10.000 MU 100 exch SU CT
   TGSM
   2 W
   S
   [] 0 SD
   1 W
GR
GS
   TGSM
   NP
      148 524 10.000 4.000 56 168 TGAT
   1 SG CP F
   0 SG
   NP
      148 524 10.000 4.000 56 168 TGAT
   CP F
GR
GS
   TGSM
   NP
      308 100 10.000 4.000 128 0 TGAT
   1 SG CP F
   0 SG
   NP
      308 100 10.000 4.000 128 0 TGAT
   CP F
GR

% TEXT
NP
0 SG
   GS
      1 W
      164 100 M
      GS
            0 SG
            /Helvetica FF [18 0 0 -18 0 0] MS
            (compare) SH
      GR
   GR

% RCBOX
0 SG
GS
   GS
      NP
         460 316 M
         476 316 476 380 16 AR
         476 364 L
         476 380 332 380 16 AR
         348 380 L
         332 380 332 316 16 AR
         332 332 L
         332 316 476 316 16 AR
      CP
      2 W
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      348 344 M
      GS
            0 SG
            /Helvetica-Bold FF [18 0 0 -18 0 0] MS
            (FPGA design) SH
      GR
      0 23 RM
      GS
            0 SG
            /Helvetica-Bold FF [18 0 0 -18 0 0] MS
            (Tool) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      404 276 M
      36 0 atan DU cos 10.000 MU 404 exch SU
      exch sin 10.000 MU 312 exch SU L
   TGSM
   2 W
   S
   1 W
GR
GS
   TGSM
   NP
      404 312 10.000 4.000 0 36 TGAT
   1 SG CP F
   0 SG
   NP
      404 312 10.000 4.000 0 36 TGAT
   CP F
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      404 380 M
      36 0 atan DU cos 10.000 MU 404 exch SU
      exch sin 10.000 MU 416 exch SU L
   TGSM
   2 W
   S
   1 W
GR
GS
   TGSM
   NP
      404 416 10.000 4.000 0 36 TGAT
   1 SG CP F
   0 SG
   NP
      404 416 10.000 4.000 0 36 TGAT
   CP F
GR

% RCBOX
0 SG
GS
   GS
      NP
         468 420 M
         484 420 484 480 16 AR
         484 464 L
         484 480 324 480 16 AR
         340 480 L
         324 480 324 420 16 AR
         324 436 L
         324 420 484 420 16 AR
      CP
      2 W
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      344 444 M
      GS
            0 SG
            /Helvetica-Bold FF [18 0 0 -18 0 0] MS
            (Configuration) SH
      GR
      0 23 RM
      GS
            0 SG
            /Helvetica-Bold FF [18 0 0 -18 0 0] MS
            (File) SH
      GR
   GR

% RCBOX
0 SG
GS
   GS
      NP
         724 316 M
         740 316 740 356 16 AR
         740 340 L
         740 356 628 356 16 AR
         644 356 L
         628 356 628 316 16 AR
         628 332 L
         628 316 740 316 16 AR
      CP
      2 W
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      636 344 M
      GS
            0 SG
            /Helvetica-Bold FF [18 0 0 -18 0 0] MS
            (C compiler) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      684 276 M
      36 0 atan DU cos 10.000 MU 684 exch SU
      exch sin 10.000 MU 312 exch SU L
   TGSM
   2 W
   S
   1 W
GR
GS
   TGSM
   NP
      684 312 10.000 4.000 0 36 TGAT
   1 SG CP F
   0 SG
   NP
      684 312 10.000 4.000 0 36 TGAT
   CP F
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      684 356 M
      36 0 atan DU cos 10.000 MU 684 exch SU
      exch sin 10.000 MU 392 exch SU L
   TGSM
   2 W
   S
   1 W
GR
GS
   TGSM
   NP
      684 392 10.000 4.000 0 36 TGAT
   1 SG CP F
   0 SG
   NP
      684 392 10.000 4.000 0 36 TGAT
   CP F
GR

% RCBOX
0 SG
GS
   GS
      NP
         724 396 M
         740 396 740 440 16 AR
         740 424 L
         740 440 628 440 16 AR
         644 440 L
         628 440 628 396 16 AR
         628 412 L
         628 396 740 396 16 AR
      CP
      2 W
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      640 424 M
      GS
            0 SG
            /Helvetica-Bold FF [18 0 0 -18 0 0] MS
            (API library) SH
      GR
   GR

% RCBOX
0 SG
GS
   GS
      NP
         728 528 M
         744 528 744 588 16 AR
         744 572 L
         744 588 456 588 16 AR
         472 588 L
         456 588 456 528 16 AR
         456 544 L
         456 528 744 528 16 AR
      CP
      2 W
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      476 552 M
      GS
            0 SG
            /Helvetica-Bold FF [18 0 0 -18 0 0] MS
            (Application Program) SH
      GR
      0 23 RM
      GS
            0 SG
            /Helvetica-Bold FF [18 0 0 -18 0 0] MS
            (with Reconfigurable System) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      480 476 M
      44 48 atan DU cos 10.000 MU 528 exch SU
      exch sin 10.000 MU 520 exch SU L
   TGSM
   2 W
   S
   1 W
GR
GS
   TGSM
   NP
      528 520 10.000 4.000 48 44 TGAT
   1 SG CP F
   0 SG
   NP
      528 520 10.000 4.000 48 44 TGAT
   CP F
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      684 440 M
      76 0 atan DU cos 10.000 MU 684 exch SU
      exch sin 10.000 MU 516 exch SU L
   TGSM
   2 W
   S
   1 W
GR
GS
   TGSM
   NP
      684 516 10.000 4.000 0 76 TGAT
   1 SG CP F
   0 SG
   NP
      684 516 10.000 4.000 0 76 TGAT
   CP F
GR

% RCBOX
0 SG
GS
   GS
      NP
         356 528 M
         372 528 372 588 16 AR
         372 572 L
         372 588 144 588 16 AR
         160 588 L
         144 588 144 528 16 AR
         144 544 L
         144 528 372 528 16 AR
      CP
      2 W
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      164 552 M
      GS
            0 SG
            /Helvetica-Bold FF [18 0 0 -18 0 0] MS
            (Application Program) SH
      GR
      0 23 RM
      GS
            0 SG
            /Helvetica-Bold FF [18 0 0 -18 0 0] MS
            (with Bit-level Emulator) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      252 440 M
      72 0 atan DU cos 10.000 MU 252 exch SU
      exch sin 10.000 MU 512 exch SU L
   TGSM
   2 W
   S
   1 W
GR
GS
   TGSM
   NP
      252 512 10.000 4.000 0 72 TGAT
   1 SG CP F
   0 SG
   NP
      252 512 10.000 4.000 0 72 TGAT
   CP F
GR

% POLY/OPEN-SPLINE
0 SG
GS
   [4 4] 0 SD
   NP
      376 560 M
      0 76 atan DU cos 10.000 MU exch sin 10.000 MU RM
      0 76 atan DU cos 10.000 MU 452 exch SU
      exch sin 10.000 MU 560 exch SU L
   TGSM
   2 W
   S
   [] 0 SD
   1 W
GR
GS
   TGSM
   NP
      376 560 10.000 4.000 -76 0 TGAT
   1 SG CP F
   0 SG
   NP
      376 560 10.000 4.000 -76 0 TGAT
   CP F
GR
GS
   TGSM
   NP
      452 560 10.000 4.000 76 0 TGAT
   1 SG CP F
   0 SG
   NP
      452 560 10.000 4.000 76 0 TGAT
   CP F
GR

% TEXT
NP
0 SG
   GS
      1 W
      380 544 M
      GS
            0 SG
            /Helvetica FF [18 0 0 -18 0 0] MS
            (compare) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      576 512 M
      GS
            0 SG
            /Helvetica-Bold FF [24 0 0 -24 0 0] MS
            (\(E\)) SH
      GR
   GR

GR
tgifsavedpage restore
end
showpage

%%Trailer
%MatchingCreationDate: Wed Dec  8 15:04:51 2004
%%DocumentFonts: Helvetica
%%+ Helvetica-Bold
%%EOF

%%EndDocument
 @endspecial 4113 3278 a
 currentpoint grestore moveto
 4113 3278 a 529 3278 a
 currentpoint currentpoint translate 1 0.79109 div 1 0.79109 div scale
neg exch neg exch translate
 529 3278
a 561 3460 a Fu(Figure)20 b(2:)25 b(Con)m(v)o(entional)17
b(w)o(ork)j(\003o)n(w)g(for)g(implementing)e(an)i(application)f(on)g(a)
i(RS)g(system.)0 3811 y(FB)m(A)g(such)f(as)h(Cray)f(XD1.)83
3914 y(A)k(third)g(moti)n(v)n(ation)e(is)j(that)f(e)n(v)o(en)f(if)h
(implementing)d(a)k(sim-)0 4013 y(plest)35 b(application)e(on)h(FPGAs)i
(is)f(v)o(ery)e(dif)n(\002cult)h(and)g(tough)0 4113 y(w)o(ork)18
b(for)g(possible)h(users)f(in)h(man)o(y)f(\002elds)h(that)g(demand)e
(strong)0 4212 y(computational)32 b(resources.)65 b(This)35
b(is)g(because)e(con)m(v)o(entional)0 4312 y(w)o(ork)j(\003o)n(w)h(for)
e(designing)g(and)h(implementing)f(an)h(FB)m(A)i(is)0
4412 y(much)24 b(more)f(complicated)g(than)h(con)m(v)o(entional)d
(programming)0 4511 y(in)26 b(C)i(or)e(F)o(ortran)f(languages.)42
b(Figure)25 b(2)i(sho)n(ws)f(con)m(v)o(entional)0 4611
y(w)o(ork)j(\003o)n(w)h(for)g(implementing)d(an)j(application)f(on)g
(an)h(FB)m(A.)0 4711 y(The)20 b(w)o(ork)f(\003o)n(w)i(consists)f(of)g
(the)g(follo)n(wing)f(\002)n(v)o(e)h(steps.)9 4907 y(\(A\))41
b(T)-7 b(ar)o(get)30 b(Function)g(Speci\002cation:)46
b(W)-7 b(e)33 b(specify)d(a)i(tar)o(get)166 5006 y(function,)e(namely)e
(the)i(function)e(that)h(pipeline)g(proces-)2154 3811
y(sors)17 b(calculate.)23 b(This)17 b(step)g(includes)f(to)g(specify)g
(data)g(\003o)n(w)2154 3910 y(for)28 b(the)g(calculation)f(of)g(the)h
(tar)o(get)g(function,)g(and)f(input)2154 4010 y(and)c(output)e(number)
g(format)h(and)g(w)o(ord)g(length)g(for)g(each)2154 4109
y(arithmetic)e(operation.)2002 4408 y(\(B\))41 b(Bit-Le)n(v)o(el)15
b(Softw)o(are)g(Emulator:)22 b(W)-7 b(e)16 b(de)n(v)o(elop)e(a)i(softw)
o(are)2154 4508 y(emulator)29 b(which)g(implements)g(the)h(tar)o(get)f
(function)f(de-)2154 4608 y(\002ned)g(in)f(step)h(\(A\).)f(Using)g
(this)h(softw)o(are)f(emulator)m(,)h(we)2154 4707 y(v)o(erify)i
(whether)h(the)g(designed)g(hardw)o(are)f(can)h(actually)2154
4807 y(calculate)24 b(the)f(tar)o(get)g(function)f(with)i(required)e
(accurac)o(y)-5 b(.)2154 4907 y(In)26 b(this)g(step,)h(we)f(also)g
(de\002ne)f(the)g(application)f(program)2154 5006 y(interf)o(ace)c
(\(API\).)p eop end
%%Page: 4 4
TeXDict begin 4 3 bop 14 523 a Fu(\(C\))41 b(Hardw)o(are)20
b(Design:)27 b(In)21 b(this)g(step,)h(we)f(actually)g(write)g(the)166
623 y(source)26 b(code)g(which)f(implements)h(the)g(pipeline)g(proces-)
166 722 y(sors)21 b(in)g(a)g(hardw)o(are)f(description)f(language)g
(\(HDL\))h(such)166 822 y(as)30 b(VHDL.)f(In)g(addition,)h(we)g(design)
e(the)h(control)f(logic)166 922 y(and)17 b(host)g(interf)o(ace)f(logic)
h(also)h(in)f(some)h(HDL.)f(The)g(HDL)166 1021 y(description)k(is)j
(compiled)d(to)i(the)f(con\002guration)e(data)j(for)166
1121 y(the)e(FPGAs)i(by)e(a)h(CAD)g(softw)o(are,)f(usually)g(pro)o
(vided)d(by)166 1220 y(the)i(manuf)o(acturer)e(of)i(the)g(FPGA)h(de)n
(vice.)9 1414 y(\(D\))41 b(Interf)o(ace)23 b(Softw)o(are:)33
b(W)-7 b(e)26 b(de)n(v)o(elop)c(the)j(softw)o(are)f(on)g(the)166
1514 y(host)j(computer)e(which)h(tak)o(es)h(care)f(of)h(the)f
(communica-)166 1613 y(tion)20 b(to)h(the)g(FB)m(A)h(and)e(data)g
(format)g(con)m(v)o(ersion)e(between)166 1713 y(the)33
b(\003oating-point)e(data)i(on)g(the)g(host)g(and)f(specialized)166
1813 y(data)27 b(format)f(used)h(on)f(the)h(de)n(v)o(eloped)e(pipeline)
h(proces-)166 1912 y(sors.)37 b(The)24 b(de)n(v)o(eloped)d(softw)o(are)
j(should)f(ha)n(v)o(e)h(the)g(same)166 2012 y(API)32
b(as)h(that)e(of)h(the)g(softw)o(are)f(emulator)g(de)n(v)o(eloped)e(in)
166 2112 y(step)21 b(\(B\).)19 2305 y(\(E\))40 b(Finally)-5
b(,)19 b(we)g(can)g(actually)g(use)g(the)g(FB)m(A)h(with)g(real)f
(appli-)166 2405 y(cation)h(program.)83 2610 y(In)40
b(these)h(steps,)46 b(we)41 b(ha)n(v)o(e)f(to)h(design,)k(test,)h(and)
40 b(deb)n(ug)0 2709 y(a)d(lar)o(ge)e(amount)h(of)g(hardw)o(are)f
(logics)h(and)g(softw)o(ares.)74 b(Of)0 2809 y(course,)25
b(man)o(y)f(of)g(the)h(softw)o(ares)g(and)f(hardw)o(are)g(designs)g
(can)0 2909 y(be)29 b(reused,)i(when)d(we)i(de)n(v)o(elop)d(dif)n
(ferent)h(applications.)50 b(F)o(or)0 3008 y(e)o(xample,)42
b(the)d(design)f(of)h(the)g(\003oating-point)d(multiplier)i(is)0
3108 y(rather)19 b(generic,)g(and)h(can)g(be)g(used)g(in)g(almost)g(an)
o(y)g(application.)0 3207 y(Also,)h(it)g(is)h(possible)e(to)h(b)n(uy)f
(IP)h(cores)g(of)f(such)g(designs.)26 b(Ho)n(w-)0 3307
y(e)n(v)o(er)m(,)20 b(just)h(to)g(understand)e(ho)n(w)h(to)h(use)g(the)
g(IP)g(cores,)f(one)h(need)0 3407 y(a)16 b(deep)g(understanding)d(of)j
(details)g(of)g(the)g(IP)g(cores.)24 b(Thus,)16 b(e)n(v)o(en)0
3506 y(though)22 b(the)i(reusability)f(signi\002cantly)g(reduce)g(the)h
(amount)e(of)0 3606 y(the)d(w)o(ork)g(needed)f(for)h(the)h(second)e
(and)h(later)h(design)f(for)f(a)i(per)n(-)0 3706 y(son,)32
b(the)f(initial)f(hurdle)f(remains)h(rather)f(high,)j(for)d(a)i(person)
0 3805 y(who)f(has)g(ne)n(v)o(er)f(used)h(such)g(IP)g(core,)i(or)e
(actually)g(the)g(a)n(v)n(ail-)0 3905 y(ability)22 b(of)g(the)g(IP)g
(cores)g(mak)o(e)g(the)g(hurdle)f(e)n(v)o(en)g(higher)m(,)g(since)0
4004 y(a)k(starter)f(needs)f(to)i(understand,)d(in)i(addition)f(to)i
(the)f(basics)g(of)0 4104 y(the)i(hardw)o(are)e(design)i(and)f(HDL,)h
(the)g(use)g(of)g(such)f(IP)h(cores.)0 4204 y(Furthermore,)16
b(a)i(price)g(of)g(IP)h(cores)e(is)j(quite)d(e)o(xpensi)n(v)o(e)g(in)h
(gen-)0 4303 y(eral)e(for)f(a)i(academic)e(researcher)g(and)g(it)i(is)g
(not)f(al)o(w)o(ays)g(true)g(that)0 4403 y(there)22 b(are)g(suitable)g
(IP)h(cores)f(for)f(one')-5 b(s)22 b(purpose)f(as)i(e)o(xplained)0
4503 y(abo)o(v)o(e.)83 4608 y(The)f(de)n(v)o(elopment)d(of)i(a)i
(communication)c(softw)o(are)i(is)i(gen-)0 4707 y(erally)18
b(e)n(v)o(en)f(more)h(dif)n(\002cult)g(than)g(the)g(design)g(of)g(the)h
(hardw)o(are,)0 4807 y(since)33 b(it)h(requires)e(the)g(kno)n(wledge)f
(of)i(ho)n(w)f(a)h(de)n(vice)f(dri)n(v)o(er)0 4907 y(w)o(ork)16
b(in)h(the)g(operating)d(system)j(of)g(the)f(host)h(computer)m(,)e(and)
h(in-)0 5006 y(\002nite)k(number)e(of)h(small)h(details;)g(ho)n(w)f(to)
h(inte)o(grate)e(the)i(de)n(vice)1988 523 y(dri)n(v)o(er)j(to)h(the)g
(operating)e(system,)j(ho)n(w)f(to)g(correctly)f(generate)1988
623 y(the)e(compiler)e(\003ags)i(to)g(compile)f(the)g(de)n(vice)g(dri)n
(v)o(er)f(and)h(so)h(on.)1988 722 y(All)k(these)f(w)o(orks)g(combined)e
(mak)o(e)h(it)i(almost)f(impossible)f(for)1988 822 y(possible)e(users)h
(to)f(e)n(v)o(en)f(think)h(of)g(implementing)e(the)i(pipeline)1988
922 y(processor)e(on)h(an)g(FB)m(A.)2071 1022 y(In)i(theory)-5
b(,)21 b(most)h(of)f(the)h(softw)o(ares)g(and)g(hardw)o(are)e(descrip-)
1988 1122 y(tions,)32 b(including)27 b(the)j(bit-le)n(v)o(el)e(design)h
(of)g(the)g(pipeline)f(pro-)1988 1221 y(cessors)d(itself,)g(can)f(be)g
(automatically)f(generated)f(from)h(some)1988 1321 y(high-le)n(v)o(el)e
(description)h(of)h(the)g(pipeline.)33 b(The)22 b(basic)i(idea)f(be-)
1988 1421 y(hind)g(the)g(PGR)h(package,)f(which)f(we)i(will)g(describe)
f(details)g(in)1988 1520 y(this)k(paper)m(,)f(is)h(to)f(pro)o(vide)e
(such)i(automatic)f(generation.)41 b(The)1988 1620 y(PGR)29
b(package)e(analyzes)g(a)h(description)f(of)g(pipeline)g(proces-)1988
1719 y(sors)32 b(written)f(in)g(the)g(PGR)h(Description)f(Language)e
(\(PGDL\))1988 1819 y(as)20 b(input)f(and)f(then)h(translates)g(and)g
(generates)f(necessary)h(hard-)1988 1919 y(w)o(are)27
b(descriptions,)f(a)h(bit-le)n(v)o(el)f(emulator)m(,)g(and)g
(communica-)1988 2018 y(tion)j(softw)o(ares.)51 b(Namely)-5
b(,)30 b(a)g(possible)f(user)g(of)f(an)h(FB)m(A)h(can)1988
2118 y(concentrate)37 b(on)i(writing)f(their)g(application)g(in)g(the)h
(PGDL.)1988 2218 y(This)31 b(means)e(that)i(the)f(PGR)h(system)f(can)g
(drastically)f(reduce)1988 2317 y(the)24 b(amount)f(of)h(the)g(w)o(ork)
f(\(and)g(needed)g(kno)n(wledge\))e(of)j(such)1988 2417
y(user)-5 b(.)45 b(More)26 b(importantly)-5 b(,)25 b(the)i(PGDL)g(does)
f(not)g(depends)g(on)1988 2516 y(a)i(speci\002c)e(hardw)o(are)g
(\(e.g.,)h(PR)m(OGRAPE-3\))f(and)g(this)i(mak)o(e)1988
2616 y(it)d(possible)e(to)g(reuse)h(a)g(application)e(written)h(in)g
(the)h(PGDL)g(on)1988 2716 y(a)e(ne)n(wly)f(de)n(v)o(eloped)e(FB)m(A)j
(when)f(the)g(PGR)i(package)c(supports)1988 2815 y(the)26
b(ne)n(w)f(FB)m(A.)h(The)e(ef)n(fort)g(spent)h(to)h(design)e(one)h
(application)1988 2915 y(on)32 b(one)f(hardw)o(are)f(will)i(not)f(be)h
(thro)n(wn)e(a)o(w)o(ay)h(when)g(a)h(ne)n(w)1988 3015
y(hardw)o(are)19 b(becomes)g(a)n(v)n(ailable.)2071 3115
y(In)26 b(this)g(paper)m(,)f(we)h(describe)f(details)h(of)f(the)h(PGR)h
(package)1988 3215 y(that)i(mak)o(es)f(a)g(design)g(\003o)n(w)g(of)g
(an)g(FB)m(A)i(much)d(simpler)h(than)1988 3314 y(the)33
b(con)m(v)o(entional)d(design)i(\003o)n(w)-5 b(.)62 b(In)32
b(section)g(2,)k(we)d(present)1988 3414 y(a)g(basic)g(idea)f(behind)f
(the)h(PGR)i(package)c(and)i(describe)g(de-)1988 3514
y(tails)c(of)e(our)g(ne)n(wly)g(de)n(v)o(eloped)e(parametrized)h
(\003oating-point)1988 3613 y(arithmetic)g(modules)g(that)h(are)f(k)o
(e)o(y)h(components)d(of)j(the)f(PGR)1988 3713 y(package.)55
b(Moreo)o(v)o(er)m(,)30 b(we)g(sho)n(w)h(a)f(simple)h(design)f(e)o
(xample)1988 3812 y(using)h(the)g(PGDL.)g(In)g(section)g(3,)j(we)d
(describe)g(an)g(e)o(xample)1988 3912 y(of)d(a)g(real)f(application)f
(and)h(sho)n(w)g(obtained)f(performance)f(on)1988 4012
y(the)f(PR)m(OGRAPE-3.)34 b(Finally)-5 b(,)24 b(we)g(summarize)e(our)g
(results)i(in)1988 4111 y(section)c(4.)1988 4396 y Fv(2)120
b(PGR)53 b(:)f(Pr)n(ocessors)f(Generator)i(f)m(or)2168
4546 y(Recon\002gurable)32 b(systems)1988 4749 y Fp(2.1)100
b(Basic)24 b(idea)h(behind)i(the)f(PGR)e(system)1988
4907 y Fu(If)h(we)g(inspect)f(Figure)g(2)h(again,)g(we)g(can)f(see)i
(the)e(f)o(act)h(that)g Fo(all)1988 5006 y Fu(softw)o(ares)32
b(and)g(hardw)o(are)e(description)g(is)j(deri)n(v)o(ed)d(from)h(the)p
eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 523 a Fu(tar)o(get)27 b(function)g
(speci\002cation)g(in)i(step)f(\(A\).)g(Thus,)i(it)f(should)0
623 y(be)g(possible)f(for)g(a)h(suf)n(\002ciently)f(smart)h(softw)o
(are)f(to)h(generate)0 722 y(all)j(necessary)f(softw)o(ares)g(and)g
(hardw)o(are)f(descriptions)g(from)0 822 y(the)23 b(tar)o(get)e
(function)g(description)g(written)i(in)g(some)f(high-le)n(v)o(el)0
922 y(language.)57 b(The)31 b(basic)h(idea)f(of)g(PGR)i(is)f(to)g(de)n
(v)o(elop)d(such)i(a)0 1021 y(smart)20 b(softw)o(are.)83
1121 y(Figure)25 b(3)h(sho)n(ws)g(ho)n(w)f(the)h(design)f(\003o)n(w)h
(changes)f(with)h(the)0 1221 y(PGR)d(package.)30 b(After)22
b(we)g(de\002ne)g(a)h(tar)o(get)e(function,)g(then)h(we)0
1321 y(write)k(it)h(in)f(the)g(PGDL)g(\(see)g(the)g(later)g(section)g
(for)f(details)h(on)0 1420 y(the)i(PGDL\).)f(The)g(PGR)i(softw)o(are)e
(system)h(tak)o(es)g(this)h(PGDL)0 1520 y(description)18
b(of)g(the)h(pipeline)f(processors)g(as)i(input,)e(and)h(gener)n(-)0
1619 y(ates)25 b(all)h(softw)o(ares)e(and)g(hardw)o(are)f
(descriptions.)38 b(Thus,)25 b(with)0 1719 y(the)18 b(PGR)i(package,)d
(a)i(user)f(do)g(not)g(ha)n(v)o(e)g(to)h(write)f(HDL)h(source)0
1819 y(codes)h(for)g(the)g(processor)f(and)h(C)h(source)e(codes)h(for)g
(a)h(commu-)0 1918 y(nication)e(softw)o(are.)0 2159 y
Fp(2.2)99 b(PGR)24 b(\002)o(v)o(e)i(lay)o(ers)e(model)0
2315 y Fu(T)-7 b(o)42 b(mak)o(e)f(the)g(PGR)i(softw)o(are)e(system)h
(independent)c(on)j(a)0 2415 y(speci\002c)29 b(hardw)o(are,)h(we)f
(create)f(the)h(PGR)h(\002)n(v)o(e)f(layers)g(model)0
2515 y(which)35 b(di)n(vide)g(an)h(FB)m(A)h(into)e(\002)n(v)o(e)h
(parts.)72 b(Figure)35 b(4)h(sho)n(ws)0 2614 y(the)e(PGR)g(\002)n(v)o
(e)g(layers)f(model,)j(and)d(it')-5 b(s)35 b(composed)c(of)j(User)0
2714 y(Program)h(Layer\(UPL\),)g(API)i(Layer\(APL\),)e(De)n(vice)h(Dri)
n(v)o(er)0 2813 y(Layer\(DDL\),)17 b(I/O)i(&)g(Control)g(Logic)f
(Layer\(ICL\))f(and)h(Arith-)0 2913 y(metic)i(Logic)g(Layer\(ALL\).)83
3013 y(The)35 b(UPL)i(is)f(a)h(user)e(application)f(which)i
(communicates)0 3113 y(with)21 b(an)g(FB)m(A)h(through)c(the)j(APL.)g
(The)f(APL)h(contains)f(the)h(top)0 3212 y(le)n(v)o(el)j(API)h
(implementations)d(that)i(doesn')o(t)f(depend)g(on)h(an)g(in-)0
3312 y(di)n(vidual)17 b(FB)m(A.)i(The)f(DDL)h(consists)f(of)g(both)g(a)
h(lo)n(w)f(le)n(v)o(el)g(com-)0 3412 y(munication)h(library)g(and)h(a)h
(de)n(vice)f(dri)n(v)o(er)f(softw)o(are.)26 b(The)21
b(ICL)0 3511 y(is)c(a)g(glue)f(logic)g(such)h(as)g(the)f(PCI)i(interf)o
(ace)d(logic)h(and)g(local)h(I/O)0 3611 y(logic)23 b(on)g(an)g(FB)m(A.)
h(The)f(ALL)g(is)h(composed)d(of)i(parametrized)0 3711
y(arithmetic)32 b(modules,)j(details)f(of)f(which)f(is)j(described)c
(later)m(,)0 3810 y(and)20 b(control)f(logic)g(of)h(pipeline)g
(processors.)83 3910 y(The)c(PGR)g(package)f(generates)g(only)g(the)h
(layers)f(that)h(doesn')o(t)0 4010 y(depend)g(on)h(a)g(speci\002c)h(FB)
m(A,)g(namely)e(the)i(APL)f(and)g(ALL.)g(The)0 4110 y(others)23
b(layers)h(\(DDL)g(and)f(ICL\))h(depend)e(on)i(hardw)o(are)e(speci-)0
4209 y(\002cation)29 b(of)g(the)g(FB)m(A)i(such)e(as)h(architecture)e
(of)h(a)g(host)h(com-)0 4309 y(puter)m(,)16 b(used)g(operating)f
(system,)j(or)e(a)h(type)f(of)h(inter)n(-connection)0
4408 y(hardw)o(are)24 b(\(e.g.,)h(PCI,)h(PCI-Express)e(and)h(so)h
(on\).)39 b(W)-7 b(e)26 b(de\002ne)0 4508 y(standard)32
b(speci\002cations)g(between)h(the)g(hardw)o(are)e(depended)0
4608 y(layers\(DDL,ICL\))19 b(and)i(the)g(independent)d
(layers\(APL,ALL\).)0 4707 y(Our)28 b(current)e(tar)o(get)i(hardw)o
(are)e(is)j(the)f(PR)m(OGRAPE-3)g(board)0 4807 y(\(see)46
b(\002gure5\).)102 b(The)46 b(inter)n(-connection)d(hardw)o(are)i(of)h
(the)0 4907 y(PR)m(OGRAPE-3)17 b(is)h(the)g(66)e(MHz,)i(64)f(bit)g(PCI)
h(b)n(us)g(and)f(detailed)0 5006 y(implementation)f(of)i(the)g(ICL)g
(for)f(PR)m(OGRAPE-3)h(is)h(sho)n(wn)f(in)1988 523 y(Figure6.)1996
1820 y
 currentpoint currentpoint translate 0.47343 0.47343 scale neg exch
neg exch translate
 1996 1820 a 1996 1820 a
 gsave currentpoint currentpoint translate +0 neg rotate neg exch neg
exch translate
 1996 1820 a @beginspecial
27 @llx 421 @lly 506 @urx 717 @ury 4790 @rwi @setspecial
%%BeginDocument: ./mat/5model.eps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 27 421 506 717
%%Title: 5model
%%CreationDate: Fri Dec 10 00:50:08 2004
%%Creator: Tgif-4.1.40 by William Chia-Wei Cheng (william@cs.UCLA.edu)
%%ProducedBy: (unknown)
%%Pages: 1
%%DocumentFonts: (atend)
%%EndComments
%%BeginProlog

/tgifdict 53 dict def
tgifdict begin

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/TGAT % tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/TGMAX
 { exch dup 3 1 roll exch dup 3 1 roll gt { pop } { exch pop } ifelse
 } def
/TGMIN
 { exch dup 3 1 roll exch dup 3 1 roll lt { pop } { exch pop } ifelse
 } def
/TGSW { stringwidth pop } def

/bd { bind def } bind def

/GS { gsave } bd
/GR { grestore } bd
/NP { newpath } bd
/CP { closepath } bd
/CHP { charpath } bd
/CT { curveto } bd
/L { lineto } bd
/RL { rlineto } bd
/M { moveto } bd
/RM { rmoveto } bd
/S { stroke } bd
/F { fill } bd
/TR { translate } bd
/RO { rotate } bd
/SC { scale } bd
/MU { mul } bd
/DI { div } bd
/DU { dup } bd
/NE { neg } bd
/AD { add } bd
/SU { sub } bd
/PO { pop } bd
/EX { exch } bd
/CO { concat } bd
/CL { clip } bd
/EC { eoclip } bd
/EF { eofill } bd
/IM { image } bd
/IMM { imagemask } bd
/ARY { array } bd
/SG { setgray } bd
/RG { setrgbcolor } bd
/SD { setdash } bd
/W { setlinewidth } bd
/SM { setmiterlimit } bd
/SLC { setlinecap } bd
/SLJ { setlinejoin } bd
/SH { show } bd
/FF { findfont } bd
/MS { makefont setfont } bd
/AR { arcto 4 {pop} repeat } bd
/CURP { currentpoint } bd
/FLAT { flattenpath strokepath clip newpath } bd
/TGSM { tgiforigctm setmatrix } def
/TGRM { savematrix setmatrix } def

end

%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1

%%PageBoundingBox: 27 421 506 717
tgifdict begin
/tgifsavedpage save def

1 SM
1 W

0 SG

72 0 MU 72 11 MU TR
72 128 DI 100.000 MU 100 DI DU NE SC

GS

/tgiforigctm matrix currentmatrix def

% BOX
0 SG
GS
   10 SM
   GS
      NP 228 136 M 784 136 L 784 240 L 228 240 L CP
      2 W
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      347 204 M
      GS
            0 SG
            /NewCenturySchlbk-Bold FF [34 0 0 -34 0 0] MS
            (User Program Layer) SH
      GR
   GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 228 240 M 784 240 L 784 344 L 228 344 L CP
      2 W
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      431 308 M
      GS
            0 SG
            /NewCenturySchlbk-Bold FF [34 0 0 -34 0 0] MS
            (API Layer) SH
      GR
   GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 228 344 M 784 344 L 784 448 L 228 448 L CP
      2 W
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      512 412 M
      GS
        GS
        0
            /NewCenturySchlbk-Bold FF [34 0 0 -34 0 0] MS
            (Device Driver Layer) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /NewCenturySchlbk-Bold FF [34 0 0 -34 0 0] MS
            (Device Driver Layer) SH
      GR
   GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 228 448 M 784 448 L 784 552 L 228 552 L CP
      2 W
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      512 516 M
      GS
        GS
        0
            /NewCenturySchlbk-Bold FF [34 0 0 -34 0 0] MS
            (I/O & Control Logic Layer) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /NewCenturySchlbk-Bold FF [34 0 0 -34 0 0] MS
            (I/O & Control Logic Layer) SH
      GR
   GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 228 552 M 784 552 L 784 656 L 228 656 L CP
      2 W
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      512 620 M
      GS
        GS
        0
            /NewCenturySchlbk-Bold FF [34 0 0 -34 0 0] MS
            (Arithmetic Logic Layer) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /NewCenturySchlbk-Bold FF [34 0 0 -34 0 0] MS
            (Arithmetic Logic Layer) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      55 304 M
      GS
            0 SG
            /NewCenturySchlbk-Bold FF [34 0 0 -34 0 0] MS
            (auto gen.) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      51 616 M
      GS
            0 SG
            /NewCenturySchlbk-Bold FF [34 0 0 -34 0 0] MS
            (auto gen.) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      71 412 M
      GS
            0 SG
            /NewCenturySchlbk-Bold FF [18 0 0 -18 0 0] MS
            (HW depend.) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      71 508 M
      GS
            0 SG
            /NewCenturySchlbk-Bold FF [18 0 0 -18 0 0] MS
            (HW depend.) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      796 316 M
      60 0 atan DU cos 20.000 MU exch sin 20.000 MU RM
      60 0 atan DU cos 20.000 MU 796 exch SU
      exch sin 20.000 MU 376 exch SU L
   TGSM
   6 W
   S
   1 W
GR
GS
   TGSM
   NP
      796 316 20.000 8.000 0 -60 TGAT
   1 SG CP F
   0 SG
   NP
      796 316 20.000 8.000 0 -60 TGAT
   CP F
GR
GS
   TGSM
   NP
      796 376 20.000 8.000 0 60 TGAT
   1 SG CP F
   0 SG
   NP
      796 376 20.000 8.000 0 60 TGAT
   CP F
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      796 524 M
      60 0 atan DU cos 20.000 MU exch sin 20.000 MU RM
      60 0 atan DU cos 20.000 MU 796 exch SU
      exch sin 20.000 MU 584 exch SU L
   TGSM
   6 W
   S
   1 W
GR
GS
   TGSM
   NP
      796 524 20.000 8.000 0 -60 TGAT
   1 SG CP F
   0 SG
   NP
      796 524 20.000 8.000 0 -60 TGAT
   CP F
GR
GS
   TGSM
   NP
      796 584 20.000 8.000 0 60 TGAT
   1 SG CP F
   0 SG
   NP
      796 584 20.000 8.000 0 60 TGAT
   CP F
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      840 396 M
      837.33 374.67 826.67 358.67
      -16 -28 atan DU cos 10.000 MU 808 exch SU
      exch sin 10.000 MU 348 exch SU CT
   TGSM
   2 W
   S
   1 W
GR
GS
   TGSM
   NP
      808 348 10.000 4.000 -28 -16 TGAT
   1 SG CP F
   0 SG
   NP
      808 348 10.000 4.000 -28 -16 TGAT
   CP F
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      840 484 M
      837.33 513.33 826.67 536.00
      24 -28 atan DU cos 10.000 MU 808 exch SU
      exch sin 10.000 MU 552 exch SU CT
   TGSM
   2 W
   S
   1 W
GR
GS
   TGSM
   NP
      808 552 10.000 4.000 -28 24 TGAT
   1 SG CP F
   0 SG
   NP
      808 552 10.000 4.000 -28 24 TGAT
   CP F
GR

% TEXT
NP
0 SG
   GS
      1 W
      807 424 M
      GS
            0 SG
            /NewCenturySchlbk-Bold FF [18 0 0 -18 0 0] MS
            (PGR ) SH
      GR
      0 23 RM
      GS
            0 SG
            /NewCenturySchlbk-Bold FF [18 0 0 -18 0 0] MS
            (Standard) SH
      GR
      0 23 RM
      GS
            0 SG
            /NewCenturySchlbk-Bold FF [18 0 0 -18 0 0] MS
            (Specific) SH
      GR
   GR

GR
tgifsavedpage restore
end
showpage

%%Trailer
%MatchingCreationDate: Fri Dec 10 00:50:08 2004
%%DocumentFonts: NewCenturySchlbk-Bold
%%EOF

%%EndDocument
 @endspecial 5988 1820 a
 currentpoint grestore moveto
 5988 1820 a 1996 1820 a
 currentpoint currentpoint translate 1 0.47343 div 1 0.47343 div scale
neg exch neg exch translate
 1996
1820 a 2391 2002 a Fu(Figure)i(4:)25 b(PGR)c(\002)n(v)o(e)f(layers)g
(model.)2114 3299 y
 currentpoint currentpoint translate 0.6914 0.6914 scale neg exch neg
exch translate
 2114 3299 a 2114 3299 a
 gsave currentpoint currentpoint translate +0 neg rotate neg exch neg
exch translate
 2114 3299
a @beginspecial 65 @llx 517 @lly 352 @urx 687 @ury 2870
@rwi @setspecial
%%BeginDocument: ./mat/pg3.eps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 65 517 352 687
%%Title: pg3
%%CreationDate: Sun Dec 12 00:06:37 2004
%%Creator: Tgif-4.1.40 by William Chia-Wei Cheng (william@cs.UCLA.edu)
%%ProducedBy: (unknown)
%%Pages: 1
%%DocumentFonts: (atend)
%%EndComments
%%BeginProlog

/tgifdict 53 dict def
tgifdict begin

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/TGAT % tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/TGMAX
 { exch dup 3 1 roll exch dup 3 1 roll gt { pop } { exch pop } ifelse
 } def
/TGMIN
 { exch dup 3 1 roll exch dup 3 1 roll lt { pop } { exch pop } ifelse
 } def
/TGSW { stringwidth pop } def

/bd { bind def } bind def

/GS { gsave } bd
/GR { grestore } bd
/NP { newpath } bd
/CP { closepath } bd
/CHP { charpath } bd
/CT { curveto } bd
/L { lineto } bd
/RL { rlineto } bd
/M { moveto } bd
/RM { rmoveto } bd
/S { stroke } bd
/F { fill } bd
/TR { translate } bd
/RO { rotate } bd
/SC { scale } bd
/MU { mul } bd
/DI { div } bd
/DU { dup } bd
/NE { neg } bd
/AD { add } bd
/SU { sub } bd
/PO { pop } bd
/EX { exch } bd
/CO { concat } bd
/CL { clip } bd
/EC { eoclip } bd
/EF { eofill } bd
/IM { image } bd
/IMM { imagemask } bd
/ARY { array } bd
/SG { setgray } bd
/RG { setrgbcolor } bd
/SD { setdash } bd
/W { setlinewidth } bd
/SM { setmiterlimit } bd
/SLC { setlinecap } bd
/SLJ { setlinejoin } bd
/SH { show } bd
/FF { findfont } bd
/MS { makefont setfont } bd
/AR { arcto 4 {pop} repeat } bd
/CURP { currentpoint } bd
/FLAT { flattenpath strokepath clip newpath } bd
/TGSM { tgiforigctm setmatrix } def
/TGRM { savematrix setmatrix } def

end

%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1

%%PageBoundingBox: 65 517 352 687
tgifdict begin
/tgifsavedpage save def

1 SM
1 W

0 SG

72 0 MU 72 11 MU TR
72 128 DI 100.000 MU 100 DI DU NE SC

GS

/tgiforigctm matrix currentmatrix def

% BOX
0 SG
GS
   10 SM
   GS
      NP 120 188 M 624 188 L 624 456 L 120 456 L CP
      2 W
      S
   GR
GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 316 364 M 420 364 L 420 428 L 316 428 L CP
      3 W
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      380 208 M
      GS
        GS
        0
            /Helvetica-Bold FF [14 0 0 -14 0 0] MS
            (PE FPGAs \(x4\)) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Helvetica-Bold FF [14 0 0 -14 0 0] MS
            (PE FPGAs \(x4\)) SH
      GR
   GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 148 220 M 244 220 L 244 284 L 148 284 L CP
      3 W
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      488 400 M
      GS
        GS
        0
            /Helvetica-Bold FF [14 0 0 -14 0 0] MS
            (Interface FPGA) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Helvetica-Bold FF [14 0 0 -14 0 0] MS
            (Interface FPGA) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      192 288 M
      44 0 atan DU cos 14.000 MU exch sin 14.000 MU RM
      192 332 L
      548 332 L
      -44 0 atan DU cos 14.000 MU 548 exch SU
      exch sin 14.000 MU 288 exch SU L
   TGSM
   4 W
   S
   1 W
GR
GS
   TGSM
   NP
      192 288 14.000 6.000 0 -44 TGAT
   1 SG CP F
   0 SG
   NP
      192 288 14.000 6.000 0 -44 TGAT
   CP F
GR
GS
   TGSM
   NP
      548 288 14.000 6.000 0 -44 TGAT
   1 SG CP F
   0 SG
   NP
      548 288 14.000 6.000 0 -44 TGAT
   CP F
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      316 332 M
      -44 0 atan DU cos 14.000 MU 316 exch SU
      exch sin 14.000 MU 288 exch SU L
   TGSM
   4 W
   S
   1 W
GR
GS
   TGSM
   NP
      316 288 14.000 6.000 0 -44 TGAT
   1 SG CP F
   0 SG
   NP
      316 288 14.000 6.000 0 -44 TGAT
   CP F
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      424 332 M
      -44 0 atan DU cos 14.000 MU 424 exch SU
      exch sin 14.000 MU 288 exch SU L
   TGSM
   4 W
   S
   1 W
GR
GS
   TGSM
   NP
      424 288 14.000 6.000 0 -44 TGAT
   1 SG CP F
   0 SG
   NP
      424 288 14.000 6.000 0 -44 TGAT
   CP F
GR

% POLY/OPEN-SPLINE
0 SG
GS
   334 346 TR
   [-1.000 -0.000 0.000 -1.000 36 29] CO
   334 NE 346 NE TR
GS
   NP
      334 390 M
      334 369 L
   TGSM
   4 W
   S
   1 W
GR
GS
   TGSM
   NP
      370 363 14.000 6.000 0 32 TGAT
   1 SG CP F
   0 SG
   NP
      370 363 14.000 6.000 0 32 TGAT
   CP F
GR
GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 264 456 M 472 456 L 472 484 L 264 484 L CP
      3 W
      S
   GR
GR

% POLY/OPEN-SPLINE
0 SG
GS
   330 438 TR
   [-1.000 -0.000 0.000 -1.000 36 29] CO
   330 NE 438 NE TR
GS
   NP
      330 482 M
      330 471 M
      330 461 L
   TGSM
   4 W
   S
   1 W
GR
GS
   TGSM
   NP
      366 423 14.000 6.000 0 -32 TGAT
   1 SG CP F
   0 SG
   NP
      366 423 14.000 6.000 0 -32 TGAT
   CP F
GR
GS
   TGSM
   NP
      366 455 14.000 6.000 0 32 TGAT
   1 SG CP F
   0 SG
   NP
      366 455 14.000 6.000 0 32 TGAT
   CP F
GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      368 476 M
      GS
        GS
        0
            /Helvetica-Bold FF [14 0 0 -14 0 0] MS
            (PCI 64bit/66MHz Card Edge) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Helvetica-Bold FF [14 0 0 -14 0 0] MS
            (PCI 64bit/66MHz Card Edge) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      196 248 M
      GS
        GS
        0
            /Helvetica-Bold FF [14 0 0 -14 0 0] MS
            (Xilinx) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Helvetica-Bold FF [14 0 0 -14 0 0] MS
            (Xilinx) SH
      GR
      0 17 RM
      GS
        GS
        0
            /Helvetica-Bold FF [14 0 0 -14 0 0] MS
            (XC2VP70-5) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Helvetica-Bold FF [14 0 0 -14 0 0] MS
            (XC2VP70-5) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      372 388 M
      GS
        GS
        0
            /Helvetica-Bold FF [14 0 0 -14 0 0] MS
            (Xilinx ) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Helvetica-Bold FF [14 0 0 -14 0 0] MS
            (Xilinx ) SH
      GR
      0 17 RM
      GS
        GS
        0
            /Helvetica-Bold FF [14 0 0 -14 0 0] MS
            (XC2V1000-5 ) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Helvetica-Bold FF [14 0 0 -14 0 0] MS
            (XC2V1000-5 ) SH
      GR
      0 17 RM
      GS
        GS
        0
            /Helvetica-Bold FF [14 0 0 -14 0 0] MS
            (FPGA) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Helvetica-Bold FF [14 0 0 -14 0 0] MS
            (FPGA) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      228 352 M
      GS
        GS
        0
            /Helvetica-Bold FF [14 0 0 -14 0 0] MS
            (64bit bus) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Helvetica-Bold FF [14 0 0 -14 0 0] MS
            (64bit bus) SH
      GR
   GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 268 220 M 364 220 L 364 284 L 268 284 L CP
      3 W
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      316 248 M
      GS
        GS
        0
            /Helvetica-Bold FF [14 0 0 -14 0 0] MS
            (Xilinx) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Helvetica-Bold FF [14 0 0 -14 0 0] MS
            (Xilinx) SH
      GR
      0 17 RM
      GS
        GS
        0
            /Helvetica-Bold FF [14 0 0 -14 0 0] MS
            (XC2VP70-5) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Helvetica-Bold FF [14 0 0 -14 0 0] MS
            (XC2VP70-5) SH
      GR
   GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 388 220 M 484 220 L 484 284 L 388 284 L CP
      3 W
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      436 248 M
      GS
        GS
        0
            /Helvetica-Bold FF [14 0 0 -14 0 0] MS
            (Xilinx) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Helvetica-Bold FF [14 0 0 -14 0 0] MS
            (Xilinx) SH
      GR
      0 17 RM
      GS
        GS
        0
            /Helvetica-Bold FF [14 0 0 -14 0 0] MS
            (XC2VP70-5) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Helvetica-Bold FF [14 0 0 -14 0 0] MS
            (XC2VP70-5) SH
      GR
   GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 508 220 M 604 220 L 604 284 L 508 284 L CP
      3 W
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      556 248 M
      GS
        GS
        0
            /Helvetica-Bold FF [14 0 0 -14 0 0] MS
            (Xilinx) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Helvetica-Bold FF [14 0 0 -14 0 0] MS
            (Xilinx) SH
      GR
      0 17 RM
      GS
        GS
        0
            /Helvetica-Bold FF [14 0 0 -14 0 0] MS
            (XC2VP70-5) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Helvetica-Bold FF [14 0 0 -14 0 0] MS
            (XC2VP70-5) SH
      GR
   GR

GR
tgifsavedpage restore
end
showpage

%%Trailer
%MatchingCreationDate: Sun Dec 12 00:06:37 2004
%%DocumentFonts: Helvetica-Bold
%%EOF

%%EndDocument
 @endspecial 4506 3299 a
 currentpoint grestore moveto
 4506 3299 a 2114 3299 a
 currentpoint currentpoint translate 1 0.6914 div 1 0.6914 div scale
neg exch neg exch translate
 2114
3299 a 2267 3481 a Fu(Figure)f(5:)26 b(PR)m(OGRAPE-3)20
b(board)f(structure)1988 3938 y Fp(2.3)100 b(P)o(arametrized)25
b(Arithmetic)h(Modules)1988 4104 y Fu(The)k(parametrized)d(arithmetic)i
(modules)f(are)i(the)f(most)h(lo)n(w-)1988 4204 y(le)n(v)o(el)24
b(components)f(for)h(the)g(PGR)h(package)e(such)i(as)g(addition,)1988
4303 y(subtraction,)19 b(multiplication,)g(di)n(vision,)h(and)g
(square-root,)e(etc.)1988 4403 y(Currently)-5 b(,)42
b(the)c(PGR)i(package)d(supports)g(29)h(parametrized)1988
4503 y(arithmetic)20 b(modules)f(as)i(sho)n(wn)e(in)i(table)f(2.)2071
4608 y(In)40 b(this)h(table,)j(modules)39 b(with)h Fn(pg)p
3184 4608 25 4 v 30 w(float)f Fu(are)h(\003oating)1988
4707 y(point)16 b(format)e(arithmetics.)23 b(W)-7 b(e)17
b(de\002ne)f(internal)f(\003oating-point)1988 4807 y(format)32
b(as)i(1-bit)e(for)g(a)h(sign,)j(1-bit)c(for)g(a)h(non-zero)e(e)o
(xpres-)1988 4907 y(sion,)19 b Ft(n)p Fu(-bit)e(for)h(e)o(xponent,)e
(and)h Ft(m)p Fu(-bit)h(for)f(mantissa,)h(where)g Ft(m)1988
5006 y Fu(and)k Ft(n)h Fu(can)f(be)g(changed)e(arbitrary)h(up)g(to)i
(single-precision)d(for)p eop end
%%Page: 6 6
TeXDict begin 6 5 bop 529 3018 a
 currentpoint currentpoint translate 0.79109 0.79109 scale neg exch
neg exch translate
 529 3018 a 529 3018
a
 gsave currentpoint currentpoint translate +0 neg rotate neg exch neg
exch translate
 529 3018 a @beginspecial 41 @llx 371 @lly 471 @urx
762 @ury 4300 @rwi @setspecial
%%BeginDocument: ./mat/pgrflow.eps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 41 371 471 762
%%Title: pgrflow
%%CreationDate: Thu Dec  9 00:21:55 2004
%%Creator: Tgif-4.1.40 by William Chia-Wei Cheng (william@cs.UCLA.edu)
%%ProducedBy: (unknown)
%%Pages: 1
%%DocumentFonts: (atend)
%%EndComments
%%BeginProlog

/tgifdict 53 dict def
tgifdict begin

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/TGAT % tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/TGMAX
 { exch dup 3 1 roll exch dup 3 1 roll gt { pop } { exch pop } ifelse
 } def
/TGMIN
 { exch dup 3 1 roll exch dup 3 1 roll lt { pop } { exch pop } ifelse
 } def
/TGSW { stringwidth pop } def

/bd { bind def } bind def

/GS { gsave } bd
/GR { grestore } bd
/NP { newpath } bd
/CP { closepath } bd
/CHP { charpath } bd
/CT { curveto } bd
/L { lineto } bd
/RL { rlineto } bd
/M { moveto } bd
/RM { rmoveto } bd
/S { stroke } bd
/F { fill } bd
/TR { translate } bd
/RO { rotate } bd
/SC { scale } bd
/MU { mul } bd
/DI { div } bd
/DU { dup } bd
/NE { neg } bd
/AD { add } bd
/SU { sub } bd
/PO { pop } bd
/EX { exch } bd
/CO { concat } bd
/CL { clip } bd
/EC { eoclip } bd
/EF { eofill } bd
/IM { image } bd
/IMM { imagemask } bd
/ARY { array } bd
/SG { setgray } bd
/RG { setrgbcolor } bd
/SD { setdash } bd
/W { setlinewidth } bd
/SM { setmiterlimit } bd
/SLC { setlinecap } bd
/SLJ { setlinejoin } bd
/SH { show } bd
/FF { findfont } bd
/MS { makefont setfont } bd
/AR { arcto 4 {pop} repeat } bd
/CURP { currentpoint } bd
/FLAT { flattenpath strokepath clip newpath } bd
/TGSM { tgiforigctm setmatrix } def
/TGRM { savematrix setmatrix } def

end

%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1

%%PageBoundingBox: 41 371 471 762
tgifdict begin
/tgifsavedpage save def

1 SM
1 W

0 SG

72 0 MU 72 11 MU TR
72 128 DI 100.000 MU 100 DI DU NE SC

GS

/tgiforigctm matrix currentmatrix def

% RCBOX
0 SG
GS
   GS
      NP
         492 56 M
         508 56 508 120 16 AR
         508 104 L
         508 120 332 120 16 AR
         348 120 L
         332 120 332 56 16 AR
         332 72 L
         332 56 508 56 16 AR
      CP
      2 W
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      352 96 M
      GS
            0 SG
            /Helvetica-Bold FF [18 0 0 -18 0 0] MS
            (Target Function) SH
      GR
   GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 204 368 M 320 368 L 320 432 L 204 432 L CP
      2 W
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      220 392 M
      GS
            0 SG
            /Helvetica-Bold FF [18 0 0 -18 0 0] MS
            (C source) SH
      GR
      0 23 RM
      GS
            0 SG
            /Helvetica-Bold FF [18 0 0 -18 0 0] MS
            (File) SH
      GR
   GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 360 368 M 476 368 L 476 432 L 360 432 L CP
      2 W
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      400 392 M
      GS
            0 SG
            /Helvetica-Bold FF [18 0 0 -18 0 0] MS
            (HDL) SH
      GR
      0 23 RM
      GS
            0 SG
            /Helvetica-Bold FF [18 0 0 -18 0 0] MS
            (File) SH
      GR
   GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 640 368 M 756 368 L 756 432 L 640 432 L CP
      2 W
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      656 392 M
      GS
            0 SG
            /Helvetica-Bold FF [18 0 0 -18 0 0] MS
            (C source) SH
      GR
      0 23 RM
      GS
            0 SG
            /Helvetica-Bold FF [18 0 0 -18 0 0] MS
            (File) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   [8 8] 0 SD
   NP
      364 296 M
      64 -96 atan DU cos 20.000 MU 268 exch SU
      exch sin 20.000 MU 360 exch SU L
   TGSM
   6 W
   S
   [] 0 SD
   1 W
GR
GS
   TGSM
   NP
      268 360 20.000 8.000 -96 64 TGAT
   1 SG CP F
   0 SG
   NP
      268 360 20.000 8.000 -96 64 TGAT
   CP F
GR

% POLY/OPEN-SPLINE
0 SG
GS
   [8 8] 0 SD
   NP
      416 292 M
      68 0 atan DU cos 20.000 MU 416 exch SU
      exch sin 20.000 MU 360 exch SU L
   TGSM
   6 W
   S
   [] 0 SD
   1 W
GR
GS
   TGSM
   NP
      416 360 20.000 8.000 0 68 TGAT
   1 SG CP F
   0 SG
   NP
      416 360 20.000 8.000 0 68 TGAT
   CP F
GR

% POLY/OPEN-SPLINE
0 SG
GS
   [8 8] 0 SD
   NP
      472 292 M
      68 192 atan DU cos 20.000 MU 664 exch SU
      exch sin 20.000 MU 360 exch SU L
   TGSM
   6 W
   S
   [] 0 SD
   1 W
GR
GS
   TGSM
   NP
      664 360 20.000 8.000 192 68 TGAT
   1 SG CP F
   0 SG
   NP
      664 360 20.000 8.000 192 68 TGAT
   CP F
GR

% TEXT
NP
0 SG
   GS
      1 W
      120 400 M
      GS
            0 SG
            /Helvetica FF [18 0 0 -18 0 0] MS
            (software) SH
      GR
      0 22 RM
      GS
            0 SG
            /Helvetica FF [18 0 0 -18 0 0] MS
            (emulator) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      488 388 M
      GS
            0 SG
            /Helvetica FF [18 0 0 -18 0 0] MS
            (processor logic) SH
      GR
      0 22 RM
      GS
            0 SG
            /Helvetica FF [18 0 0 -18 0 0] MS
            (control logic) SH
      GR
      0 22 RM
      GS
            0 SG
            /Helvetica FF [18 0 0 -18 0 0] MS
            (interface logic) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      764 396 M
      GS
            0 SG
            /Helvetica FF [18 0 0 -18 0 0] MS
            (interface) SH
      GR
      0 22 RM
      GS
            0 SG
            /Helvetica FF [18 0 0 -18 0 0] MS
            (program) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      288 92 M
      GS
            0 SG
            /Helvetica-Bold FF [24 0 0 -24 0 0] MS
            (\(A\)) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      156 484 M
      GS
            0 SG
            /Helvetica-Bold FF [24 0 0 -24 0 0] MS
            (\(B'\)) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      496 484 M
      GS
            0 SG
            /Helvetica-Bold FF [24 0 0 -24 0 0] MS
            (\(C'\)) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      760 484 M
      GS
            0 SG
            /Helvetica-Bold FF [24 0 0 -24 0 0] MS
            (\(D'\)) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      264 432 M
      36 0 atan DU cos 10.000 MU 264 exch SU
      exch sin 10.000 MU 468 exch SU L
   TGSM
   2 W
   S
   1 W
GR
GS
   TGSM
   NP
      264 468 10.000 4.000 0 36 TGAT
   1 SG CP F
   0 SG
   NP
      264 468 10.000 4.000 0 36 TGAT
   CP F
GR

% RCBOX
0 SG
GS
   GS
      NP
         304 472 M
         320 472 320 512 16 AR
         320 496 L
         320 512 208 512 16 AR
         224 512 L
         208 512 208 472 16 AR
         208 488 L
         208 472 320 472 16 AR
      CP
      2 W
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      216 500 M
      GS
            0 SG
            /Helvetica-Bold FF [18 0 0 -18 0 0] MS
            (C compiler) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      264 512 M
      36 0 atan DU cos 10.000 MU 264 exch SU
      exch sin 10.000 MU 548 exch SU L
   TGSM
   2 W
   S
   1 W
GR
GS
   TGSM
   NP
      264 548 10.000 4.000 0 36 TGAT
   1 SG CP F
   0 SG
   NP
      264 548 10.000 4.000 0 36 TGAT
   CP F
GR

% RCBOX
0 SG
GS
   GS
      NP
         304 552 M
         320 552 320 596 16 AR
         320 580 L
         320 596 208 596 16 AR
         224 596 L
         208 596 208 552 16 AR
         208 568 L
         208 552 320 552 16 AR
      CP
      2 W
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      220 580 M
      GS
            0 SG
            /Helvetica-Bold FF [18 0 0 -18 0 0] MS
            (API library) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   [4 4] 0 SD
   NP
      160 680 M
      -168 -56 atan DU cos 10.000 MU exch sin 10.000 MU RM
      122.67 568.00 99.33 482.67 90.00 424.00 CT
      80.67 365.33 89.33 312.67 116.00 266.00 CT
      142.67 219.33 210.67 166.67
      -88 164 atan DU cos 10.000 MU 320 exch SU
      exch sin 10.000 MU 108 exch SU CT
   TGSM
   2 W
   S
   [] 0 SD
   1 W
GR
GS
   TGSM
   NP
      160 680 10.000 4.000 56 168 TGAT
   1 SG CP F
   0 SG
   NP
      160 680 10.000 4.000 56 168 TGAT
   CP F
GR
GS
   TGSM
   NP
      320 108 10.000 4.000 164 -88 TGAT
   1 SG CP F
   0 SG
   NP
      320 108 10.000 4.000 164 -88 TGAT
   CP F
GR

% TEXT
NP
0 SG
   GS
      1 W
      160 152 M
      GS
            0 SG
            /Helvetica FF [18 0 0 -18 0 0] MS
            (compare) SH
      GR
   GR

% RCBOX
0 SG
GS
   GS
      NP
         472 472 M
         488 472 488 536 16 AR
         488 520 L
         488 536 344 536 16 AR
         360 536 L
         344 536 344 472 16 AR
         344 488 L
         344 472 488 472 16 AR
      CP
      2 W
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      360 500 M
      GS
            0 SG
            /Helvetica-Bold FF [18 0 0 -18 0 0] MS
            (FPGA design) SH
      GR
      0 23 RM
      GS
            0 SG
            /Helvetica-Bold FF [18 0 0 -18 0 0] MS
            (Tool) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      416 432 M
      36 0 atan DU cos 10.000 MU 416 exch SU
      exch sin 10.000 MU 468 exch SU L
   TGSM
   2 W
   S
   1 W
GR
GS
   TGSM
   NP
      416 468 10.000 4.000 0 36 TGAT
   1 SG CP F
   0 SG
   NP
      416 468 10.000 4.000 0 36 TGAT
   CP F
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      416 536 M
      36 0 atan DU cos 10.000 MU 416 exch SU
      exch sin 10.000 MU 572 exch SU L
   TGSM
   2 W
   S
   1 W
GR
GS
   TGSM
   NP
      416 572 10.000 4.000 0 36 TGAT
   1 SG CP F
   0 SG
   NP
      416 572 10.000 4.000 0 36 TGAT
   CP F
GR

% RCBOX
0 SG
GS
   GS
      NP
         480 576 M
         496 576 496 636 16 AR
         496 620 L
         496 636 336 636 16 AR
         352 636 L
         336 636 336 576 16 AR
         336 592 L
         336 576 496 576 16 AR
      CP
      2 W
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      356 600 M
      GS
            0 SG
            /Helvetica-Bold FF [18 0 0 -18 0 0] MS
            (Configuration) SH
      GR
      0 23 RM
      GS
            0 SG
            /Helvetica-Bold FF [18 0 0 -18 0 0] MS
            (File) SH
      GR
   GR

% RCBOX
0 SG
GS
   GS
      NP
         736 472 M
         752 472 752 512 16 AR
         752 496 L
         752 512 640 512 16 AR
         656 512 L
         640 512 640 472 16 AR
         640 488 L
         640 472 752 472 16 AR
      CP
      2 W
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      648 500 M
      GS
            0 SG
            /Helvetica-Bold FF [18 0 0 -18 0 0] MS
            (C compiler) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      696 432 M
      36 0 atan DU cos 10.000 MU 696 exch SU
      exch sin 10.000 MU 468 exch SU L
   TGSM
   2 W
   S
   1 W
GR
GS
   TGSM
   NP
      696 468 10.000 4.000 0 36 TGAT
   1 SG CP F
   0 SG
   NP
      696 468 10.000 4.000 0 36 TGAT
   CP F
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      696 512 M
      36 0 atan DU cos 10.000 MU 696 exch SU
      exch sin 10.000 MU 548 exch SU L
   TGSM
   2 W
   S
   1 W
GR
GS
   TGSM
   NP
      696 548 10.000 4.000 0 36 TGAT
   1 SG CP F
   0 SG
   NP
      696 548 10.000 4.000 0 36 TGAT
   CP F
GR

% RCBOX
0 SG
GS
   GS
      NP
         736 552 M
         752 552 752 596 16 AR
         752 580 L
         752 596 640 596 16 AR
         656 596 L
         640 596 640 552 16 AR
         640 568 L
         640 552 752 552 16 AR
      CP
      2 W
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      652 580 M
      GS
            0 SG
            /Helvetica-Bold FF [18 0 0 -18 0 0] MS
            (API library) SH
      GR
   GR

% RCBOX
0 SG
GS
   GS
      NP
         740 684 M
         756 684 756 744 16 AR
         756 728 L
         756 744 468 744 16 AR
         484 744 L
         468 744 468 684 16 AR
         468 700 L
         468 684 756 684 16 AR
      CP
      2 W
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      488 708 M
      GS
            0 SG
            /Helvetica-Bold FF [18 0 0 -18 0 0] MS
            (Application Program) SH
      GR
      0 23 RM
      GS
            0 SG
            /Helvetica-Bold FF [18 0 0 -18 0 0] MS
            (with Reconfigurable System) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      492 632 M
      44 48 atan DU cos 10.000 MU 540 exch SU
      exch sin 10.000 MU 676 exch SU L
   TGSM
   2 W
   S
   1 W
GR
GS
   TGSM
   NP
      540 676 10.000 4.000 48 44 TGAT
   1 SG CP F
   0 SG
   NP
      540 676 10.000 4.000 48 44 TGAT
   CP F
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      696 596 M
      76 0 atan DU cos 10.000 MU 696 exch SU
      exch sin 10.000 MU 672 exch SU L
   TGSM
   2 W
   S
   1 W
GR
GS
   TGSM
   NP
      696 672 10.000 4.000 0 76 TGAT
   1 SG CP F
   0 SG
   NP
      696 672 10.000 4.000 0 76 TGAT
   CP F
GR

% RCBOX
0 SG
GS
   GS
      NP
         368 684 M
         384 684 384 744 16 AR
         384 728 L
         384 744 156 744 16 AR
         172 744 L
         156 744 156 684 16 AR
         156 700 L
         156 684 384 684 16 AR
      CP
      2 W
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      176 708 M
      GS
            0 SG
            /Helvetica-Bold FF [18 0 0 -18 0 0] MS
            (Application Program) SH
      GR
      0 23 RM
      GS
            0 SG
            /Helvetica-Bold FF [18 0 0 -18 0 0] MS
            (with Bit-level Emulator) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      264 596 M
      72 0 atan DU cos 10.000 MU 264 exch SU
      exch sin 10.000 MU 668 exch SU L
   TGSM
   2 W
   S
   1 W
GR
GS
   TGSM
   NP
      264 668 10.000 4.000 0 72 TGAT
   1 SG CP F
   0 SG
   NP
      264 668 10.000 4.000 0 72 TGAT
   CP F
GR

% POLY/OPEN-SPLINE
0 SG
GS
   [4 4] 0 SD
   NP
      388 716 M
      0 76 atan DU cos 10.000 MU exch sin 10.000 MU RM
      0 76 atan DU cos 10.000 MU 464 exch SU
      exch sin 10.000 MU 716 exch SU L
   TGSM
   2 W
   S
   [] 0 SD
   1 W
GR
GS
   TGSM
   NP
      388 716 10.000 4.000 -76 0 TGAT
   1 SG CP F
   0 SG
   NP
      388 716 10.000 4.000 -76 0 TGAT
   CP F
GR
GS
   TGSM
   NP
      464 716 10.000 4.000 76 0 TGAT
   1 SG CP F
   0 SG
   NP
      464 716 10.000 4.000 76 0 TGAT
   CP F
GR

% TEXT
NP
0 SG
   GS
      1 W
      392 700 M
      GS
            0 SG
            /Helvetica FF [18 0 0 -18 0 0] MS
            (compare) SH
      GR
   GR

% RCBOX
0 SG
GS
   GS
      NP
         492 224 M
         508 224 508 288 16 AR
         508 272 L
         508 288 332 288 16 AR
         348 288 L
         332 288 332 224 16 AR
         332 240 L
         332 224 508 224 16 AR
      CP
      6 W
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      388 268 M
      GS
            0 SG
            /Helvetica-Bold FF [34 0 0 -34 0 0] MS
            (PGR) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      304 172 M
      GS
            0 SG
            /Helvetica-Bold FF [24 0 0 -24 0 0] MS
            (\(A'\)) SH
      GR
   GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 360 152 M 472 152 L 472 196 L 360 196 L CP
      5 W
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      372 184 M
      GS
            0 SG
            /Helvetica-Bold FF [18 0 0 -18 0 0] MS
            (PGDL File) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      416 120 M
      28 0 atan DU cos 10.000 MU 416 exch SU
      exch sin 10.000 MU 148 exch SU L
   TGSM
   2 W
   S
   1 W
GR
GS
   TGSM
   NP
      416 148 10.000 4.000 0 28 TGAT
   1 SG CP F
   0 SG
   NP
      416 148 10.000 4.000 0 28 TGAT
   CP F
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      416 196 M
      28 0 atan DU cos 10.000 MU 416 exch SU
      exch sin 10.000 MU 224 exch SU L
   TGSM
   2 W
   S
   1 W
GR
GS
   TGSM
   NP
      416 224 10.000 4.000 0 28 TGAT
   1 SG CP F
   0 SG
   NP
      416 224 10.000 4.000 0 28 TGAT
   CP F
GR

% TEXT
NP
0 SG
   GS
      1 W
      584 668 M
      GS
            0 SG
            /Helvetica-Bold FF [24 0 0 -24 0 0] MS
            (\(E'\)) SH
      GR
   GR

GR
tgifsavedpage restore
end
showpage

%%Trailer
%MatchingCreationDate: Thu Dec  9 00:21:55 2004
%%DocumentFonts: Helvetica
%%+ Helvetica-Bold
%%EOF

%%EndDocument
 @endspecial 4113 3018 a
 currentpoint grestore moveto
 4113 3018 a 529 3018 a
 currentpoint currentpoint translate 1 0.79109 div 1 0.79109 div scale
neg exch neg exch translate
 529 3018
a 1111 3200 a Fu(Figure)19 b(3:)25 b(Ho)n(w)20 b(the)h(design)e(\003o)n
(w)h(changes)g(with)g(PGR.)0 3550 y(\003oating-point)26
b(in)i(the)g(PGDL.)g(F)o(or)g(e)o(xample,)g(in)h(the)f(PGDL,)0
3650 y(we)21 b(can)f(use)g(\003oat-point)f(addition)g(as)h(follo)n(ws;)
0 3832 y Fn(pg_float_add\(x,y,z,26,16,1\);)0 4010 y Fu(Here,)39
b(the)d(ar)o(guments)e(inside)i(of)f(parentheses)g(indicate)g(the)0
4110 y(\002rst)g(input,)i(the)d(second)f(input,)k(output,)f(total)f
(bit-length)d(of)0 4209 y(\003oating-point)27 b(format,)k(bit-length)d
(for)g(mantissa,)k(and)d(num-)0 4309 y(ber)22 b(of)g(pipeline)g
(stages,)h(respecti)n(v)o(ely)-5 b(,)20 b(from)i(the)g(\002rst)h(to)g
(sixth)0 4408 y(ar)o(gument.)31 b(This)23 b(particular)f(e)o(xample)g
(e)o(xpresses)g Ft(z)32 b Fm(=)c Ft(x)21 b Fm(+)f Ft(y)s
Fu(,)0 4508 y(where)g Ft(x;)14 b(y)s(;)g(z)25 b Fu(are)c(26-bit)f
(\003oating)g(numbers)f(\(mantissa)i(is)h(16-)0 4608
y(bit\).)27 b(And)20 b(a)h(number)e(of)i(pipeline)f(stage)g(for)h(this)
g(arithmetic)f(is)0 4707 y(one.)34 b(W)-7 b(e)24 b(note)f(that)g(for)g
(the)g(rounding)e(operation)g(in)j(the)f(PGR)0 4807 y(package,)g(we)i
(ha)n(v)o(e)e(implemented)g(nine)g(types)h(of)g(se)n(v)o(eral)g(op-)0
4907 y(tions)17 b(that)g(also)g(can)g(be)f(changed)f(by)i(a)g(hidden)e
(ar)o(gument)g(in)i(the)0 5006 y(PGDL.)23 b(If)g(this)h(ar)o(gument)d
(is)j(omitted)e(lik)o(e)i(abo)o(v)o(e)d(e)o(xample,)h(a)1988
3550 y(rounding)c(to)i(the)g(nearest)g(e)n(v)o(en)g(is)h(selected.)2071
3711 y(Modules)35 b Fn(pg)p 2503 3711 25 4 v 30 w(fix)p
2683 3711 V 29 w(addsub)g Fu(and)g Fn(pg)p 3303 3711
V 30 w(fix)p 3483 3711 V 29 w(accum)g Fu(are)1988 3811
y(\002x)o(ed)69 b(point)f(format)g(adder/subtracter)e(and)j(accumula-)
1988 3910 y(tor)m(,)75 b(respecti)n(v)o(ely)-5 b(.)156
b(Modules)63 b Fn(pg)p 3206 3910 V 30 w(log)p 3386 3910
V 29 w(muldiv)h Fu(and)1988 4010 y Fn(pg)p 2093 4010
V 30 w(log)p 2273 4010 V 29 w(unsigned)p 2702 4010 V
29 w(add)27 b Fu(are)g(logarithmic)e(format)h(multi-)1988
4110 y(plier/di)n(vider)19 b(and)i(unsigned)e(adder)m(,)h(respecti)n(v)
o(ely)-5 b(.)25 b(In)c(the)g(log-)1988 4209 y(arithmic)35
b(format,)i(a)f(positi)n(v)o(e,)i(non-zero)33 b(real)i(number)e
Ft(x)j Fu(is)1988 4309 y(represented)28 b(by)i(its)g(base-2)f
(logarithm)f Ft(y)33 b Fu(as)d Ft(x)41 b Fm(=)g(2)3632
4279 y Fl(y)3671 4309 y Fu(.)54 b(This)1988 4408 y(logarithmic)20
b(format)h(is)h(useful)f(because)g(it)i(has)f(lar)o(ger)e(dynam-)1988
4508 y(ics)31 b(length)e(for)g(the)h(same)g(w)o(ord)f(length)g(and)h
(operation)e(such)1988 4608 y(as)c(multiplication)d(and)h(square)g
(root)g(are)g(easier)h(to)g(implement)1988 4707 y(than)29
b(in)g(the)g(usual)g(\003oating-point)e(format.)50 b(As)30
b(a)f(result,)i(the)1988 4807 y(logarithmic)21 b(format)g(has)h(been)g
(adapted)f(for)g(the)i(gra)n(vitational)1988 4907 y(pipelines)40
b(in)h(lo)n(w-accurac)o(y)c(type)j(GRAPE-1,3,5)f(systems.)1988
5006 y(F)o(or)20 b(more)e(details)i(of)g(the)f(logarithmic)f(format,)g
(see)i(GRAPE-5)p eop end
%%Page: 7 7
TeXDict begin 7 6 bop 123 941 a Fu(T)-7 b(able)20 b(2:)25
b(PGDL)c(P)o(arametrized)d(Arithmetic)i(Modules)p 0 1135
2050 4 v 0 1152 V 50 1221 a(P)o(arametrized)e(Arithmetic)i(Module)98
b(arithmetic)p 0 1255 V 50 1324 a(\003oating)19 b(point)h(format)50
1424 y Fn(pg)p 155 1424 25 4 v 29 w(float)p 434 1424
V 29 w(add)638 b Fm(+)50 1524 y Fn(pg)p 155 1524 V 29
w(float)p 434 1524 V 29 w(unsigned)p 863 1524 V 29 w(add)209
b Fm(+)20 b Fu(\(unsigned\))50 1623 y Fn(pg)p 155 1623
V 29 w(float)p 434 1623 V 29 w(sub)638 b Fr(\000)50 1723
y Fn(pg)p 155 1723 V 29 w(float)p 434 1723 V 29 w(unsigned)p
863 1723 V 29 w(sub)209 b Fr(\000)20 b Fu(\(unsigned\))50
1822 y Fn(pg)p 155 1822 V 29 w(float)p 434 1822 V 29
w(mult)588 b Fr(\002)50 1922 y Fn(pg)p 155 1922 V 29
w(float)p 434 1922 V 29 w(div)638 b Ft(=)50 2022 y Fn(pg)p
155 2022 V 29 w(float)p 434 2022 V 29 w(sqrt)1246 1962
y Fr(p)p 1315 1962 48 4 v 60 x Ft(x)50 2121 y Fn(pg)p
155 2121 25 4 v 29 w(float)p 434 2121 V 29 w(square)488
b Ft(x)1293 2091 y Fs(2)50 2221 y Fn(pg)p 155 2221 V
29 w(float)p 434 2221 V 29 w(recipro)438 b Ft(x)1293
2191 y Fq(\000)p Fs(1)50 2321 y Fn(pg)p 155 2321 V 29
w(float)p 434 2321 V 29 w(negate)488 b Fr(\002)18 b(\000)g
Fm(1)p Ft(:)p Fm(0)50 2420 y Fn(pg)p 155 2420 V 29 w(float)p
434 2420 V 29 w(compare)438 b Fu(compare)50 2520 y Fn(pg)p
155 2520 V 29 w(float)p 434 2520 V 29 w(compare)p 813
2520 V 29 w(abs)259 b Fu(compare)50 2619 y Fn(pg)p 155
2619 V 29 w(float)p 434 2619 V 29 w(compz)538 b Fu(compare)18
b(to)j(0)50 2719 y Fn(pg)p 155 2719 V 29 w(float)p 434
2719 V 29 w(compz)p 713 2719 V 29 w(abs)359 b Fu(compare)18
b(to)j(0)50 2819 y Fn(pg)p 155 2819 V 29 w(float)p 434
2819 V 29 w(accum)538 b Fu(accumulate)50 2918 y Fn(pg)p
155 2918 V 29 w(float)p 434 2918 V 29 w(unsigned)p 863
2918 V 29 w(accum)109 b Fu(accumulate)19 b(\(unsigned\))50
3018 y Fn(pg)p 155 3018 V 29 w(float)p 434 3018 V 29
w(fixaccum)388 b Fu(accumulate)50 3118 y(\002x)o(ed)19
b(point)h(format)50 3217 y Fn(pg)p 155 3217 V 29 w(fix)p
334 3217 V 30 w(addsub)587 b Fm(+)p Fu(,)20 b Fr(\000)50
3317 y Fn(pg)p 155 3317 V 29 w(fix)p 334 3317 V 30 w(mult)687
b Fr(\002)50 3416 y Fn(pg)p 155 3416 V 29 w(fix)p 334
3416 V 30 w(unsigned)p 764 3416 V 28 w(mult)259 b Fr(\002)20
b Fu(\(unsigned\))50 3516 y Fn(pg)p 155 3516 V 29 w(fix)p
334 3516 V 30 w(accum)637 b Fu(accumulate)50 3616 y(logarithmic)18
b(format)50 3715 y Fn(pg)p 155 3715 V 29 w(log)p 334
3715 V 30 w(add)737 b Fm(+)50 3815 y Fn(pg)p 155 3815
V 29 w(log)p 334 3815 V 30 w(unsigned)p 764 3815 V 28
w(add)309 b Fm(+)20 b Fu(\(unsigned\))50 3915 y Fn(pg)p
155 3915 V 29 w(log)p 334 3915 V 30 w(muldiv)587 b Fr(\002)p
Fu(,)20 b Ft(=)50 4014 y Fn(pg)p 155 4014 V 29 w(log)p
334 4014 V 30 w(shift)1246 3954 y Fr(p)p 1315 3954 48
4 v 60 x Ft(x)p Fu(,)h Ft(x)1451 3984 y Fs(2)50 4114
y Fu(format)e(con)m(v)o(ersion)50 4213 y Fn(pg)p 155
4213 25 4 v 29 w(conv)p 384 4213 V 29 w(fixtofloat)338
b Fu(\002x)20 b Fr(\))h Fu(\003oat)50 4313 y Fn(pg)p
155 4313 V 29 w(conv)p 384 4313 V 29 w(floattofix)338
b Fu(\003oat)20 b Fr(\))h Fu(\002x)50 4413 y Fn(pg)p
155 4413 V 29 w(conv)p 384 4413 V 29 w(ftol)638 b Fu(\002x)20
b Fr(\))h Fu(log)50 4512 y Fn(pg)p 155 4512 V 29 w(conv)p
384 4512 V 29 w(ltof)638 b Fu(log)20 b Fr(\))g Fu(\002x)p
0 4546 2050 4 v 0 4562 V 1996 1509 a
 currentpoint currentpoint translate 0.51305 0.51305 scale neg exch
neg exch translate
 1996 1509 a 1996
1509 a
 gsave currentpoint currentpoint translate +0 neg rotate neg exch neg
exch translate
 1996 1509 a @beginspecial 88 @llx 464 @lly 530
@urx 714 @ury 4420 @rwi @setspecial
%%BeginDocument: ./mat/pgr_icl.eps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 88 464 530 714
%%Title: pgr_icl
%%CreationDate: Sat Dec 11 23:18:34 2004
%%Creator: Tgif-4.1.40 by William Chia-Wei Cheng (william@cs.UCLA.edu)
%%ProducedBy: (unknown)
%%Pages: 1
%%DocumentFonts: (atend)
%%EndComments
%%BeginProlog

/tgifdict 86 dict def
tgifdict begin

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/TGAT % tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/TGPF % tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      tgiforigctm setmatrix
      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/TGMAX
 { exch dup 3 1 roll exch dup 3 1 roll gt { pop } { exch pop } ifelse
 } def
/TGMIN
 { exch dup 3 1 roll exch dup 3 1 roll lt { pop } { exch pop } ifelse
 } def
/TGSW { stringwidth pop } def

/bd { bind def } bind def

/GS { gsave } bd
/GR { grestore } bd
/NP { newpath } bd
/CP { closepath } bd
/CHP { charpath } bd
/CT { curveto } bd
/L { lineto } bd
/RL { rlineto } bd
/M { moveto } bd
/RM { rmoveto } bd
/S { stroke } bd
/F { fill } bd
/TR { translate } bd
/RO { rotate } bd
/SC { scale } bd
/MU { mul } bd
/DI { div } bd
/DU { dup } bd
/NE { neg } bd
/AD { add } bd
/SU { sub } bd
/PO { pop } bd
/EX { exch } bd
/CO { concat } bd
/CL { clip } bd
/EC { eoclip } bd
/EF { eofill } bd
/IM { image } bd
/IMM { imagemask } bd
/ARY { array } bd
/SG { setgray } bd
/RG { setrgbcolor } bd
/SD { setdash } bd
/W { setlinewidth } bd
/SM { setmiterlimit } bd
/SLC { setlinecap } bd
/SLJ { setlinejoin } bd
/SH { show } bd
/FF { findfont } bd
/MS { makefont setfont } bd
/AR { arcto 4 {pop} repeat } bd
/CURP { currentpoint } bd
/FLAT { flattenpath strokepath clip newpath } bd
/TGSM { tgiforigctm setmatrix } def
/TGRM { savematrix setmatrix } def

end

%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1

%%PageBoundingBox: 88 464 530 714
tgifdict begin
/tgifsavedpage save def

1 SM
1 W

0 SG

72 0 MU 72 11 MU TR
72 128 DI 100.000 MU 100 DI DU NE SC

GS

/tgiforigctm matrix currentmatrix def

% BOX
0.373 0.620 0.627 RG
GS
   NP 160 140 M 316 140 L 316 560 L 160 560 L CP 1 SG F
   0.373 0.620 0.627 RG
   NP 160 140 M 316 140 L 316 560 L 160 560 L CP EC NP
   pat5 8 152 136 168 432 TGPF
GR

% BOX
0.373 0.620 0.627 RG
GS
   NP 796 140 M 940 140 L 940 560 L 796 560 L CP 1 SG F
   0.373 0.620 0.627 RG
   NP 796 140 M 940 140 L 940 560 L 796 560 L CP EC NP
   pat5 8 792 136 152 432 TGPF
GR

% BOX
0.373 0.620 0.627 RG
GS
   NP 296 140 M 796 140 L 796 560 L 296 560 L CP 1 SG F
   0.373 0.620 0.627 RG
   NP 296 140 M 796 140 L 796 560 L 296 560 L CP EC NP
   pat7 8 288 136 512 432 TGPF
GR

% BOX
GS
   22 338 TR
   [0.000 -1.000 0.968 0.000 291 226] CO
   22 NE 338 NE TR
1 SG
GS
   10 SM
   GS
      NP 22 338 M 358 338 L 358 710 L 22 710 L CP
      TGSM
      2 W
      S
   GR
GR
GR

% BOX
GS
   1 564 TR
   [-0.000 1.022 -1.043 -0.000 912 -360] CO
   1 NE 564 NE TR
0 SG
GS
   10 SM
   GS
      NP 1 564 M 341 564 L 341 732 L 1 732 L CP
      TGSM
      2 W
      S
   GR
GR
GR

% BOX
GS
   1 564 TR
   [-0.000 1.022 -1.043 -0.000 912 -360] CO
   1 NE 564 NE TR
1 SG
NP 1 564 M 341 564 L 341 732 L 1 732 L CP F
GR

% BOX
GS
   1 564 TR
   [-0.000 1.022 -1.043 -0.000 912 -360] CO
   1 NE 564 NE TR
0 SG
GS
   10 SM
   GS
      NP 1 564 M 341 564 L 341 732 L 1 732 L CP
      TGSM
      2 W
      S
   GR
GR
GR

% BOX
GS
   8 564 TR
   [-0.000 1.022 -1.043 -0.000 896 -351] CO
   8 NE 564 NE TR
0 SG
GS
   10 SM
   GS
      NP 8 564 M 348 564 L 348 732 L 8 732 L CP
      TGSM
      2 W
      S
   GR
GR
GR

% BOX
GS
   8 564 TR
   [-0.000 1.022 -1.043 -0.000 896 -351] CO
   8 NE 564 NE TR
1 SG
NP 8 564 M 348 564 L 348 732 L 8 732 L CP F
GR

% BOX
GS
   8 564 TR
   [-0.000 1.022 -1.043 -0.000 896 -351] CO
   8 NE 564 NE TR
0 SG
GS
   10 SM
   GS
      NP 8 564 M 348 564 L 348 732 L 8 732 L CP
      TGSM
      2 W
      S
   GR
GR
GR

% BOX
GS
   17 564 TR
   [-0.000 1.022 -1.043 -0.000 879 -344] CO
   17 NE 564 NE TR
0 SG
GS
   10 SM
   GS
      NP 17 564 M 357 564 L 357 732 L 17 732 L CP
      TGSM
      2 W
      S
   GR
GR
GR

% BOX
GS
   17 564 TR
   [-0.000 1.022 -1.043 -0.000 879 -344] CO
   17 NE 564 NE TR
1 SG
NP 17 564 M 357 564 L 357 732 L 17 732 L CP F
GR

% BOX
GS
   17 564 TR
   [-0.000 1.022 -1.043 -0.000 879 -344] CO
   17 NE 564 NE TR
0 SG
GS
   10 SM
   GS
      NP 17 564 M 357 564 L 357 732 L 17 732 L CP
      TGSM
      2 W
      S
   GR
GR
GR

% BOX
GS
   448 391 TR
   [0.000 -1.024 1.071 0.000 260 184] CO
   448 NE 391 NE TR
1 SG
NP 448 391 M 788 391 L 788 559 L 448 559 L CP F
GS
   10 SM
   GS
      NP 448 391 M 788 391 L 788 559 L 448 559 L CP
      TGSM
      2 W
      S
   GR
GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      717 569 M
      GS
            0 SG
            /Courier-Bold FF [17 0 0 -17 0 0] MS
            (PE FPGA chips\(x4\)) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   773 392 TR
   [0.000 -1.000 1.000 0.000 3 8] CO
   773 NE 392 NE TR
GS
   NP
      773 392 M
      773 400 M
      773 416 L
   TGSM
   2 W
   S
   1 W
GR
GS
   TGSM
   NP
      776 400 10.000 4.000 -32 0 TGAT
   1 SG CP F
   0 SG
   NP
      776 400 10.000 4.000 -32 0 TGAT
   CP F
GR
GS
   TGSM
   NP
      808 400 10.000 4.000 32 0 TGAT
   1 SG CP F
   0 SG
   NP
      808 400 10.000 4.000 32 0 TGAT
   CP F
GR
GR

% BOX
GS
   582 410 TR
   [0.000 -1.000 1.000 0.000 226 133] CO
   582 NE 410 NE TR
0 SG
GS
   10 SM
   GS
      NP 582 410 M 874 410 L 874 482 L 582 482 L CP
      TGSM
      2 W
      S
   GR
GR
GR

% BOX
GS
   514 419 TR
   [0.000 -1.000 1.000 0.000 223 125] CO
   514 NE 419 NE TR
0 SG
GS
   10 SM
   GS
      NP 514 419 M 806 419 L 806 455 L 514 455 L CP
      TGSM
      2 W
      S
   GR
GR
GR

% TEXT
NP
0 SG
GS
   677 411 TR
   [0.000 -1.000 1.000 0.000 69 40] CO
   677 NE 411 NE TR
GR
   GS
      1 W
      677 411 TR
      [0.000 -1.000 1.000 0.000 69 40] CO
      0 14 M
      GS
            0 SG
            /Courier-Bold FF [17 0 0 -17 0 0] MS
            (local I/O) SH
      GR
   GR

% TEXT
NP
0 SG
GS
   760 418 TR
   [0.000 -1.000 1.000 0.000 71 -19] CO
   760 NE 418 NE TR
GR
   GS
      1 W
      760 418 TR
      [0.000 -1.000 1.000 0.000 71 -19] CO
      0 14 M
      GS
        GS
        0
            /Courier-Bold FF [17 0 0 -17 0 0] MS
            (Arithmetic Logic Layer Core) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Courier-Bold FF [17 0 0 -17 0 0] MS
            (Arithmetic Logic Layer Core) SH
      GR
      0 17 RM
      GS
        GS
        0
            /Courier-Bold FF [17 0 0 -17 0 0] MS
            (\(ALL Core\)) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Courier-Bold FF [17 0 0 -17 0 0] MS
            (\(ALL Core\)) SH
      GR
   GR

% BOX
GS
   448 391 TR
   [0.000 -1.035 1.071 0.000 260 188] CO
   448 NE 391 NE TR
0 SG
GS
   10 SM
   GS
      NP 448 391 M 788 391 L 788 559 L 448 559 L CP
      TGSM
      2 W
      S
   GR
GR
GR

% TEXT
NP
0 SG
NP 415 154 M 646 154 L 646 189 L 415 189 L CP 1 SG F
0 SG
   GS
      1 W
      531 169 M
      GS
        GS
        0
            /Courier-Bold FF [17 0 0 -17 0 0] MS
            ( I/O and Control Logic ) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Courier-Bold FF [17 0 0 -17 0 0] MS
            ( I/O and Control Logic ) SH
      GR
      0 17 RM
      GS
        GS
        0
            /Courier-Bold FF [17 0 0 -17 0 0] MS
            (Layer) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Courier-Bold FF [17 0 0 -17 0 0] MS
            (Layer) SH
      GR
   GR

% BOX
GS
   22 338 TR
   [0.000 -1.048 0.968 0.000 291 242] CO
   22 NE 338 NE TR
0 SG
NP 22 338 M 358 338 L 358 710 L 22 710 L CP 1 SG F
   0 SG
GS
   10 SM
   GS
      NP 22 338 M 358 338 L 358 710 L 22 710 L CP
      TGSM
      2 W
      S
   GR
GR
GR

% BOX
GS
   109 418 TR
   [0.000 -1.027 1.000 0.000 223 129] CO
   109 NE 418 NE TR
0 SG
GS
   10 SM
   GS
      NP 109 418 M 401 418 L 401 458 L 109 458 L CP
      TGSM
      2 W
      S
   GR
GR
GR

% TEXT
NP
0 SG
GS
   235 342 TR
   [0.000 -1.000 1.000 0.000 99 56] CO
   235 NE 342 NE TR
GR
   GS
      1 W
      235 342 TR
      [0.000 -1.000 1.000 0.000 99 56] CO
      0 14 M
      GS
        GS
        0
            /Courier-Bold FF [17 0 0 -17 0 0] MS
            (PCI64bit/66MHz Interface Core) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Courier-Bold FF [17 0 0 -17 0 0] MS
            (PCI64bit/66MHz Interface Core) SH
      GR
      0 17 RM
      GS
        GS
        0
            /Courier-Bold FF [17 0 0 -17 0 0] MS
            (\(supplied by Xilinx\)) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Courier-Bold FF [17 0 0 -17 0 0] MS
            (\(supplied by Xilinx\)) SH
      GR
   GR

% TEXT
NP
0 SG
GS
   315 315 TR
   [0.000 -1.000 1.000 0.000 79 47] CO
   315 NE 315 NE TR
GR
   GS
      1 W
      315 315 TR
      [0.000 -1.000 1.000 0.000 79 47] CO
      0 14 M
      GS
            0 SG
            /Courier-Bold FF [17 0 0 -17 0 0] MS
            (PCI DMA) SH
      GR
      0 17 RM
      GS
            0 SG
            /Courier-Bold FF [17 0 0 -17 0 0] MS
            (controller) SH
      GR
   GR

% TEXT
NP
0 SG
GS
   414 319 TR
   [0.000 -1.000 1.000 0.000 32 20] CO
   414 NE 319 NE TR
GR
   GS
      1 W
      414 319 TR
      [0.000 -1.000 1.000 0.000 32 20] CO
      0 14 M
      GS
            0 SG
            /Courier-Bold FF [17 0 0 -17 0 0] MS
            (FIFO) SH
      GR
   GR

% TEXT
NP
0 SG
GS
   320 483 TR
   [0.000 -1.000 1.000 0.000 79 47] CO
   320 NE 483 NE TR
GR
   GS
      1 W
      320 483 TR
      [0.000 -1.000 1.000 0.000 79 47] CO
      0 14 M
      GS
            0 SG
            /Courier-Bold FF [17 0 0 -17 0 0] MS
            (PCI Target) SH
      GR
      0 17 RM
      GS
            0 SG
            /Courier-Bold FF [17 0 0 -17 0 0] MS
            (controller) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   357 399 TR
   [0.000 -1.000 1.000 0.000 16 18] CO
   357 NE 399 NE TR
GS
   NP
      373 399 M
      373 407 M
      373 443 L
      365 443 L
   TGSM
   2 W
   S
   1 W
GR
GS
   TGSM
   NP
      373 401 10.000 4.000 -44 0 TGAT
   1 SG CP F
   0 SG
   NP
      373 401 10.000 4.000 -44 0 TGAT
   CP F
GR
GS
   TGSM
   NP
      417 417 10.000 4.000 0 16 TGAT
   1 SG CP F
   0 SG
   NP
      417 417 10.000 4.000 0 16 TGAT
   CP F
GR
GR

% POLY/OPEN-SPLINE
0 SG
GS
   405 393 TR
   [0.000 -1.000 1.000 0.000 11 6] CO
   405 NE 393 NE TR
GS
   NP
      405 393 M
      413 393 L
   TGSM
   2 W
   S
   1 W
GR
GS
   TGSM
   NP
      416 383 10.000 4.000 0 -16 TGAT
   1 SG CP F
   0 SG
   NP
      416 383 10.000 4.000 0 -16 TGAT
   CP F
GR
GR

% POLY/OPEN-SPLINE
0 SG
GS
   469 472 TR
   [0.000 -1.000 1.000 0.000 3 8] CO
   469 NE 472 NE TR
GS
   NP
      469 472 M
      469 480 M
      469 496 L
   TGSM
   2 W
   S
   1 W
GR
GS
   TGSM
   NP
      472 480 10.000 4.000 -32 0 TGAT
   1 SG CP F
   0 SG
   NP
      472 480 10.000 4.000 -32 0 TGAT
   CP F
GR
GS
   TGSM
   NP
      504 480 10.000 4.000 32 0 TGAT
   1 SG CP F
   0 SG
   NP
      504 480 10.000 4.000 32 0 TGAT
   CP F
GR
GR

% BOX
GS
   165 409 TR
   [0.000 -1.000 1.000 0.000 227 135] CO
   165 NE 409 NE TR
0 SG
GS
   10 SM
   GS
      NP 165 409 M 457 409 L 457 489 L 165 489 L CP
      TGSM
      2 W
      S
   GR
GR
GR

% BOX
GS
   406 315 TR
   [0.000 -1.000 1.000 0.000 103 65] CO
   406 NE 315 NE TR
0 SG
GS
   10 SM
   GS
      NP 406 315 M 534 315 L 534 375 L 406 375 L CP
      TGSM
      2 W
      S
   GR
GR
GR

% TEXT
NP
0 SG
GS
   440 315 TR
   [0.000 -1.000 1.000 0.000 79 47] CO
   440 NE 315 NE TR
GR
   GS
      1 W
      440 315 TR
      [0.000 -1.000 1.000 0.000 79 47] CO
      0 14 M
      GS
            0 SG
            /Courier-Bold FF [17 0 0 -17 0 0] MS
            (dual port) SH
      GR
      0 17 RM
      GS
            0 SG
            /Courier-Bold FF [17 0 0 -17 0 0] MS
            (RAM \(64KB\)) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   469 308 TR
   [0.000 -1.000 1.000 0.000 3 8] CO
   469 NE 308 NE TR
GS
   NP
      469 308 M
      469 316 M
      469 332 L
   TGSM
   2 W
   S
   1 W
GR
GS
   TGSM
   NP
      472 316 10.000 4.000 -32 0 TGAT
   1 SG CP F
   0 SG
   NP
      472 316 10.000 4.000 -32 0 TGAT
   CP F
GR
GS
   TGSM
   NP
      504 316 10.000 4.000 32 0 TGAT
   1 SG CP F
   0 SG
   NP
      504 316 10.000 4.000 32 0 TGAT
   CP F
GR
GR

% BOX
GS
   406 479 TR
   [0.000 -1.000 1.000 0.000 103 65] CO
   406 NE 479 NE TR
0 SG
GS
   10 SM
   GS
      NP 406 479 M 534 479 L 534 539 L 406 539 L CP
      TGSM
      2 W
      S
   GR
GR
GR

% TEXT
NP
0 SG
GS
   457 487 TR
   [0.000 -1.000 1.000 0.000 69 40] CO
   457 NE 487 NE TR
GR
   GS
      1 W
      457 487 TR
      [0.000 -1.000 1.000 0.000 69 40] CO
      0 14 M
      GS
            0 SG
            /Courier-Bold FF [17 0 0 -17 0 0] MS
            (registers) SH
      GR
   GR

% BOX
GS
   377 416 TR
   [0.000 -1.000 0.917 0.000 224 128] CO
   377 NE 416 NE TR
0 SG
GS
   10 SM
   GS
      NP 377 416 M 669 416 L 669 464 L 377 464 L CP
      TGSM
      2 W
      S
   GR
GR
GR

% TEXT
NP
0 SG
GS
   545 410 TR
   [0.000 -1.000 1.000 0.000 69 40] CO
   545 NE 410 NE TR
GR
   GS
      1 W
      545 410 TR
      [0.000 -1.000 1.000 0.000 69 40] CO
      0 14 M
      GS
            0 SG
            /Courier-Bold FF [17 0 0 -17 0 0] MS
            (local I/O) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   565 472 TR
   [0.000 -1.000 1.000 0.000 3 8] CO
   565 NE 472 NE TR
GS
   NP
      565 472 M
      565 480 M
      565 496 L
   TGSM
   2 W
   S
   1 W
GR
GS
   TGSM
   NP
      568 480 10.000 4.000 -32 0 TGAT
   1 SG CP F
   0 SG
   NP
      568 480 10.000 4.000 -32 0 TGAT
   CP F
GR
GS
   TGSM
   NP
      600 480 10.000 4.000 32 0 TGAT
   1 SG CP F
   0 SG
   NP
      600 480 10.000 4.000 32 0 TGAT
   CP F
GR
GR

% POLY/OPEN-SPLINE
0 SG
GS
   565 308 TR
   [0.000 -1.000 1.000 0.000 3 8] CO
   565 NE 308 NE TR
GS
   NP
      565 308 M
      565 316 M
      565 332 L
   TGSM
   2 W
   S
   1 W
GR
GS
   TGSM
   NP
      568 316 10.000 4.000 -32 0 TGAT
   1 SG CP F
   0 SG
   NP
      568 316 10.000 4.000 -32 0 TGAT
   CP F
GR
GS
   TGSM
   NP
      600 316 10.000 4.000 32 0 TGAT
   1 SG CP F
   0 SG
   NP
      600 316 10.000 4.000 32 0 TGAT
   CP F
GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      405 571 M
      GS
            0 SG
            /Courier-Bold FF [17 0 0 -17 0 0] MS
            (Interface FPGA chip) SH
      GR
   GR

% TEXT
NP
0 SG
NP 815 154 M 926 154 L 926 189 L 815 189 L CP 1 SG F
0 SG
   GS
      1 W
      871 169 M
      GS
        GS
        0
            /Courier-Bold FF [17 0 0 -17 0 0] MS
            (Aritymetic) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Courier-Bold FF [17 0 0 -17 0 0] MS
            (Aritymetic) SH
      GR
      0 17 RM
      GS
        GS
        0
            /Courier-Bold FF [17 0 0 -17 0 0] MS
            (Logic Layer) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Courier-Bold FF [17 0 0 -17 0 0] MS
            (Logic Layer) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   231 377 TR
   [0.000 -1.000 1.000 0.000 9 22] CO
   231 NE 377 NE TR
GS
   NP
      231 381 M
      231 389 M
      231 457 L
   TGSM
   2 W
   S
   1 W
GR
GS
   TGSM
   NP
      244 399 10.000 4.000 -84 0 TGAT
   1 SG CP F
   0 SG
   NP
      244 399 10.000 4.000 -84 0 TGAT
   CP F
GR
GS
   TGSM
   NP
      328 399 10.000 4.000 84 0 TGAT
   1 SG CP F
   0 SG
   NP
      328 399 10.000 4.000 84 0 TGAT
   CP F
GR
GR

% TEXT
NP
0 SG
GS
   131 430 TR
   [0.000 -1.000 1.000 0.000 69 -24] CO
   131 NE 430 NE TR
NP 35 429 M 226 429 L 226 464 L 35 464 L CP 1 SG F
0 SG
GR
   GS
      1 W
      131 430 TR
      [0.000 -1.000 1.000 0.000 69 -24] CO
      0 14 M
      GS
        GS
        0
            /Courier-Bold FF [17 0 0 -17 0 0] MS
            (Host computer) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Courier-Bold FF [17 0 0 -17 0 0] MS
            (Host computer) SH
      GR
      0 17 RM
      GS
        GS
        0
            /Courier-Bold FF [17 0 0 -17 0 0] MS
            (PCI64-bit/66MHz bus) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Courier-Bold FF [17 0 0 -17 0 0] MS
            (PCI64-bit/66MHz bus) SH
      GR
   GR

% TEXT
NP
0 SG
NP 161 154 M 292 154 L 292 189 L 161 189 L CP 1 SG F
0 SG
   GS
      1 W
      227 169 M
      GS
        GS
        0
            /Courier-Bold FF [17 0 0 -17 0 0] MS
            (Device Driver) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Courier-Bold FF [17 0 0 -17 0 0] MS
            (Device Driver) SH
      GR
      0 17 RM
      GS
        GS
        0
            /Courier-Bold FF [17 0 0 -17 0 0] MS
            (Layer) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Courier-Bold FF [17 0 0 -17 0 0] MS
            (Layer) SH
      GR
   GR

% BOX
GS
   165 409 TR
   [0.000 -0.411 0.600 0.000 227 135] CO
   165 NE 409 NE TR
0 SG
GS
   10 SM
   GS
      NP 165 409 M 457 409 L 457 489 L 165 489 L CP
      TGSM
      2 W
      S
   GR
GR
GR

% POLY/OPEN-SPLINE
0 SG
GS
   404 351 TR
   [-1.000 0.000 0.000 1.000 67 24] CO
   404 NE 351 NE TR
GS
   NP
      420 351 M
      420 359 M
      420 395 L
      412 395 L
   TGSM
   2 W
   S
   1 W
GR
GS
   TGSM
   NP
      455 375 10.000 4.000 0 -44 TGAT
   1 SG CP F
   0 SG
   NP
      455 375 10.000 4.000 0 -44 TGAT
   CP F
GR
GS
   TGSM
   NP
      471 419 10.000 4.000 16 0 TGAT
   1 SG CP F
   0 SG
   NP
      471 419 10.000 4.000 16 0 TGAT
   CP F
GR
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      454 418 M
      454 462 L
      0 -16 atan DU cos 10.000 MU 438 exch SU
      exch sin 10.000 MU 462 exch SU L
   TGSM
   2 W
   S
   1 W
GR
GS
   TGSM
   NP
      438 462 10.000 4.000 -16 0 TGAT
   1 SG CP F
   0 SG
   NP
      438 462 10.000 4.000 -16 0 TGAT
   CP F
GR

% POLY/OPEN-SPLINE
0 SG
GS
   639 377 TR
   [0.000 -1.000 1.000 0.000 9 22] CO
   639 NE 377 NE TR
GS
   NP
      639 377 M
      639 385 M
      639 457 L
   TGSM
   2 W
   S
   1 W
GR
GS
   TGSM
   NP
      648 399 10.000 4.000 -88 0 TGAT
   1 SG CP F
   0 SG
   NP
      648 399 10.000 4.000 -88 0 TGAT
   CP F
GR
GS
   TGSM
   NP
      736 399 10.000 4.000 88 0 TGAT
   1 SG CP F
   0 SG
   NP
      736 399 10.000 4.000 88 0 TGAT
   CP F
GR
GR

% BOX
GS
   165 409 TR
   [0.000 -0.425 1.000 0.000 227 -33] CO
   165 NE 409 NE TR
0 SG
GS
   10 SM
   GS
      NP 165 409 M 457 409 L 457 489 L 165 489 L CP
      TGSM
      2 W
      S
   GR
GR
GR

% BOX
GS
   165 409 TR
   [0.000 -0.425 0.450 0.000 271 -33] CO
   165 NE 409 NE TR
0 SG
GS
   10 SM
   GS
      NP 165 409 M 457 409 L 457 489 L 165 489 L CP
      TGSM
      2 W
      S
   GR
GR
GR

GR
tgifsavedpage restore
end
showpage

%%Trailer
%MatchingCreationDate: Sat Dec 11 23:18:34 2004
%%DocumentFonts: Courier-Bold
%%EOF

%%EndDocument
 @endspecial 5680 1509 a
 currentpoint grestore moveto
 5680 1509 a 1996 1509 a
 currentpoint currentpoint translate 1 0.51305 div 1 0.51305 div scale
neg exch neg exch translate
 1996
1509 a 2311 1692 a Fu(Figure)g(6:)25 b(real)20 b(implementation)e(of)i
(ICL.)2255 2135 y(T)-7 b(able)20 b(3:)25 b(Multiplier\(\003oating)18
b(point)h(format\))p 1988 2329 1917 4 v 1988 2346 V 2038
2416 a(length)98 b(length\(mantissa\))f(stages)199 b(MHz)99
b(slices)p 1988 2449 V 2100 2518 a(18)417 b(9)436 b(2)180
b(290.192)198 b(31)3079 2618 y(0)180 b(133.387)198 b(15)p
1988 2651 V 2100 2721 a(26)397 b(17)414 b(4)180 b(224.266)198
b(56)3079 2821 y(2)180 b(151.953)198 b(41)3079 2920 y(0)221
b(80.762)199 b(23)p 1988 2954 V 2100 3023 a(33)397 b(24)414
b(3)180 b(136.986)198 b(93)3079 3123 y(0)221 b(68.847)199
b(56)p 1988 3156 V 1988 3173 V 1988 3608 a(paper)24 b([3)o(].)38
b(Module)24 b Fn(pg)p 2743 3608 25 4 v 29 w(log)p 2922
3608 V 30 w(shift)g Fu(is)h(a)g(logarithmic)e(for)n(-)1988
3708 y(mat)e(shifter)-5 b(.)25 b(Shift)20 b(operations)e(in)j(the)f
(logarithmic)e(format)h(e)o(x-)1988 3807 y(press)i(square)e(\(left)h
(shift\))g(and)g(squared)f(root)g(\(right)h(shift\).)2071
3958 y(Modules)89 b(with)h Fn(pg)p 2795 3958 V 30 w(conv)f
Fu(are)h(con)m(v)o(erters)d(from)1988 4058 y(a)92 b(particular)e
(format)g(into)h(another)f(format,)107 b(e.g.,)1988 4158
y Fn(pg)p 2093 4158 V 30 w(conv)p 2323 4158 V 29 w(floattofix)92
b Fu(con)m(v)o(erts)h(a)h(\003oating-point)1988 4257
y(number)19 b(into)h(a)g(corresponding)d(\002x)o(ed)j(point)f(number)-5
b(.)2071 4408 y(In)34 b(tables)g(3,)j(4,)g(5,)g(6,)g(7,)f(and)e(8,)j
(we)d(illustrate)g(resource)1988 4508 y(consumption)g(and)i(clock)g
(frequenc)o(y)e(of)i(se)n(v)o(eral)g(important)1988 4608
y(parametrized)15 b(arithmetic)h(modules.)23 b(Despite)17
b(we)h(ha)n(v)o(e)e(imple-)1988 4707 y(mented)27 b(all)g(of)g(the)h
(parametrized)d(arithmetic)h(modules)g(from)1988 4807
y(full)i(scratch)f(by)f(ourself,)i(the)g(obtained)e(performance)e
(results)1988 4907 y(for)32 b(each)f(module)f(are)i(almost)g(same)g(as)
h(other)e(good)f(imple-)1988 5006 y(mentations)20 b(such)f(as)i
(Manheim')-5 b(s)20 b(\([6)o(]\).)p eop end
%%Page: 8 8
TeXDict begin 8 7 bop 331 589 a Fu(T)-7 b(able)20 b(4:)25
b(Adder\(\003oating)18 b(point)h(format\))p 0 783 1917
4 v 0 800 V 50 869 a(length)98 b(length\(mantissa\))f(stages)199
b(MHz)99 b(slices)p 0 903 V 112 972 a(18)417 b(9)436
b(5)180 b(223.314)156 b(155)1091 1072 y(2)180 b(139.880)156
b(123)1091 1172 y(0)221 b(68.919)157 b(116)p 0 1205 V
112 1274 a(26)396 b(17)415 b(6)180 b(186.185)156 b(299)1091
1374 y(3)180 b(134.608)156 b(248)1091 1474 y(0)221 b(49.603)157
b(243)p 0 1507 V 112 1577 a(33)396 b(24)415 b(5)180 b(192.715)156
b(627)1091 1676 y(2)180 b(128.634)156 b(570)1091 1776
y(0)221 b(50.113)157 b(524)p 0 1809 V 0 1826 V 232 2133
a(T)-7 b(able)20 b(5:)25 b(Square)20 b(root)f(\(\003oating)g(point)h
(format\))p 0 2327 V 0 2344 V 50 2414 a(length)98 b(length\(mantissa\))
f(stages)199 b(MHz)99 b(slices)p 0 2447 V 112 2516 a(18)417
b(9)436 b(4)180 b(215.517)197 b(86)1091 2616 y(2)180
b(157.754)197 b(71)1091 2716 y(0)221 b(79.971)198 b(51)p
0 2749 V 112 2819 a(26)396 b(17)415 b(4)180 b(188.964)156
b(140)1091 2918 y(2)180 b(127.959)156 b(116)1091 3018
y(0)221 b(56.500)198 b(84)p 0 3051 V 112 3121 a(33)396
b(24)415 b(5)180 b(141.243)156 b(425)1091 3221 y(3)180
b(104.998)156 b(392)1091 3320 y(1)221 b(70.210)157 b(374)p
0 3353 V 0 3370 V 244 3677 a(T)-7 b(able)21 b(6:)k(Reciprocal)19
b(\(\003oating)g(point)h(format\))p 0 3871 V 0 3888 V
50 3958 a(length)98 b(length\(mantissa\))f(stages)199
b(MHz)99 b(slices)p 0 3991 V 112 4061 a(19)396 b(10)415
b(4)180 b(240.558)197 b(71)1091 4160 y(2)180 b(172.801)197
b(54)1091 4260 y(0)180 b(102.020)197 b(43)p 0 4293 V
112 4363 a(26)396 b(17)415 b(4)180 b(206.526)156 b(112)1091
4463 y(1)180 b(111.769)197 b(83)1091 4562 y(0)221 b(59.485)198
b(75)p 0 4595 V 112 4665 a(33)396 b(24)415 b(4)180 b(140.371)156
b(221)1091 4765 y(3)180 b(104.998)156 b(223)1091 4864
y(1)221 b(73.828)157 b(159)p 0 4898 V 0 4914 V 2340 1121
a(T)-7 b(able)20 b(7:)26 b(Adder)19 b(\(logarithmic)f(format\))p
1988 1315 V 1988 1331 V 2038 1401 a(length)98 b(length\(mantissa\))f
(stages)199 b(MHz)99 b(slices)p 1988 1434 V 2100 1504
a(14)417 b(6)436 b(4)180 b(201.077)198 b(94)3079 1604
y(2)180 b(151.207)198 b(73)3079 1703 y(0)221 b(64.545)199
b(57)p 1988 1737 V 2100 1806 a(17)417 b(9)436 b(5)180
b(195.369)156 b(116)3079 1906 y(2)180 b(138.042)198 b(92)3079
2006 y(0)221 b(58.828)199 b(86)p 1988 2039 V 2100 2108
a(20)397 b(12)414 b(6)180 b(218.293)156 b(191)3079 2208
y(2)180 b(135.125)156 b(123)3079 2308 y(0)221 b(53.562)157
b(115)p 1988 2341 V 1988 2358 V 2240 3728 a(T)-7 b(able)21
b(8:)k(Accumulator)18 b(\(\002x)o(ed)h(point)h(format\))p
2309 3841 1264 4 v 2309 3858 V 2359 3927 a(length)98
b(stages)199 b(MHz)99 b(slices)p 2309 3961 V 2422 4030
a(57)241 b(4)180 b(141.083)156 b(161)2747 4130 y(1)180
b(118.088)156 b(120)p 2309 4163 V 2422 4233 a(64)241
b(4)180 b(138.850)156 b(180)2747 4333 y(1)180 b(113.869)156
b(113)p 2309 4366 V 2309 4382 V eop end
%%Page: 9 9
TeXDict begin 9 8 bop 0 523 a Fp(2.4)99 b(PGDL:)25 b(PGR)f(Description)
i(Language)0 688 y Fu(In)h(this)h(subsection,)h(we)f(illustrate)f(ho)n
(w)g(pipeline)g(processors)0 788 y(are)k(speci\002ed)h(in)f(the)h(PGDL)
g(and)f(ho)n(w)g(such)g(description)f(is)0 888 y(translated)21
b(into)h(the)g(hardw)o(are)f(description)g(of)g(pipelined)g(pro-)0
987 y(cessors.)8 1947 y
 currentpoint currentpoint translate 0.46758 0.46758 scale neg exch
neg exch translate
 8 1947 a 8 1947 a
 gsave currentpoint currentpoint translate +0 neg rotate neg exch neg
exch translate
 8 1947 a @beginspecial
45 @llx 569 @lly 530 @urx 787 @ury 4850 @rwi @setspecial
%%BeginDocument: ./mat/simple.eps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 45 569 530 787
%%Title: simple
%%CreationDate: Wed Dec  8 20:51:05 2004
%%Creator: Tgif-4.1.40 by William Chia-Wei Cheng (william@cs.UCLA.edu)
%%ProducedBy: (unknown)
%%Pages: 1
%%DocumentFonts: (atend)
%%EndComments
%%BeginProlog

/tgifdict 55 dict def
tgifdict begin

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/TGEL % tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/TGAT % tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/TGMAX
 { exch dup 3 1 roll exch dup 3 1 roll gt { pop } { exch pop } ifelse
 } def
/TGMIN
 { exch dup 3 1 roll exch dup 3 1 roll lt { pop } { exch pop } ifelse
 } def
/TGSW { stringwidth pop } def

/bd { bind def } bind def

/GS { gsave } bd
/GR { grestore } bd
/NP { newpath } bd
/CP { closepath } bd
/CHP { charpath } bd
/CT { curveto } bd
/L { lineto } bd
/RL { rlineto } bd
/M { moveto } bd
/RM { rmoveto } bd
/S { stroke } bd
/F { fill } bd
/TR { translate } bd
/RO { rotate } bd
/SC { scale } bd
/MU { mul } bd
/DI { div } bd
/DU { dup } bd
/NE { neg } bd
/AD { add } bd
/SU { sub } bd
/PO { pop } bd
/EX { exch } bd
/CO { concat } bd
/CL { clip } bd
/EC { eoclip } bd
/EF { eofill } bd
/IM { image } bd
/IMM { imagemask } bd
/ARY { array } bd
/SG { setgray } bd
/RG { setrgbcolor } bd
/SD { setdash } bd
/W { setlinewidth } bd
/SM { setmiterlimit } bd
/SLC { setlinecap } bd
/SLJ { setlinejoin } bd
/SH { show } bd
/FF { findfont } bd
/MS { makefont setfont } bd
/AR { arcto 4 {pop} repeat } bd
/CURP { currentpoint } bd
/FLAT { flattenpath strokepath clip newpath } bd
/TGSM { tgiforigctm setmatrix } def
/TGRM { savematrix setmatrix } def

end

%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1

%%PageBoundingBox: 45 569 530 787
tgifdict begin
/tgifsavedpage save def

1 SM
1 W

0 SG

72 0 MU 72 11 MU TR
72 128 DI 100.000 MU 100 DI DU NE SC

GS

/tgiforigctm matrix currentmatrix def

% BOX
0 SG
GS
   10 SM
   GS
      NP 244 176 M 440 176 L 440 392 L 244 392 L CP
      2 W
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      140 96 M
      GS
            0 SG
            /NewCenturySchlbk-Bold FF [34 0 0 -34 0 0] MS
            (a) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      164 108 M
      GS
            0 SG
            /NewCenturySchlbk-Bold FF [25 0 0 -25 0 0] MS
            (j) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      316 236 M
      0 36 atan DU cos 10.000 MU 352 exch SU
      exch sin 10.000 MU 236 exch SU L
   TGSM
   2 W
   S
   1 W
GR
GS
   TGSM
   NP
      352 236 10.000 4.000 36 0 TGAT
   1 SG CP F
   0 SG
   NP
      352 236 10.000 4.000 36 0 TGAT
   CP F
GR

% OVAL
0 SG
GS
   GS
      NP 380 240 24 24 TGEL
      2 W
      S
   GR
GR

% POLY/OPEN-SPLINE
0 SG
GS
   352 237 TR
   [0.000 -0.714 0.714 0.000 19 12] CO
   352 NE 237 NE TR
GS
   NP
      352 237 M
      378 263 L
   TGSM
   2 W
   S
   1 W
GR
GR

% POLY/OPEN-SPLINE
0 SG
GS
   299 223 TR
   [-0.357 -0.000 0.000 -0.357 92 27] CO
   299 NE 223 NE TR
GS
   NP
      299 223 M
      359 283 L
   TGSM
   2 W
   S
   1 W
GR
GR

% POLY/OPEN-SPLINE
0 SG
GS
   323 213 TR
   [-0.000 1.000 -1.000 -0.000 56 -36] CO
   323 NE 213 NE TR
GS
   NP
      231 213 M
      351 213 L
   TGSM
   2 W
   S
   1 W
GR
GS
   TGSM
   NP
      379 213 10.000 4.000 0 128 TGAT
   1 SG CP F
   0 SG
   NP
      379 213 10.000 4.000 0 128 TGAT
   CP F
GR
GR

% POLY/OPEN-SPLINE
0 SG
GS
   323 321 TR
   [-0.000 1.000 -1.000 -0.000 56 -36] CO
   323 NE 321 NE TR
GS
   NP
      303 321 M
      351 321 L
   TGSM
   2 W
   S
   1 W
GR
GS
   TGSM
   NP
      379 321 10.000 4.000 0 56 TGAT
   1 SG CP F
   0 SG
   NP
      379 321 10.000 4.000 0 56 TGAT
   CP F
GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      272 244 M
      GS
            0 SG
            /NewCenturySchlbk-Bold FF [34 0 0 -34 0 0] MS
            (a) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      296 256 M
      GS
            0 SG
            /NewCenturySchlbk-Bold FF [25 0 0 -25 0 0] MS
            (i) SH
      GR
   GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 256 208 M 316 208 L 316 268 L 256 268 L CP
      2 W
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      368 364 M
      GS
            0 SG
            /Symbol FF [34 0 0 -34 0 0] MS
            (S) SH
      GR
   GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 348 324 M 408 324 L 408 384 L 348 384 L CP
      2 W
      S
   GR
GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 124 60 M 184 60 L 184 120 L 124 120 L CP
      2 W
      S
   GR
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      184 84 M
      880 84 L
   TGSM
   2 W
   S
   1 W
GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 464 176 M 660 176 L 660 392 L 464 392 L CP
      2 W
      S
   GR
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      536 236 M
      0 36 atan DU cos 10.000 MU 572 exch SU
      exch sin 10.000 MU 236 exch SU L
   TGSM
   2 W
   S
   1 W
GR
GS
   TGSM
   NP
      572 236 10.000 4.000 36 0 TGAT
   1 SG CP F
   0 SG
   NP
      572 236 10.000 4.000 36 0 TGAT
   CP F
GR

% OVAL
0 SG
GS
   GS
      NP 600 240 24 24 TGEL
      2 W
      S
   GR
GR

% POLY/OPEN-SPLINE
0 SG
GS
   572 237 TR
   [0.000 -0.714 0.714 0.000 19 12] CO
   572 NE 237 NE TR
GS
   NP
      572 237 M
      598 263 L
   TGSM
   2 W
   S
   1 W
GR
GR

% POLY/OPEN-SPLINE
0 SG
GS
   519 223 TR
   [-0.357 -0.000 0.000 -0.357 92 27] CO
   519 NE 223 NE TR
GS
   NP
      519 223 M
      579 283 L
   TGSM
   2 W
   S
   1 W
GR
GR

% POLY/OPEN-SPLINE
0 SG
GS
   543 213 TR
   [-0.000 1.000 -1.000 -0.000 56 -36] CO
   543 NE 213 NE TR
GS
   NP
      451 213 M
      571 213 L
   TGSM
   2 W
   S
   1 W
GR
GS
   TGSM
   NP
      599 213 10.000 4.000 0 128 TGAT
   1 SG CP F
   0 SG
   NP
      599 213 10.000 4.000 0 128 TGAT
   CP F
GR
GR

% POLY/OPEN-SPLINE
0 SG
GS
   543 321 TR
   [-0.000 1.000 -1.000 -0.000 56 -36] CO
   543 NE 321 NE TR
GS
   NP
      523 321 M
      571 321 L
   TGSM
   2 W
   S
   1 W
GR
GS
   TGSM
   NP
      599 321 10.000 4.000 0 56 TGAT
   1 SG CP F
   0 SG
   NP
      599 321 10.000 4.000 0 56 TGAT
   CP F
GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      492 244 M
      GS
            0 SG
            /NewCenturySchlbk-Bold FF [34 0 0 -34 0 0] MS
            (a) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      516 256 M
      GS
            0 SG
            /NewCenturySchlbk-Bold FF [25 0 0 -25 0 0] MS
            (i) SH
      GR
   GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 476 208 M 536 208 L 536 268 L 476 268 L CP
      2 W
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      588 364 M
      GS
            0 SG
            /Symbol FF [34 0 0 -34 0 0] MS
            (S) SH
      GR
   GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 568 324 M 628 324 L 628 384 L 568 384 L CP
      2 W
      S
   GR
GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 744 176 M 940 176 L 940 392 L 744 392 L CP
      2 W
      S
   GR
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      816 236 M
      0 36 atan DU cos 10.000 MU 852 exch SU
      exch sin 10.000 MU 236 exch SU L
   TGSM
   2 W
   S
   1 W
GR
GS
   TGSM
   NP
      852 236 10.000 4.000 36 0 TGAT
   1 SG CP F
   0 SG
   NP
      852 236 10.000 4.000 36 0 TGAT
   CP F
GR

% OVAL
0 SG
GS
   GS
      NP 880 240 24 24 TGEL
      2 W
      S
   GR
GR

% POLY/OPEN-SPLINE
0 SG
GS
   852 237 TR
   [0.000 -0.714 0.714 0.000 19 12] CO
   852 NE 237 NE TR
GS
   NP
      852 237 M
      878 263 L
   TGSM
   2 W
   S
   1 W
GR
GR

% POLY/OPEN-SPLINE
0 SG
GS
   799 223 TR
   [-0.357 -0.000 0.000 -0.357 92 27] CO
   799 NE 223 NE TR
GS
   NP
      799 223 M
      859 283 L
   TGSM
   2 W
   S
   1 W
GR
GR

% POLY/OPEN-SPLINE
0 SG
GS
   823 213 TR
   [-0.000 1.000 -1.000 -0.000 56 -36] CO
   823 NE 213 NE TR
GS
   NP
      731 213 M
      851 213 L
   TGSM
   2 W
   S
   1 W
GR
GS
   TGSM
   NP
      879 213 10.000 4.000 0 128 TGAT
   1 SG CP F
   0 SG
   NP
      879 213 10.000 4.000 0 128 TGAT
   CP F
GR
GR

% POLY/OPEN-SPLINE
0 SG
GS
   823 321 TR
   [-0.000 1.000 -1.000 -0.000 56 -36] CO
   823 NE 321 NE TR
GS
   NP
      803 321 M
      851 321 L
   TGSM
   2 W
   S
   1 W
GR
GS
   TGSM
   NP
      879 321 10.000 4.000 0 56 TGAT
   1 SG CP F
   0 SG
   NP
      879 321 10.000 4.000 0 56 TGAT
   CP F
GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      772 244 M
      GS
            0 SG
            /NewCenturySchlbk-Bold FF [34 0 0 -34 0 0] MS
            (a) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      796 256 M
      GS
            0 SG
            /NewCenturySchlbk-Bold FF [25 0 0 -25 0 0] MS
            (i) SH
      GR
   GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 756 208 M 816 208 L 816 268 L 756 268 L CP
      2 W
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      868 364 M
      GS
            0 SG
            /Symbol FF [34 0 0 -34 0 0] MS
            (S) SH
      GR
   GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 848 324 M 908 324 L 908 384 L 848 384 L CP
      2 W
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      680 276 M
      GS
            0 SG
            /NewCenturySchlbk-Bold FF [34 0 0 -34 0 0] MS
            (. . .) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      84 44 M
      GS
            0 SG
            /NewCenturySchlbk-Bold FF [34 0 0 -34 0 0] MS
            (Memory) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      648 76 M
      GS
            0 SG
            /NewCenturySchlbk-Roman FF [24 0 0 -24 0 0] MS
            (Broadcast) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      244 160 M
      GS
            0 SG
            /NewCenturySchlbk-Bold FF [34 0 0 -34 0 0] MS
            (PE1) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      464 160 M
      GS
            0 SG
            /NewCenturySchlbk-Bold FF [34 0 0 -34 0 0] MS
            (PE2) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      744 160 M
      GS
            0 SG
            /NewCenturySchlbk-Bold FF [34 0 0 -34 0 0] MS
            (PEn) SH
      GR
   GR

GR
tgifsavedpage restore
end
showpage

%%Trailer
%MatchingCreationDate: Wed Dec  8 20:51:05 2004
%%DocumentFonts: NewCenturySchlbk-Roman
%%+ Symbol
%%+ NewCenturySchlbk-Bold
%%EOF

%%EndDocument
 @endspecial 4049 1947 a
 currentpoint grestore moveto
 4049 1947 a 8 1947 a
 currentpoint currentpoint translate 1 0.46758 div 1 0.46758 div scale
neg exch neg exch translate
 8 1947
a 0 2130 a Fu(Figure)e(7:)25 b(Block)20 b(diagram)e(of)i(the)f(e)o
(xample)g(processors\(PEs\).)83 2440 y(W)m(ith)i(the)g(current)f(v)o
(ersion)f(of)i(the)g(PGR)h(package,)e(it)h(is)h(spe-)0
2539 y(cially)d(tuned)f(to)h(generate)e(hardw)o(are)h(description)f(of)
h(pipelined)0 2639 y(processors)h(for)h(the)g(follo)n(wing)f(summation)
f(form;)586 2896 y Fk(f)633 2908 y Fj(i)691 2896 y Fi(=)832
2792 y Fj(n)796 2817 y Fh(X)791 2996 y Fj(j)t Fg(=1)937
2896 y Fk(F)13 b Fi(\()p Fk(p)1094 2908 y Fj(i)1126 2896
y Fk(;)i(p)1218 2908 y Fj(j)1256 2896 y Fi(\))p Fk(;)489
b Fu(\(1\))0 3175 y(where)26 b Ft(f)271 3187 y Fl(i)326
3175 y Fu(is)i(summation)e(for)g Ft(i)p Fu(-th)g(data,)j
Ft(p)1309 3187 y Fl(i)1364 3175 y Fu(are)e(some)f(v)n(alues)0
3275 y(associated)33 b(with)g Ft(i)p Fu(-th)f(data,)k(and)d
Ft(F)45 b Fu(e)o(xpresses)33 b(calculations)0 3374 y(where)20
b Ft(i)p Fu(-th)f(and)h Ft(j)5 b Fu(-th)20 b(data)g(are)g(as)h(inputs.)
83 3479 y(As)i(an)e(e)o(xample)f(tar)o(get,)h(we)i(consider)d(the)i
(follo)n(wing)e(arti\002-)0 3578 y(cial)h(calculations;)407
3829 y Ft(f)448 3841 y Fl(i)499 3829 y Fm(=)626 3725
y Fl(n)586 3750 y Fh(X)631 3927 y Fl(j)720 3829 y Ft(a)764
3841 y Fl(i)792 3829 y Ft(a)836 3841 y Fl(j)871 3829
y Ft(:)166 b Fm(\()p Ft(i)23 b Fm(=)f(1)p Ft(;)14 b(:::;)g(n)p
Fm(\))311 b Fu(\(2\))0 4104 y(Figure)25 b(7)g(sho)n(ws)h(the)g(block)e
(diagram)g(for)h(this)h(tar)o(get)f(proces-)0 4204 y(sor)-5
b(.)25 b(Here,)18 b Ft(a)388 4216 y Fl(i)435 4204 y Fu(and)g
Ft(a)618 4216 y Fl(j)672 4204 y Fu(are)h(scalar)g(v)n(alues)f(for)g
Ft(i)p Fu(-th)g(and)g Ft(j)5 b Fu(-th)19 b(ele-)0 4304
y(ments,)j(respecti)n(v)o(ely)-5 b(.)29 b(This)22 b(tar)o(get)f(simply)
h(calculates)g(a)h(prod-)0 4403 y(uct)d(of)f Ft(a)255
4415 y Fl(i)302 4403 y Fu(and)g Ft(a)486 4415 y Fl(j)521
4403 y Fu(,)h(and)f(sums)h(the)f(product)f(up)h(for)g(all)h
Ft(j)5 b Fu(.)25 b(In)19 b(this)0 4503 y(e)o(xample,)34
b(we)f(ha)n(v)o(e)f(the)h(essential)g(ingredients)e(of)h(an)h(FB)m(A:)0
4603 y(data,)h(their)e(representation,)g(functional)e(form)g(of)i
(arithmetic)0 4702 y(operations)19 b(between)g(data)h
Ft(i)g Fu(and)g Ft(j)5 b Fu(.)83 4807 y(Figure)36 b(8)g(sho)n(ws)g(the)
h(PGDL)f(description)f(of)h(this)h(tar)o(get)0 4907 y(function.)45
b(The)27 b(\002rst)h(tw)o(o)g(lines)g(de\002ne)e(the)i(bit-length)e(of)
h(the)0 5006 y(\003oating-point)20 b(format.)30 b(These)22
b(de\002nitions)f(are)i(actually)e(used)1988 479 y Ff(#define)34
b(NFLO)h(26)1988 545 y(#define)f(NMAN)h(16)1988 678 y(/JPSET)f(x,)70
b(aj[],)34 b(float,)g(NFLO,)g(NMAN;)1988 744 y(/IPSET)g(y,)70
b(ai[],)34 b(float,)g(NFLO,)g(NMAN;)1988 811 y(/FOSET)g(z,)70
b(fi[],)34 b(float,)g(NFLO,)g(NMAN;)1988 943 y(/NPIPE)g(10;)1988
1076 y(pg_float_mult)208 b(\(x,)104 b(y,)70 b(xy,)34
b(NFLO,)g(NMAN,)g(1\);)1988 1143 y(pg_float_accum)173
b(\(xy,)69 b(z,)209 b(NFLO,)34 b(NMAN,)g(1\);)1988 1408
y Fu(Figure)39 b(8:)63 b(An)39 b(e)o(xample)e(of)i(design)f(entry)h
(\002le)g(written)g(in)1988 1508 y(PGDL)1988 1765 y(in)21
b(the)g(ne)o(xt)f(block)f(\(three)h(lines)h(starting)f(with)h
(\223/\224\),)g(which)f(de-)1988 1864 y(\002nes)31 b(the)f(re)o(gister)
f(and)g(memory)f(layout,)j(which)f(also)g(deter)n(-)1988
1964 y(mine)25 b(the)g(interf)o(ace)g(API)g(etc.)41 b(F)o(or)25
b(the)g(data)g Ft(a)3416 1976 y Fl(i)3469 1964 y Fu(\(and)g
Ft(a)3687 1976 y Fl(j)3721 1964 y Fu(\),)i(we)1988 2064
y(use)22 b(a)h(\003oating)e(point)g(format,)g(with)h(26)g(bits)g(in)g
(total)g(\(1-bit)f(for)1988 2163 y(sign,)i(1-bit)g(for)f(non-zero)e
(\003ag,)j(8-bits)g(for)f(e)o(xponent,)f(and)h(16-)1988
2263 y(bits)h(for)f(mantissa\).)31 b(The)22 b(line)g(\223/NPIPE\224)h
(speci\002es)f(a)h(number)1988 2362 y(pipeline)d(processors)f(\(10)h
(processors)g(in)g(this)h(case\).)26 b(The)20 b(\002nal)1988
2462 y(part)d(describes)f(the)h(tar)o(get)f(function)f(itself)j(using)e
(parametrized)1988 2562 y(arithmetic)i(modules.)23 b(It)18
b(has)g(C-lik)o(e)h(appearance,)d(b)n(ut)i(actually)1988
2661 y(de\002nes)i(the)h(hardw)o(are)d(modules)h(and)h(their)g
(interconnection.)2071 2764 y(From)28 b(such)g(PGDL)h(description,)f
(the)g(follo)n(wing)f(ALL)h(\(as)1988 2864 y(sho)n(wn)c(in)h(\002gure)f
(7\))g(is)i(generated;)f(the)f Ft(i)p Fu(-th)g(data)h(is)g(stored)f(in)
1988 2963 y(the)e(on-chip)e(memory)-5 b(,)20 b(and)i(ne)n(w)f(data)h
(\()p Ft(j)5 b Fu(-th)21 b(data\))h(is)g(supplied)1988
3063 y(at)17 b(each)g(clock)f(c)o(ycle.)23 b(The)16 b
Ft(i)p Fu(-th)g(data)h(is)g(unchanged)d(during)h(one)1988
3163 y(calculation,)k(and)h(the)g(result)g(\()p Ft(f)2931
3175 y Fl(i)2958 3163 y Fu(\))h(is)g(stored)e(in)i(the)f(re)o(gister)-5
b(.)1988 3461 y Fv(3)120 b(A)m(pplication)1988 3652 y
Fu(T)-7 b(o)21 b(sho)n(w)f(the)g(possibility)g(of)g(the)g(PGR)i
(package,)c(we)j(ha)n(v)o(e)e(im-)1988 3752 y(plemented)32
b(gra)n(vitational)g(force)g(pipeline)g(for)h(astrophysical)1988
3852 y Ft(N)9 b Fu(-body)19 b(simulations.)2071 3954
y(The)30 b(implemented)d(pipeline)i(processors)f(calculate)h(gra)n(vi-)
1988 4054 y(tational)21 b(force)f Fi(a)2497 4066 y Fl(i)2546
4054 y Fu(of)h Ft(i)p Fu(-th)f(particle)h(e)o(x)o(erted)e(by)h(all)i
(other)e(parti-)1988 4154 y(cles:)2551 4263 y Fi(a)2597
4275 y Fl(i)2648 4263 y Fm(=)2735 4184 y Fh(X)2780 4361
y Fl(j)2997 4207 y Ft(m)3070 4219 y Fl(j)3105 4207 y
Fi(r)3144 4219 y Fl(ij)p 2879 4244 443 4 v 2879 4321
a Fm(\()p Ft(r)2950 4293 y Fs(2)2948 4344 y Fl(ij)3026
4321 y Fm(+)e Ft(")3148 4297 y Fs(2)3185 4321 y Fm(\))3217
4297 y Fs(3)p Fl(=)p Fs(2)3797 4263 y Fu(\(3\))1988 4505
y(where)j Fi(r)2252 4517 y Fl(ij)2332 4505 y Fu(is)i(a)e(distance)g
(between)f Ft(i)i Fu(and)e Ft(j)5 b Fu(-th)21 b(particles)g(\()p
Fi(r)3775 4517 y Fl(j)3829 4505 y Fr(\000)1988 4604 y
Fi(r)2027 4616 y Fl(i)2055 4604 y Fu(\),)28 b Ft(m)2205
4616 y Fl(j)2267 4604 y Fu(is)f(mass)g(of)f Ft(j)5 b
Fu(-th)26 b(particle,)h(and)f Ft(")g Fu(is)h(a)g(softening)e(pa-)1988
4704 y(rameter)20 b(that)g(pre)n(v)o(ents)f(a)h(zero-di)n(vision.)2071
4807 y(Figure)f(9)h(and)e(10)h(sho)n(w)h(PGDL)f(descriptions)g(for)f
(this)i(gra)n(v-)1988 4907 y(itational)30 b(force)f(pipeline)g(using)g
(26-bit)g(\003oating)g(point)g(arith-)1988 5006 y(metic)e(operations)e
(and)i(17-bit)e(logarithmic)g(arithmetic)h(oper)n(-)p
eop end
%%Page: 10 10
TeXDict begin 10 9 bop 0 523 a Fu(ations,)28 b(respecti)n(v)o(ely)-5
b(.)42 b(Note)26 b(there)g(are)h(a)g(se)n(v)o(eral)f(dif)n(ferences)0
623 y(between)19 b(tw)o(o)i(descriptions.)83 722 y(Figure)c(11)g(sho)n
(ws)g(a)h(generated)e(data)h(\003o)n(w)h(graph)e(that)h(corre-)0
822 y(sponds)j(to)h(the)g(\003oating-point)d(pipeline.)25
b(Since)c(all)g(operations)0 922 y(must)g(be)f(synchronized)e(in)j
(pipeline)e(processors,)h(a)h(module)e(in)0 1021 y(the)h(PGR)h(package)
e(automatically)g(inserts)h(delay)g(re)o(gisters)g(for)0
1121 y(synchronization.)h(Figure)c(12)g(sho)n(ws)g(a)h(data)f(\003o)n
(w)h(after)f(the)g(de-)0 1220 y(lay)h(re)o(gisters,)f(which)g(are)g
(indicated)g(by)g(bold)f(solid)i(circles,)g(are)0 1320
y(inserted.)83 1420 y(W)-7 b(e)49 b(ha)n(v)o(e)d(compared)g(this)i(tw)o
(o)f(implementations)f(with)0 1519 y(the)33 b(GRAPE-5)g(as)g(the)g(e)o
(xisting)f(implementation.)61 b(T)-7 b(able)33 b(9)0
1619 y(sho)n(ws)f(the)g(result)f(of)h(the)g(comparison.)57
b(In)32 b(the)f(case)h(of)g(the)0 1719 y(\003oating-point)20
b(implementation)g(\(9\),)h(24)h(pipeline)f(processors)0
1818 y(can)28 b(be)f(successfully)g(implemented)f(on)i(one)f(PR)m
(OGRAPE-3)0 1918 y(board,)h(while)g(in)g(the)g(case)g(of)g(the)g
(logarithmic)e(implementa-)0 2017 y(tion)f(\(10\),)f(which)h(is)h
(actually)e(equi)n(v)n(alent)f(with)j(the)f(GRAPE-)0
2117 y(5,)45 b(64)40 b(pipelines)g(can)g(be)h(successfully)e
(implemented.)84 b(In)0 2217 y(both)33 b(cases,)39 b(each)34
b(pipeline)f(processors)g(successfully)h(oper)n(-)0 2316
y(ate)22 b(at)g(66.6MHz.)27 b(The)21 b(number)f(of)h(\003oating-point)e
(operations)0 2416 y(per)32 b(one)g(interaction)g(is)h(38.)63
b(Thus)32 b(the)h(peak)f(speed)g(of)g(one)0 2516 y(PR)m(OGRAPE-3)23
b(board)f(is)j(60.8)d(G\003ops)h(with)h(26-bit)e(\003oating-)0
2615 y(point)28 b(arithmetics)h(and)f(162.1)f(G\003ops)i(with)g(17-bit)
f(logarith-)0 2715 y(mic)h(arithmetics.)53 b(In)29 b(the)g(case)h(of)f
(same)h(accurac)o(y)-5 b(,)29 b(the)g(per)n(-)0 2814
y(formance)g(of)h(our)h(implementation)d(on)j(one)f(PR)m(OGRAPE-3)0
2914 y(board)21 b(is)j(\002)n(v)o(e)e(times)i(f)o(aster)e(than)h(one)f
(GRAPE-5)g(board.)31 b(And)0 3014 y(e)n(v)o(en)i(if)h(we)g(use)g(twice)
h(the)e(accurac)o(y)-5 b(,)35 b(the)f(performance)d(of)0
3113 y(our)f(implementation)e(is)j(the)f(still)i(tw)o(o)e(times)h(good)
e(than)h(the)0 3213 y(GRAPE-5.)83 3313 y(Figure)22 b(13)h(sho)n(ws)g
(the)f(mesured)g(calculation)g(speed)g(of)h(sin-)0 3412
y(gle)34 b(PR)m(OGRAPE-3)g(board)f(with)h(17-bit)f(logarithmic)f
(arith-)0 3512 y(metics.)50 b(The)28 b(horizontal)e(axis)j(means)f(the)
g(number)f(of)h(parti-)0 3611 y(cles.)45 b(The)26 b(v)o(ertical)g(axis)
h(means)f(the)h(mesured)f(speed)g(for)g(the)0 3711 y(direct-summation)
14 b(algorithm.)22 b(Because)17 b(the)g(order)e(of)h(the)h(cal-)0
3811 y(culation)h(and)h(communication)d(is)k Ft(O)r Fm(\()p
Ft(N)1211 3781 y Fs(2)1249 3811 y Fm(\))g Fu(and)e Ft(O)r
Fm(\()p Ft(N)9 b Fm(\))21 b Fu(respec-)0 3910 y(ti)n(v)o(ely)-5
b(,)31 b(the)e(mesured)f(speed)h(approaches)f(the)h(peak)g(speed)g(as)0
4010 y(the)20 b(number)f(of)h(particles)g(increases.)0
4286 y Fv(4)119 b(Related)31 b(w)o(ork)0 4522 y(5)119
b(Larated)30 b(w)o(ork)0 4707 y Fu(An)68 b(earlier)g(e)o(xample)f(of)h
(the)g(use)h(of)f(recon\002gurable)0 4807 y(hardw)o(are)56
b(in)i(the)f(acceleration)f(of)h(scienti\002c)h(computa-)0
4907 y(tions)52 b(is)h(PR)m(OGRAPE-1\(PR)m(Ogrammable)c(GRAPE-1\))p
Fe(??)n Fu(.)0 5006 y(PR)m(OGRAPE-1)39 b(is)h(an)e(FB)m(A)i(for)e(man)o
(y-body)e(simulations.)2013 552 y Fd(1)25 b(/*)g
(--------------------------------------------------)20
b(MACRO)k(*/)2013 602 y(2)h(#define)f(NFLO)h(26)2013
652 y(3)g(#define)f(NMAN)h(16)2013 702 y(4)g(#define)f(NFIX)h(57)2013
751 y(5)g(#define)f(NACC)h(64)2013 801 y(6)g(#define)f(FOFFSET)h
(\(131072.0\))2013 851 y(7)g(#define)f(NST_MULT)h(2)2013
901 y(8)g(/*)g(-----------------------------------------)c(I/O)k
(DEFINITION)e(*/)2013 951 y(9)i(/JPSET)f(xj[3],)h(x[][],)49
b(float,)24 b(NFLO,)h(NMAN;)1988 1000 y(10)g(/JPSET)f(mj,)100
b(m[],)f(float,)24 b(NFLO,)h(NMAN;)1988 1050 y(11)g(/IPSET)f(xi[3],)h
(x[][],)49 b(float,)24 b(NFLO,)h(NMAN;)1988 1100 y(12)g(/IPSET)f
(ieps2,)h(eps2,)74 b(float,)24 b(NFLO,)h(NMAN;)1988 1150
y(13)g(/FOSET)f(sx[3],)h(a[][],)49 b(fix,)74 b(NACC,)25
b(\(-1.0/FOFFSET\);)1988 1200 y(14)g(/CONST_FLOAT)f(fofst,)g(FOFFSET,)g
(NFLO,)h(NMAN;)1988 1249 y(15)1988 1299 y(16)g(/NPIPE)f(6;)1988
1349 y(17)h(/*)g(-------------------------------------------)c(PE)j
(DATA)h(FLOW)f(*/)1988 1399 y(18)h(pg_float_sub\(xi,xj,)73
b(dx,)50 b(NFLO,NMAN,4\);)1988 1449 y(19)25 b(pg_float_mult\(dx,dx,)e
(dx2,)274 b(NFLO,NMAN,)24 b(NST_MULT\);)1988 1499 y(20)h
(pg_float_unsigned_add\(dx2[0],dx2[1],)d(x2y2,)49 b(NFLO,NMAN,4\);)1988
1548 y(21)25 b(pg_float_unsigned_add\(dx2[2],ieps2,)47
b(z2e2,)i(NFLO,NMAN,4\);)1988 1598 y(22)25 b
(pg_float_unsigned_add\(x2y2,z2e2,r2,)d(NFLO,NMAN,)i(4\);//)g
(x2y2+z2e2)1988 1648 y(23)h(pg_float_sqrt\(r2,r1,)173
b(NFLO,NMAN,)24 b(3\);)199 b(//)24 b(sqrt\(r2\))1988
1698 y(24)h(pg_float_recipro\(r1,r1i)e(,)50 b(NFLO,NMAN,)24
b(2\);)199 b(//)24 b(1/r1)1988 1748 y(25)h(pg_float_mult\(r1i,r1i,r2i,)
e(NFLO,NMAN,)h(NST_MULT\);)g(//)g(r1i)h(*)g(r1i)1988
1797 y(26)g(pg_float_mult\(r1i,r2i,r3i,)e(NFLO,NMAN,)h(NST_MULT\);)g
(//)g(r1i)h(*)g(r2i)1988 1847 y(27)g(pg_float_mult\(r3i,mj,mf,)73
b(NFLO,NMAN,)24 b(NST_MULT\);)g(//)g(r3i)h(*)g(mj)1988
1897 y(28)g(pg_float_mult\(mf,fofst,mfo,NFLO,NMAN,)d(NST_MULT\);)i(//)g
(mf)50 b(*)25 b(fofst)1988 1947 y(29)g(pg_float_mult\(mfo,dx,fx,)73
b(NFLO,NMAN,)24 b(NST_MULT\);)g(//)g(mfo)h(*)g(dx[])1988
1997 y(30)g(pg_conv_floattofix\(fx,ffx,)e(NFLO,NMAN,NFIX,1\);)g(//)i
(fxo[])f(->)h(ffx[])1988 2046 y(31)g(pg_fix_accum\(ffx,sx,)173
b(NFIX,)24 b(NACC,)g(4\);)100 b(//)25 b(sx[])f(+=)h(ffx[])1988
2312 y Fu(Figure)d(9:)30 b(a)23 b(PGDL)g(for)f(gra)n(vitational)f
(force)g(calculation)h(\(us-)1988 2412 y(ing)e(26-bit)f(\003oating)h
(point)f(arithmetics\))2013 2694 y Fd(1)25 b(/*)g
(--------------------------------------------------)20
b(MACRO)k(*/)2013 2744 y(2)h(#define)f(NPOS)h(32)2013
2794 y(3)g(#define)f(NLOG)h(17)2013 2844 y(4)g(#define)f(NMAN)h(8)2013
2893 y(5)g(#define)f(NCUT)h(6)2013 2943 y(6)g(#define)f(NFOR)h(57)2013
2993 y(7)g(#define)f(NACC)h(64)2013 3043 y(8)g(#define)f(xsize)h
(\(100.0\))2013 3093 y(9)g(#define)f(mmin)h(\(1.220703125e-04\))1988
3142 y(10)g(#define)f(xoffset)h(\(xsize/2.0\))1988 3192
y(11)g(#define)f(xscale)h(\(pow\(2.0,\(double\)NPOS\)/xsize\))1988
3242 y(12)g(#define)f(mscale)h(\(pow\(2.0,95.38\)/mmin\))1988
3292 y(13)g(#define)f(escale)h(\(xscale*xscale\))1988
3342 y(14)g(#define)f(foffset)h(\(pow\(2.0,23.0\)\))1988
3391 y(15)g(#define)f(fscale)h(\(-xscale*xscale*foffset/mscale\))1988
3441 y(16)g(/*)g(-----------------------------------------)c(I/O)k
(DEFINITION)e(*/)1988 3491 y(17)i(/NPIPE)f(17;)1988 3541
y(18)1988 3591 y(19)h(/JPSET)f(xj[3],)h(x[][],)f(ufix,)149
b(NPOS,xscale,xoffset;)1988 3641 y(20)25 b(/JPSET)f(mj,)100
b(m[],)74 b(log,)174 b(NLOG,NMAN,mscale;)1988 3690 y(21)25
b(/IPSET)f(xi[3],)h(x[][],)f(ufix,)149 b(NPOS,xscale,xoffset;)1988
3740 y(22)25 b(/IPSET)f(ieps2,)h(eps2,)49 b(log,)174
b(NLOG,NMAN,escale;)1988 3790 y(23)25 b(/FOSET)f(sx[3],)h(a[][],)f
(fix,)174 b(NACC,fscale;)1988 3840 y(24)25 b(/CONST_LOG)f(fx_ofst,)49
b(8388608.0,)24 b(NLOG,)h(NMAN,)f(1.0;)1988 3890 y(25)h(/*)g
(-------------------------------------------)c(PE)j(DATA)h(FLOW)f(*/)
1988 3939 y(26)h(pg_fix_addsub\(SUB,xi,xj,xij,NPOS,)d(1\);)1988
3989 y(27)j(pg_conv_ftol\(xij,dx,NPOS,NLOG,NMAN,)d(2\);)1988
4039 y(28)j(pg_log_shift\(1,dx,x2,NLOG\);)1988 4089 y(29)g
(pg_log_unsigned_add_itp\(x2[0],x2[1],)d(x2y2,)74 b(NLOG,NMAN,4,)24
b(NCUT\);)1988 4139 y(30)h(pg_log_unsigned_add_itp\(x2[2],ieps2,)d
(z2e2,)74 b(NLOG,NMAN,4,)24 b(NCUT\);)1988 4188 y(31)h
(pg_log_unsigned_add_itp\(x2y2,z2e2,)72 b(r2,)124 b(NLOG,NMAN,4,)24
b(NCUT\);)1988 4238 y(32)h(pg_log_shift\(-1,r2,)173 b(r1,)199
b(NLOG\);)1988 4288 y(33)25 b(pg_log_muldiv\(MUL,r2,r1,)48
b(r3,)199 b(NLOG,1\);)1988 4338 y(34)25 b(pg_log_muldiv\(DIV,mj,r3,)48
b(mf,)199 b(NLOG,1\);)1988 4388 y(35)25 b(pg_log_muldiv\(MUL,mf,dx,)48
b(fx,)199 b(NLOG,1\);)1988 4438 y(36)25 b
(pg_log_muldiv\(SDIV,fx,fx_ofst,)d(fxo,)50 b(NLOG,1\);)1988
4487 y(37)25 b(pg_conv_ltof\(fxo,)48 b(ffx,)349 b(NLOG,NMAN,NFOR,2\);)
1988 4537 y(38)25 b(pg_fix_accum\(ffx,)48 b(sx,)374 b(NFOR,NACC,1\);)
1988 4803 y Fu(Figure)17 b(10:)24 b(a)17 b(PGDL)h(for)f(gra)n
(vitational)f(force)g(calculation)h(\(us-)1988 4902 y(ing)j(17-bit)f
(logarithmic)f(arithmetics\))p eop end
%%Page: 11 11
TeXDict begin 11 10 bop 709 580 a Fu(T)-7 b(able)21 b(9:)k
(Implementation)17 b(result)k(and)e(comparison)f(with)j(other)e
(implementation)p 237 692 3419 4 v 237 709 V 1251 779
a(GRAPE-5)h(board\(8)e(ASICs\))247 b(PR)m(OGRAPE-3)20
b(board\(4)e(FPGAs\))p 237 812 V 287 882 a(format)h(:input)685
b(32-bit)19 b(\002x)o(ed)g(point)256 b(26-bit)19 b(\003oating)h(point)
111 b(32-bit)19 b(\002x)o(ed)h(point)287 981 y(format)f(:internal)589
b(17-bit)19 b(logarithmic)241 b(26-bit)19 b(\003oating)h(point)98
b(17-bit)19 b(logarithmic)287 1081 y(format)g(:accumulation)407
b(64-bit)19 b(\002x)o(ed)g(point)301 b(64-bit)19 b(\002x)o(ed)g(point)
156 b(64-bit)19 b(\002x)o(ed)h(point)287 1180 y(A)h(number)d(of)i(PEs)
794 b(16)f(24)648 b(64)287 1280 y(perk)20 b(performance\(G\003ops\))467
b(48.6)730 b(60.8)564 b(162.1)287 1380 y(pair)n(-wise)20
b(error)806 b(10)1668 1350 y Fq(\000)p Fs(2)p Fl(:)p
Fs(4)2461 1380 y Fu(10)2545 1350 y Fq(\000)p Fs(4)p Fl(:)p
Fs(8)3193 1380 y Fu(10)3277 1350 y Fq(\000)p Fs(2)p Fl(:)p
Fs(4)p 237 1413 V 237 1430 V 8 3359 a
 currentpoint currentpoint translate 0.40422 0.40422 scale neg exch
neg exch translate
 8 3359 a 8 3359
a
 gsave currentpoint currentpoint translate +0 neg rotate neg exch neg
exch translate
 8 3359 a @beginspecial 0 @llx 0 @lly 561 @urx 499 @ury
5610 @rwi @setspecial
%%BeginDocument: ./mat/grav_float_nodelay.eps
%!PS-Adobe-3.1 EPSF-3.0
%%Title: grav_float_nodelay.eps
%%Creator: Adobe Illustrator(R) X
%%AI8_CreatorVersion: 10.0
%AI9_PrintingDataBegin
%%For: ev02
%%CreationDate: 12/13/2004
%%BoundingBox: 0 0 561 499
%%HiResBoundingBox: 0 0 560.9424 498.8873
%%CropBox: 0 0 560.9424 498.8873
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI10"
%ADOEndClientInjection: DocumentHeader "AI10"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image (1.0 0)
%%+ procset Adobe_CoolType_Utility_MAKEOCF (1.13 0)
%%+ procset Adobe_CoolType_Core (2.12 0)
%%+ procset Adobe_AGM_Core (2.0 0)
%%+ procset Adobe_AGM_Utils (1.0 0)
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%AI7_Thumbnail: 128 116 8
%%BeginData: 12320 Hex Bytes

%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FFFD07A8FD07FFFD07A8FD06FFFD07A8FD06FFA8A8A8FFA8A8A8FD
%07FFFD07A8FD06FFFD07A8FD06FFA8A8A8FFA8A8A8FD07FFFD07A8FD1AFF
%A8FD07FFA8A8FD04FFA8FD07FF7DFD04FF7DFD07FFA8A8FFFFFF7DFD07FF
%A8FD04FFA8A8FD07FF7DFD04FFA8FD07FFA8A8FFFFFFA8FD07FFA8FD05FF
%A8FD07FFA8FD19FFA8FFFF7D7D527D7DFF7DFFFFFF7DFFFFFD057DFFFFA8
%FFFFA8FFFFFD047D52FFFFA8FFFFA8FFFFA87D7D527DFFFF7DFFFFFF7DFF
%7DFF52FF7D7DFFFFA8FFFFA8FFFFFD047D52FFFFA8FFFFA8FFFFA8FD057D
%FF7DFFFFFF7DFFFFA87DFFA8FFFFA8FD19FF7DFFA827527D527DFFFF7DFF
%FFA8FFFF277D525252FFFFA8FFFF7DFFFF52527D527DFFFF7DFFFFA8FFFF
%5252F85252FFFFA8FFFFFFA8FF522752F87D52FFFFA8FFFF7DFFFF52527D
%527DFFFF7DFFFFA8FFFF5252F87D527DFFA8FFFFFFA8FFFF5227527DFFFF
%A8FD19FFA8FD04FF7DFF7DFFA8FFFFFFA8FFFFFF7D7DFF7DFFFFA8FFFFA8
%FFFFFF7D7DFF7DFFFFA8FFFFA8FD04FFA8A87DFFFFA8FFFFFFA8FFFFFF7D
%FD05FFA8FD06FF7D7DFF7DFFFFA8FFFFFFA8FFFFFFA8A8FFA8FFA8FFFFFF
%A8FD04FFA8A8FFFFA8FD19FFA8A8FD06FFA8A8FD04FF7DFD06FFA8A8FD04
%FFA8A8FD05FFA87DFD04FFA8A8FD06FF7DFD04FFA8A8FD06FFA8A8FD04FF
%A8A8FD05FFA8A8FD04FF7DA8FD06FF7DFD04FFA87DFD06FFA8A8FD1BFFA8
%7DA8A8A87DFFA8A8A8FFFFFF7DA87D527DA8A8FD06FFA8A8A87DA8A8A8FF
%A8A8FFFFFFA8A87D527DA87DFD07FF7DA8A8A87DA8A8FD06FFA8A8A8527D
%A8A8FD04FF7DFFA8A87DA8A8A87DFD06FFA87DA8A8A87DA8FD26FFA827A8
%FFFFFF7DF8A8FD12FF5252FD04FFF852FD0CFF7DFD0CFFF87DFFFFFF7D52
%A8FD0DFFA8A8FD2EFF5227FD04A827FD05A8FD0EFF7D277DA8A8A8527DFD
%04A8FD08FFA8FD07FFFD05A827A8A8A87D2727FD3FFFA8FD09FFA8FD0FFF
%A8FD09FFA8FD08FF7DFD07FF7DFD09FF7DFD0EFFA8FD31FF7DFFFF52FD04
%7DFFFFA8FD0FFFA8FFFF7D7DA8527D7DFF7DFD08FFA8FD07FFA8FFFF52A8
%FD047DFFA8FD0DFFA8FD32FFA8FF7D2727525252FFFFA8FD0FFFA8FFFF52
%F8527D527DFFA8FD08FF7DFD07FF7DFFFF27277D7D5252FF7DFD0CFFA8A8
%FD32FF7DFD04FF7DFF7DFFFFA8FD0FFFA8A8FD04FF7DFF7DFF7DFD08FFA8
%FD07FFA8A8FFFFFFA8FFA8A8FF7DFD0CFFA8FD0FFFFD17A8FD0EFF7DA8A8
%FFFFFFA87DA8FD11FFA87DA8FFFFFFA8A87DFD09FF7DFD09FF7DA8FFFFFF
%A87DA8FD0CFF7DFD0FFF7DFD16FFA8FD10FFA87DA87DA8FFA8FD12FFA8FF
%7DA8A852A8FD0AFFA8FD0AFF527D7DA8A8FFA8FD0BFFA8A8FD0FFFA8FD16
%FF7DFD11FFA8FFFFA8FFFF5227FD0FFF7DFFFFA8F8FF2752FD0AFFA8A8FD
%09FF277D2727FFFFA8A8FD0AFFA8FD10FF7DFD16FFA8FD11FFA8FFFFFFA8
%522727A8A8A8FD0BFFA8FD04FF27A87D7DFD0BFFA8FD09FF52A827A8FFFF
%FFA8FD0AFFA8FD10FFA8FD16FFA8FD11FFA8FD04FF27277DA8FFA87DFD09
%FFA8A8FD04FF52FFFFFF7DFD0AFFA8FD07FFA8A8FFFF7DA8FD04FFA8FD09
%FFA8FD10FF7DFFFFFF7DFD06FFA8FD0BFFA8FD11FF7DFD04FFA8A8FD05FF
%7DFD08FFA8FD04FFA8FD05FFA8A8FD08FFA8FD05FFA8A8FD06FF7DFFFFFF
%A8FD09FFA8FD10FFA8FFFFFFA8A8FD05FFA8FD0BFFA8FD10FFA8A8FFFFFF
%7DA87D7D7D527D527DA8A8FD06FFA8FFFFA8A8A8277D527D527DA87DFD07
%FFA8FD04FFA87DFF52FD077DFFFFFF7DFD08FFA8FD10FF7DFFFFFF5252FD
%04FF2752FD0BFFA8FD10FFA8FD05FFA852F827527D5252FD07FFA8FD05FF
%525227527D5252A8FD08FFA8FD05FFA87D5252277D7D7D52FD0DFFA8FD10
%FFA8FFFFA87D52FD04A87D52A8FD06FFA8FFFFFFA8FD10FF7DFD07FF7DFF
%FFFD047DA8A8FD04FFA8FD06FF7DFFFF7D7D7DFD09FFA8FD07FF7DA8FF7D
%A87DA8FD05FFA8FD07FFA8FD10FF7DFFFFA8FD08FF7DFFFFFF7D7D7D527D
%FFFFA8FD10FFA8FD08FFA8A8A8FD04FFA8A8A8FFA8FD08FFA82752FD0AFF
%A827FD05FF7DA8FFFFA8A8A8FD07FF7DFD07FF7DFD10FFA8FFFF7DFD08FF
%A8FFFFFF527D52527DFFFF7DFD10FF7DFD11FFA8A852FD09FFF8A8FD0BFF
%F8FD04FF27F8FD0DFFA8FD07FFA8FD10FF7DFFFFA87DFD05FFA87DA8FD0A
%FFA8FD10FFA8FD13FFFD04A87D7DFD04A87DFD04A87DFFFFFD05A852FD04
%A852A8FD0DFFA8FD07FFA8FD10FFA8FD04FFA8A8FFFFA8A8FD0CFFA8FD10
%FF7DFD13FF7DFFFFFFF8F87DFD08FFA8FFFFFFA8FD08FF7DFD0EFFA8A8FD
%06FFA8FD10FF7DFD06FF7DA8FD0EFFA8FD10FFA8FD13FFA8FD05FFA8FD07
%FFA8FD04FFA8FD08FFA8FD0FFFA8FD06FFA8FD10FFA8FD06FF27A8FD0EFF
%A8FD10FF7DFD13FF7DFD05FF7DFF7D7D7DA852FF7DFD04FFA8FFA87D7DA8
%52FFA8FD10FF7DFD06FFA8FD10FF7DFD16FFA8FD10FFA8FD13FFA8FD05FF
%A8FF52277D7D52FFA8FD05FFA87D27F87D27FFA8FD10FFA8FD06FFA8FD10
%FFA8FD16FFA8FD10FF7DFD13FF7DFD06FFA8FFFF7DFFFFA8A8FD05FF7DFD
%06FFA8FD10FF7DFD06FFA8FD10FF7DFD16FFA8FD10FFA8FD13FFA8FD06FF
%7DA8A8A87D277DFD05FF7D7DA8A87DA8A87DA8FD10FFA8FD06FF7DFD10FF
%A8FD0AFFA8FD0BFF7DFD10FF7DFD13FF7DFD0AFF7DF8FD05FF52F87DFD17
%FF7DFD06FFA8FD10FF7DFFFFFF7DFD05FFA8FD0CFFA8FD10FFA8FD13FFA8
%FD08FF7DA8A852FD05A8527DFD18FFA8FD06FFA8FD10FFA8FFFFFFA8FD05
%FFA8FD0CFFA8FD10FF7DFD13FF7DFD08FFA8FD09FFA8FD18FF7DFD06FFA8
%FD10FF7DFFFFFF52FFA8A87DFF52A8FD0BFFA8FD10FFA8FD13FFA8FD08FF
%A8A8FD07FFA8FD19FFA8FD06FFA8FD10FFA8FFFFFF277DFFFFFFA852A8FD
%07FFA8FFFFFFA8FD10FF7DFD13FF7DFD09FF7DFFFF7D7DA8FFFF7DFD19FF
%7DFD06FFA8FD10FF7DFFA8A8A8FD06FFA87DFFFF7D52A87D2752A8FFA8FD
%10FFA8FD13FFA8FD09FFA8FFFF527D7DFFFFA8FD19FFA8FD06FFA8FD10FF
%A8FFFF7DFD07FFA8A8FFFF527D5252527D7DFFA8FD10FF7DFD13FF7DFD09
%FFA8FD06FFA8A8FD19FF7DFD06FFA8FD10FF7DFFFFFFA8A8A8FFFFA87DFD
%0CFFA8FD10FFA8FD13FFA8FD0AFF7DFD05FFA8FD1AFFA8FD06FF7DFD10FF
%A8FD06FF7DA8FD0EFF7DFD10FF7DFD13FF7DFD0AFFA87DA852A87DFD1BFF
%7DFD06FFA8FD10FF7DFD06FF7D7DFD0EFFA8FD10FFA8FD13FFA8FD0CFFA8
%277DFD1CFFA8FD06FFA8FD10FFA8FD06FF7DA8FD0EFFA8FD10FF7DFD13FF
%7DFD0DFFF8FD1DFF7DFD06FFA8FD10FF7DFD16FFA8FD10FFA8FD13FFA8FD
%08FF7DA8A8A87D7DA8A87DA8A8FD18FFA8FD06FFA8FD10FFA8FD16FFA8FD
%10FF7DFD13FF7DFD09FFA8FFFF7D52FFFFFFA8FD19FF7DFD06FFA8FD10FF
%7DFFFFFFA8FD06FFA8FD0BFFA8FD10FFA8FD13FFA8FD0AFFA8FF527DA8FF
%A8FD1AFFA8FD06FFA8FD10FFA8FFFFFFA8FD06FFA8FD0BFFA8FD10FF7DFD
%13FF7DFD0BFFA8FFFFFFA8FD1BFF7DFD06FFA8FD10FF7DFFFFFF7D7DFD04
%FF52A8FD0BFFA8FD10FFA8FD13FFA8FD0CFF7D7D7DFD1CFFA8FD06FF7DFD
%10FFA8FFFFFF7D7DFD04FF527DFD0BFF7DFD10FF7DFD13FF7DFD0DFFF8A8
%FD1CFF7DFD06FFA8FD10FF7DFFFF7D7DA87DA87DA87DA87DFD0AFFA8FD10
%FFA8FD13FFA8FD0DFF52FD1DFFA8FD06FFA8FD10FFA8FFFFA8FD08FFA8FD
%0AFFA8FD10FF7DFD13FF7DFD0BFF7DA8FFA87DFD1BFF7DFD06FFA8FD10FF
%7DFFFFA8FD07FFA8A8FD05FFA8FFA8FFFFA8FD10FFA8FD13FFA8FD09FFA8
%A8FD05FF7DA8FD19FFA8FD06FFA8FD10FFA8FFFFFFA8FD06FFA8FD04FF7D
%A8527D52FFFFA8FD10FF7DFD13FF7DFD08FF7DFFFFFF7D527DFFFFA8A8FD
%18FF7DFD06FFA8FD10FF7DFFFFFF7DFD06FFA8FD04FF52F8275252FFFFA8
%FD10FFA8FD13FFA8FD08FFA8FFFFFF525252FFFFFFA8FD18FFA8FD06FFA8
%FD10FFA8FFFFFFA8FD06FFA8FD0BFFA8FD10FF7DFD13FF7DFD09FF7DFD07
%FF7DFD19FF7DFD05FF7DFD11FF7DFFFFFFA8A87D7D7DA87DFD0CFFA8FD10
%FFA8FD13FFA8FD09FFA8FD07FFA8FD19FFA8FD05FFA8FD11FFA8FD06FF52
%7DFD0EFF7DFD10FF7DFD13FF7DFD0AFFFD067DA8A8A8FD18FF7DFD05FFA8
%FD11FF7DFD06FF7D7DFD0EFFA8FD10FFA8FD13FFA8FD0BFF7D52FF277DFD
%1BFFA8FD04FFA8FD12FFA8FD16FFA8FD10FF7DFD13FF7DFD0BFF7D27A827
%7DFFFFFFA8FD17FF7DFFFFFF7DFD13FF7DFD16FFA8FD10FFA8FD13FFA8FD
%0CFF52FF52FD05FF7DFD16FFA8FFFFA8FD14FFA8FD16FFA8FD10FF7DFD13
%FF7DFD0AFFA8A8FFFFFFA8A8FFFFFFA8FD16FF7DFFA8FD15FF7DFD16FFA8
%FD10FFA8FD13FFA8FD08FFA8A8FFFF7D7D7DFFFFA8FFFFA8FD16FFA8A8FD
%16FFA8FD06FFA8FD0FFFA8FD10FF7DFD13FF7DFD08FFA8A8FFFF522752FF
%FFA8A8FFA8FD16FF7DFD17FF7DFD06FFA8FD0FFFA8FD10FFA8FD13FFA8FD
%0AFF7DFD05FFA8FFFFFFA8FD15FF7DA8FD17FFA8FD06FF7DFD0FFF7DFD10
%FF7DFD13FF7DFD0BFFA8A8FF7DA8FD04FFA8FD13FFA8A8FF7DFD17FF7DFF
%FFA87DA87D2727A87DA8A8FD0AFFA8FD10FFA8FD13FFA8FD0DFFA8A87DFD
%04FFA8FD12FFA8FFFFFFA8FD17FFA8FFFFA8FFFFFFA8FD0FFFA8FD10FF7D
%FD13FF7DFD0EFF7DF8A8A8FFF87DFD10FFA8A8FD04FF7DFD17FF7DFFFFFF
%7DFD05FFA8A8FD0BFFA8FD10FFA8FD13FFA8FD0FFF7D52FF7D27FD10FF7D
%FD06FFA8FD17FFA8FD04FF7DFFFFFFA8A8FD05FFFD057DFFFFA8FD10FF7D
%FD13FF7DFD0EFFA8A8FFFFFFA8A8FD0DFFA87DFD07FF7DFD17FF7DFD05FF
%7DFFA8A8FD06FF2752275252FFFFA8FD10FFA8FD13FFA8FD0DFFA8FFFF7D
%7D7DFFFFA8FD0BFFA8FD09FFA8FD17FFA8FD06FF7DA8FD09FF7DFD04FFA8
%FD10FF7DFD13FF7DFD0CFFA8A8FFFF522752FFFFA8A8FD08FF7DA8FD0AFF
%7DFD17FF7DFD06FF52A8FD0EFFA8FD10FFA8FD13FFA8FD0EFF7DFD05FFA8
%FD08FFA87DFD0CFFA8FD17FFA8FD06FF52FD0FFF7DFD10FF7DFD13FF7DFD
%0FFF7DFFFFA87DFD07FFA8A8A8FD0DFF7DFD17FF7DFD16FFA8FD10FFA8FD
%13FFA8FD10FF7DF87DFD07FFA8FD10FFA8FD17FFA8FD16FFA8FD10FF7DFD
%13FF7DFD11FFF8FD06FFA8A8FD04FFA8A8FD0BFF7DFD17FF7DFD07FF7DFD
%0EFFA8FD10FFA8FD13FFA8FD10FF7DFFA8FFFF527DA8FFFFFFA87DA8FFFF
%7DA8A8FD08FFA8FD17FFA8FD07FFA8FD0EFFA8FD10FF7DFD13FF7DFD0EFF
%A8A8FFFFFFA827F87DFFFFFFA8FD08FFA8FD07FF7DFD17FF7DFD06FF7D27
%FD0EFFA8FD10FFA8FD13FFA8FD0DFFA8FFFF7DFF52FFFFA8FD06FF52A852
%7D7DFFFFA8FD07FFA8FD17FFA8FD06FFA8A8FD0EFFA8FD10FF7DFD13FF7D
%FD0CFFA8A8FFFFF8277DFFFFA8A8FFFF7DFFFF5252F85252FFFF7DFD07FF
%7DFD17FF7DFD05FF7DFFA8A8FD0DFFA8FD10FFA8FD13FFA8FD0EFF7DFD05
%FFA8FD05FFA8FD08FFA8FD06FFA8FD18FFA8FFFFA8A8A8FD04FFA8A8FD0B
%FF7DFD10FF7DFD13FF7DFD0FFF7DFFFFA87DFD06FF7D7DFD05FFA8A8FD07
%FFA8FD18FF7DFFFF7DFD07FFA8A8FD05FFA8FD04FFA8FD10FFA8FD13FFA8
%FD10FF7DF852FD05FFA8A8FFFFFD06A8FD08FFA8FD18FFA8FFFFA8FD07FF
%A8FFA87D7DA8FD067DA8FD10FF7DFD13FF7DFD11FFF8FD05FF7DFD11FFA8
%A8FD18FF7DFFFFFF7DFD06FFA8FFFF5227527DF852527D52A8FD11FFA8FD
%13FFA8FD0FFF7D7DA8FF7D52A8FD12FFA8FD19FFA8FFFFFFA87DA8A8A87D
%7DFD07FF7DA8FFFFFFA8FD11FFA8FD13FFA8FD0EFF7DFFFFFF7D2727FD12
%FFA8A8FD19FF7DFD06FFA8FD0FFFA8FD11FFA8FD13FFA8FD0CFFA8A8A87D
%7D7DFFA8A8FD12FFA8FD1AFFA8FD06FF27A8FD0EFFA8FD11FFA8FD13FFA8
%FD0BFF7DA8FF2727527D7DFFA8A8FD10FFA8FD1BFF7DFD16FFA8FD12FFA8
%FD12FFA8FD09FFFD05A8FD05FFA8A8FD0FFFA8A8FD1CFFA8FD16FF7DFD12
%FF7DFD13FF7DFD04FFA87DA87DA8FFFF7DA87DFFFFFF7DFD0FFFA8A8A8FD
%1DFF7DFD07FFA8FD0EFFA8FD13FFA8FD12FF7D7DA8A8A8FD06FFA8FFFFFF
%A87D27FD0FFFA8FD20FFA8FD07FFA8FD0EFFA8FD12FFA8277DFD0DFFA8A8
%7DA82752FD06FFA8A8A8FD05FFA827FD0CFFA8A8A8FD21FF7DFD07FF7DFD
%0EFFA8FD13FF27527DA8FD08FFA8A87DFD05FF27A87DFFA8527DFD09FF52
%A8A8FD07FFA8A8A8FD24FFA8FD06FFA87DFD0EFFA8FD12FFA8A8A8FFFFA8
%A8A827A87DA8A8FD06FFA87DFFFFFF7D27F8A8FD07FFA8A8FFFFA87DFFFF
%52A8A87DA8FD26FF7DFD06FF7D52FD0EFFA8FD11FFA8FF52FD047DFF2727
%7DFD08FFA8A852FD047DA8A8FD07FFA8FD067DA82727A8FD29FFA8FD04FF
%FD07A8FD0BFFA8FD10FF7DA8FF52277D527DFFFF7DFD08FFA8A8FFFD0552
%FFA87DFD05FF7DFF52A8FD0452FF7DA8FD2AFF7DFD04FFA8FD04FF7DFD0C
%FFA8FD11FFA8A8FFFFA8FF7DA8A8FD0AFFA8A8FFFF7DFF7DA8A8FD07FFA8
%A8FFFF7DFF7D7DFD2CFFA8FD04FFA8FD04FFA8FD04FFFD077DFF7DFD12FF
%A8A8A8FFA8A8A8FD0DFF7DFFFFFF7DFD0BFF7DFFFFFF7DFD2DFF7DFFFFFF
%7DFD05FF7DFD04FF7D7DFD0452FFFFA8FD15FFF852FD10FF7D2752FD0DFF
%5227A8FD2EFFA8FFFFFFA8A8A87DA87DFD0DFFA8FD15FF27A8FD11FFF8FD
%0EFF7D27FD2FFF7DFD06FF7D52FD0EFFA8FD12FF7DA8A87DA8A8A87D7DFD
%0AFF7DA8A87D7DA8A8A87DFD06FFA87DA8A8A87DA8A8A87DFD2AFFA8FD06
%FFA8A8FD0EFFA8FD12FFA8FD07FF7DFD09FFA8A8FD07FFA8FD06FF7DFD07
%FFA8FD2BFF7DFD16FFA8FD11FFA8FD077DFD0BFFA87D277DA87D7D7DFFA8
%FD06FFA85252FD047DFFA8FD2BFFA8FD16FFA8FD11FFA8FD05527D52A8FD
%0AFF7D52277D527D527D7DFD07FFA8FD0652FF7DFD2BFF7DFD06FFA8FD0F
%FFA8FD11FFA8FD04FF7DFF7DA8FD09FFA8A8FD04FF7DFF7DA8FD06FF7DFD
%04FF7DFF7DA8FD2CFFA8FD06FF7DFD0FFF7DFD10FF7DFD08FFA8FD09FFA8
%FD08FFA8FD06FFA8FD07FFA8FD2CFF7DFD06FF7DA8FD0EFFA8FD10FFFD05
%A8F852A87DFD0AFF7DA8A8A87D2752A87DFD07FF7DA8A8A85227A8A87DFD
%2CFFA8FD06FF27A8FD0EFFA8FD15FF27A8FD11FFF8FD0EFF7D27FD2FFF7D
%FFFFFFA8A87DFFA8A87DFD0CFFA8FD14FFA87DA8FD10FFA87D7DFD0DFFA8
%7DA8FD2EFFA8FFFFFFA8FD06FF7DFFFF7DA8FD057D52FFA8FD12FF7DA8FF
%FFFFA87DA8FD0AFFA8A8A8FFFFFFA8A8A8FD07FFA8A8A8FFFFFF7DA8FD2C
%FF7DFFFFFF7DFD06FFA8FFFF52F87D527D522727A8A8FD10FFA8A8FD07FF
%A8A8FD08FFA8FD09FFA8FD05FF7DFD08FFA8A8FD2AFFA8FFFFFFA8FD06FF
%A8FD0BFFA8FD10FF7DFFFFA87D7D527DFFFF7DFD08FFA8FFFFFD047D52FF
%FFA8FD05FFA8FFFF7D7D527D52FFFFA8FD2AFF7DFFFFFFA8A87D7D7DA87D
%FD0CFFA8FD10FFA8FFFF527D7D7D52FFFFA8FD08FF7DFFFF52277D527DFF
%FFA8FD05FF7DFF7D7D277D527DFFFFA8FD2AFFA8FD06FF7D52FD0EFF7DFD
%10FF7DFD04FFA8A87DFFFF7DFD08FFA8FD04FF7DA87DFFFFA8FD05FFA8FD
%04FF7DFF7DFFFFA8FD2AFF7DFD06FFA87DFD0EFFA8FD11FFFD0AA8FD08FF
%FD0BA8FD05FF7DFD0AA8FD2AFFA8FD16FFA8FD68FF7DA87DA87DA87DA87D
%A87DA87DA87DA87DA87DA87DA87D7DFDFCFFFFFFFFFF
%%EndData
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%ADOBeginClientInjection: DocumentProlog Start "AI10"
%ADOEndClientInjection: DocumentProlog Start "AI10"
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2000 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Utils 60 dict dup begin put
/bdf
{
	bind def
} bind def
/nd{
	null def
}bdf
/xdf
{
	exch def
}bdf
/ldf 
{
	load def
}bdf
/ddf
{
	put
}bdf	
/xddf
{
	3 -1 roll put
}bdf	
/xpt
{
	exch put
}bdf
/ndf
{ 
	
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/bdict
{
	mark
}bdf
/edict
{
	counttomark 2 idiv dup dict begin {def} repeat pop currentdict end
}def
	
/ps_level
	/languagelevel where{
		pop systemdict /languagelevel get exec
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr} stopped {
		-1
	}if
def
/makereadonlyarray
{
	/packedarray where{
		pop packedarray
	}{
		array astore readonly
	}ifelse
}bdf
/map_reserved_ink_name
{
	dup type /stringtype eq{
		dup /Red eq{
			pop (_Red_)
		}{
			dup /Green eq{
				pop (_Green_)
			}{
				dup /Blue eq{
					pop (_Blue_)
				}{
					dup /Cyan eq{
						pop (_Cyan_)
					}{
						dup /Magenta eq{
							pop (_Magenta_)
						}{
							dup /Yellow eq{
								pop (_Yellow_)
							}{
								dup /Black eq{
									pop (_Black_)
								}{
									dup () cvn eq{
										pop (Process)
									}if
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf
		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	
	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne
			{
			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark
			} if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		} ifelse
	
	AGMUTIL_GSTATE_flt setflat
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/rdline
{
	currentfile AGMUTIL_str256 readline pop
} bdf
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%) anchorsearch {pop} if
} bdf
/filter_cmyk
{	
	dup type /filetype ne{
		0 () /SubFileDecode filter
	}if
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length /AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	] cvx
} bdf
/AGMUTIL_imagefile nd
/AGMUTIL_imbuf nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	dup /DataSource {AGMUTIL_imagefile AGMUTIL_imbuf readstring pop} put
	exch
	load exec
}def
/write_image_file
{
	begin
	{ (AGMUTIL_imagefile) (w+) file } stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		Adobe_AGM_Utils/AGMUTIL_imbuf Width BitsPerComponent mul 7 add 8 idiv string ddf
		1 1 Height { 
			pop
			DataSource dup type /filetype eq{
				AGMUTIL_imbuf readstring pop
			}{
				exec
			} ifelse
			AGMUTIL_imagefile exch writestring
		}for
		true
	}ifelse
	end
}def
/close_image_file
{
	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile
}def
/consumeimagedata
{
	begin
	currentdict /MultipleDataSources known not
		{/MultipleDataSources false def} if
	MultipleDataSources
		{
		1 dict begin
		/flushbuffer Width cvi string def
		1 1 Height cvi
			{
			pop
			0 1 DataSource length 1 sub
				{
				DataSource exch get
				dup type dup 
				/filetype eq
					{
					exch flushbuffer readstring pop pop
					}if
				/arraytype eq
					{
					exec pop
					}if
				}for
			}for
		end
		}
		{
		/DataSource load type dup 
		/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 div mul cvi string def
			1 1 Height { pop DataSource flushbuffer readstring pop pop} for
			end
			}if
		/arraytype eq
			{
			1 1 Height { pop DataSource pop } for
			}if
		}ifelse
	end
}bdf
/addprocs
{
     2{/exec load}repeat
     3 1 roll
     [ 5 1 roll ] bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
    currentdict 2 index known{
    	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
	    addprocs /TransferFunction xdf 
	    currentdict end def
		currentdict end sethalftone
	}{ 
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs /TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/doc_setup{
	Adobe_AGM_Utils begin
}bdf
/doc_trailer{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright (C) 1997-1999 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Core 205 dict dup begin put
/nd{
	null def
}bind def
/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_src256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen [currentscreen] cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_will_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSA_cache 0 dict def
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_pattern_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_ovp nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/knockout_unitsq nd
/AGMCORE_CRD_cache where{
	pop
}{
	/AGMCORE_CRD_cache 0 dict def
}ifelse
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer {readline} stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type /dicttype eq{
		dup /HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup /HalftoneType get 2 eq{
				/GraySpotFunction get
			}{ 
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
} def
/clp_npth
{
	clip newpath
} def
/eoclp_npth
{
	eoclip newpath
} def
/stkpath_clp_npth
{
	strokepath clip newpath
} def
/stk_n_clp_npth
{
	gsave stroke grestore clip newpath
} def
/npth_clp
{
	newpath clip
} def
/graphic_setup
{
	/AGMCORE_graphicsave save def
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[] 0 setdash
	10 setmiterlimit
	newpath
	false setoverprint
	false setstrokeadjust
	Adobe_AGM_Core/spot_alias get exec
	/Adobe_AGM_Image where {
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			get exec
		}{
			pop pop
		}ifelse
	} if
	100 dict begin
	/showpage {} def
	mark
} def
/graphic_cleanup
{
	cleartomark
	end
	AGMCORE_graphicsave restore
} def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
			
	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
		
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				} if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show
			
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}
			{
				AGMCORE_str256 exch AGMCORE_tmp exch put
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			} ifelse
		} forall
} bdf
/doc_setup{
	Adobe_AGM_Core begin
	
	/AGMCORE_will_host_separate xdf
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	
	errordict /AGM_handleerror known not{
		errordict /AGM_handleerror errordict /handleerror get put
		errordict /handleerror {
			Adobe_AGM_Core begin
			$error /newerror get AGMCORE_cur_err null ne and{
				$error /newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error /newerror true put
			end
			errordict /AGM_handleerror get exec
			} bind put
		}if
		
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if
	
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	level2 not{
		/xput{
			dup load dup length exch maxlength eq{
				dup dup load dup
				length dup 0 eq {pop 1} if 2 mul dict copy def
			}if
			load begin
				def
 			end
		}def
	}{
		/xput{
			load 3 1 roll put
		}def
	}ifelse
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 8 def
											
		/AGMCORE_&gsave /gsave ldf
		/AGMCORE_&grestore /grestore ldf
		/AGMCORE_&grestoreall /grestoreall ldf
		/AGMCORE_&save /save ldf
		/AGMCORE_gdictcopy {
			begin
			{ def } forall
			end
		}def
		/AGMCORE_gput {
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget {
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave {
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore {
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt {1 add} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
		}def
		/grestoreall {
			AGMCORE_&grestoreall
			Adobe_AGM_Core
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 
		}def
		/save {
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core begin
				/AGMCORE_gstackptr exch def
				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def
			end
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		0 1 AGMCORE_gstack length 1 sub {
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		} for
	}if
	/currentcmykcolor [0 0 0 0] AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace [/DeviceGray] AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent () AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	end
}def
/page_setup
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3 {
			3 index add neg dup 0 lt {
				pop 0
			} if
			3 1 roll
		} repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{
		pop
	}ndf
	/currentoverprint
	{
		false
	}ndf
	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{ 
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/LeaveColorUnchanged eq
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where {pop}{
		/convert_spot_to_process
		{
			dup dup (None) eq exch (All) eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor
						currentgray 0 eq
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						Adobe_AGM_Core/AGMCORE_name xddf
						false
						currentpagedevice/OverrideSeparations known
							{
							currentpagedevice/OverrideSeparations get
								{
								/HqnSpots /ProcSet resourcestatus
									{
									pop pop pop true
									}if
								}if
							}if					
							{
							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not
							}{
							gsave
							[/Separation AGMCORE_name /DeviceGray {}]setcolorspace
							false
							currentpagedevice/SeparationColorNames 2 copy known
							{
								get
								{ AGMCORE_name eq or}forall
							not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		}def
	}ifelse
	/convert_to_process where {pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
				true exch
					{
					convert_spot_to_process and
					}
				forall
				}{
				false exch
					{
					convert_spot_to_process or
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	AGMCORE_host_sep AGMCORE_will_host_separate not and {
		/AGMCORE_cur_err /AGMCORE_color_space_onhost_seps def
		AGMCORE_color_space_onhost_seps
	}if
	/AGMCORE_avoid_L2_sep_space  
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	AGMCORE_host_sep{
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			  	AGMCORE_magenta_plate{
			  		{4 3 roll pop pop pop}
			  	}{
			  		AGMCORE_yellow_plate{
			  			{4 2 roll pop pop pop}
			  		}{
			  			{4 1 roll pop pop pop}
			  		}ifelse
			  	}ifelse
			}ifelse
		def
		/clip AGMCORE_key_known not{
			Adobe_AGM_Core/AGMCORE_&clip /clip load put
			/clip
			{
				current_spot_alias{
					currentdict/InksUsed known{
						[
						InksUsed{
							dup map_alias{
								/Name get exch pop
							}if
						}forall
						]
						/InksUsed xdf
					}if
				}if
				AGMCORE_&clip
			}def
		}if
		/eoclip AGMCORE_key_known not{
			Adobe_AGM_Core/AGMCORE_&eoclip /eoclip load put
			/eoclip
			{
				current_spot_alias{
					currentdict/InksUsed known{
						[
						InksUsed{
							dup map_alias{
								/Name get exch pop
							}if
						}forall
						]
						/InksUsed xdf
					}if
				}if
				AGMCORE_&eoclip
			}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{ 
				4 {4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{ 
				Adobe_AGM_Core begin
					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf
				end
				[/Separation 4 -1 roll /DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation (All) /DeviceGray {}] setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4 {4 index mul 4 1 roll} repeat
		setcmykcolor pop
	}ndf
	
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	
	/map_index
	{
		1 index mul exch getinterval {255 div} forall
	}def
	
	level2{
		/mo /moveto ldf
		/li /lineto ldf
		/cv /curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		/level2ScreenFreq{
			begin
			60
			HalftoneType 1 eq{
				pop Frequency
			}if
			HalftoneType 2 eq{
				pop GrayFrequency
			}if
			HalftoneType 5 eq{
				pop Default level2ScreenFreq
			}if
			 end
		}def
		/currentScreenFreq{
			currenthalftone level2ScreenFreq
		}def
		level2 /setcolorspace AGMCORE_key_known not and{
		
			/AGMCORE_&&&setcolorspace /setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get dup /Separation eq
					{
						pop
						dup length array copy
						dup dup 1 get
						current_spot_alias
						{
							dup map_alias
							{
								begin
								/sep_colorspace_dict currentdict AGMCORE_gput
								pop pop	pop
									
								[ 
									/Separation Name 
									CSA map_csa
									dup /MappedCSA xdf 
									/sep_colorspace_proc load
								]
								dup Name
								end
							}if
						}if
						map_reserved_ink_name 1 exch put
					}{
						/DeviceN eq 
						{
							dup length array copy
							dup dup 1 get [ 
								exch {
									current_spot_alias{
										dup map_alias{
											/Name get exch pop
										}if
									}if
									map_reserved_ink_name
								} forall 
							] 1 exch put
						}if
					}ifelse
				}if
			}def
			/setcolorspace
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get /Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				AGMCORE_&&&setcolorspace
			}def
		}if	
	}{
		
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/currentScreenFreq{
			currentscreen pop pop
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		} def
		
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		} def
		
		/n_color_components
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop 1
			}{
				/DeviceCMYK eq{
					4
				}{
					3
				}ifelse
			}ifelse
		} def
		
		/setcolor_devicecolor
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
	
		/setcolor
		{
			currentcolorspace 0 get
			dup /DeviceGray ne{
				dup /DeviceCMYK ne{
					dup /DeviceRGB ne{
						dup /Separation eq{
							pop
							currentcolorspace 3 get exec
							currentcolorspace 2 get
						}{
							dup /Indexed eq{
								pop
								currentcolorspace 3 get dup type /stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err /AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		} def
	}ifelse
	
	/sop /setoverprint ldf
	/lw /setlinewidth ldf
	/lc /setlinecap ldf
	/lj /setlinejoin ldf
	/ml /setmiterlimit ldf
	/dsh /setdash ldf
	/sadj /setstrokeadjust ldf
	/gry /setgray ldf
	/rgb /setrgbcolor ldf
	/cmyk /setcmykcolor ldf
	/sep /setsepcolor ldf
	/idx /setindexedcolor ldf
	/colr /setcolor ldf
	/csacrd /set_csa_crd ldf
	/sepcs /setsepcolorspace ldf
	/idxcs /setindexedcolorspace ldf
	/cp /closepath ldf
	/clp /clp_npth ldf
	/eclp /eoclp_npth ldf
	/spclp /stkpath_clp_npth ldf
	/f /fill ldf
	/ef /eofill ldf
	/s /stroke ldf
	/sclp /stk_n_clp_npth ldf
	/nclp /npth_clp ldf
	/gset /graphic_setup ldf
	/gcln /graphic_cleanup ldf
	
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/doc_trailer{
}def
systemdict /findcolorrendering known{
	/findcolorrendering systemdict /findcolorrendering get def
}if
systemdict /setcolorrendering known{
	/setcolorrendering systemdict /setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/current_ink
{
	dup length 0 eq{
		pop true
	}{
		Adobe_AGM_Core/ink_result false put
		{
			dup /ProcessCyan eq{
				AGMCORE_cyan_plate ink_result or Adobe_AGM_Core/ink_result xddf
			}{
				dup /ProcessMagenta eq{
					AGMCORE_magenta_plate ink_result or Adobe_AGM_Core/ink_result xddf
				}{
					dup /ProcessYellow eq{
						AGMCORE_yellow_plate ink_result or Adobe_AGM_Core/ink_result xddf
					}{
						dup /ProcessBlack eq{
							AGMCORE_black_plate ink_result or Adobe_AGM_Core/ink_result xddf
						}{
							dup /sep_colorspace_dict AGMCORE_gget dup null eq{
								pop false ink_result or Adobe_AGM_Core/ink_result xddf
							}{
								/Name get eq{
									1 setsepcolor
									currentgray 1 ne ink_result or Adobe_AGM_Core/ink_result xddf
								}{
									false ink_result or Adobe_AGM_Core/ink_result xddf
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			pop 
		} forall
		ink_result
	}ifelse
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA map_csa setcolorspace_opt
		set_crd
	end
}
def
/setsepcolor
{ 
	
	/sep_colorspace_dict AGMCORE_gget begin
		dup /sep_tint exch AGMCORE_gput
		TintProc
	end
} def
/sep_colorspace_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2 {AGMCORE_tmp mul NComponents 1 roll} repeat
			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll
				} repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
} def
/sep_colorspace_gray_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
} def
/sep_proc_name
{
	dup 0 get 
	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{
		pop [/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
} def
/setsepcolorspace
{ 
	
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup /sep_colorspace_dict exch AGMCORE_gput
	begin
	/MappedCSA CSA map_csa def
	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf
	
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 
		] setcolorspace_opt
		/TintProc {
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get /DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc [
				Components aload pop Name findcmykcustomcolor 
				/exch cvx /setcustomcolor cvx
			] cvx bdf
		}{
 			AGMCORE_host_sep Name (All) eq and{
 				/TintProc { 
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name () eq and{
					/TintProc [
						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{
							cvx /setcmykcolor cvx
						}{
							cvx /setgray cvx
						}ifelse
					] cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc [
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get /DeviceGray eq{
								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx
							}if
							/Name cvx /findcmykcustomcolor cvx /exch cvx
							
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
							}{
								Name inRip_spot_has_ink not
							}ifelse
							{
		 						/pop cvx 1
							}if
							/setcustomcolor cvx
						] cvx bdf
 					}{ 
						/TintProc /setcolor ldf
						
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
} def
/setindexedcolorspace
{
	dup /indexed_colorspace_dict exch AGMCORE_gput
	begin
		/MappedCSA CSA map_csa def
		AGMCORE_host_sep level2 not and{
			0 0 0 0 setcmykcolor
		}{
			[/Indexed MappedCSA 
			level2 not has_color not and{
				dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{
					pop [/DeviceGray]
				}if
				HiVal GrayLookup
			}{
				HiVal 
				currentdict/RangeArray known{
					{ 
						/indexed_colorspace_dict AGMCORE_gget begin
						Lookup exch 
						dup HiVal gt{
							pop HiVal
						}if
						NComponents mul NComponents getinterval {} forall
						NComponents 1 sub -1 0{
							RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
							NComponents 1 roll
						}for
						end
					} bind
				}{
					Lookup
				}ifelse
			}ifelse
			] setcolorspace_opt
			
			set_crd
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget/Lookup get 4 3 -1 roll map_index setcmykcolor
	}{
		setcolor
	}ifelse
} def
/ignoreimagedata
{
	currentoverprint not{
		gsave 
		dup begin
		1 setgray
		0 0 ImageMatrix itransform 
		Width Height ImageMatrix idtransform rectfill 
		end
		grestore
		}if
	consumeimagedata
}def
/add_csa
{
	Adobe_AGM_Core begin
			/AGMCORE_CSA_cache xput
	end
}def
/map_csa
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get
	}if
}def
/add_csd
{
	Adobe_AGM_Core begin
		/AGMCORE_CSD_cache xput
	end
}def
/get_csd
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get
	}if
}def
/get_csd_by_name
{
	dup type dup /nametype eq exch /stringtype eq or{
		Adobe_AGM_Core begin
		/AGMCORE_CSD_Name xdf
		AGMCORE_CSD_cache
		{
			dup /Name get AGMCORE_CSD_Name eq
			{
				exch pop exit
			}{
				pop
			}ifelse
			pop
		}forall
		end
	}if
}def
/cachepattern_level2
{
	4 dict begin
	/comparebuffer exch def
	/holdbuffer exch def
	/readbuffer 1024 string def
	/LZWFilter holdbuffer /LZWEncode filter def
	{
		currentfile readbuffer readline not
			{pop exit}
		if
		dup LZWFilter exch writestring
		LZWFilter (\n) writestring
		comparebuffer eq
			{exit}
		if
	}loop
	LZWFilter closefile
	end
}def
/cachepattern_level3
{
	3 dict begin
	/comparebuffer exch def
	/readbuffer 1024 string def
	/DoEOL false def
	{ 
		DoEOL
			{
			(\n)
			/DoEOL false def
			}
			{
			currentfile readbuffer readline not
				{pop ()}
				{
				dup length 0 eq
					{ pop(\n)}
					{
					dup comparebuffer eq
						{pop ()}
						{/DoEOL true def}
					ifelse
					}
				ifelse
				}
			ifelse
			}
		ifelse
	} /ReusableStreamDecode filter
	end
}def
/add_pattern
{
	Adobe_AGM_Core begin
		/AGMCORE_pattern_cache xput
	end
}def
/get_pattern
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get
	}if
}def
/make_pattern
{
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
	makepattern
}def
/set_pattern
{
	dup /PatternType get 1 eq{
		dup /PaintType get 1 eq{
			false sop [/DeviceGray] setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{
		pop
	}{
		setcolorspace
	}ifelse
}def
/updatecolorrendering
{
	
	currentcolorrendering/Intent known{
		currentcolorrendering/Intent get
	}{
		null
	}ifelse
	
	Intent ne{
		false  
		Intent
		AGMCORE_CRD_cache {
			exch pop 
			begin
				dup Intent eq{
					currentdict setcolorrendering_opt
					end 
					exch pop true exch	
					exit
				}if
			end
		} forall
		pop
		not{
			systemdict /findcolorrendering known{
				Intent findcolorrendering pop
				/ColorRendering findresource 
				dup length dict copy
				setcolorrendering_opt
			}if
		}if
	}if
} def
/add_crd
{
	AGMCORE_CRD_cache 3 1 roll put
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/CRD known{
			AGMCORE_CRD_cache CRD get dup null ne{
				setcolorrendering_opt
			}{
				pop
			}ifelse
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
	}if
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp) flushinput
	}if
}def
/cpaint_gsep
{
	Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep) flushinput
	}if
}def
/cpaint_gend
{
	newpath
}def
/AGMCORE_ctm_stack bdict
	/push_ctm {
		stack length size le{
			stack dup length 2 mul array 
			dup /stack exch def
			copy pop
		}if
		stack size 3 -1 roll put
		/size size 1 add def
	}
	/pop_ctm {
		/size size 1 sub def
		size 0 lt{ 
			/size 0 def
		}if
		stack size get
	}
	/stack 1 array
	/size 0 
edict 
def
/save_ctm
{
	matrix currentmatrix AGMCORE_ctm_stack begin 
		push_ctm 
	end
}def
/restore_ctm
{
	AGMCORE_ctm_stack begin
		pop_ctm 
	end
	setmatrix
}def
/path_rez
{
	dup 0 ne{
		AGMCORE_deviceDPI exch div 
		dup 1 lt{
			pop 1
		}if
		setflat
	}{
		pop
	}ifelse 	
}def
/rdcmntline {
	currentfile AGMCORE_str256 readline pop
	(%) anchorsearch {pop} if
} def
/set_spot_alias_ary
{
	/AGMCORE_SpotAliasAry where{
		pop pop
	}{
		Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
		true set_spot_alias
	}ifelse
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry{
				dup/Name get AGMCORE_name eq{
					save exch
					/Adobe_AGM_Core currentdict def
					/CSD get get_csd
					exch restore
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	
	/AGMCORE_&setcustomcolor AGMCORE_key_known not {
		Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put
	} if
	/customcolor_tint 1 AGMCORE_gput
	
	Adobe_AGM_Core begin
	/setcustomcolor
	{
		
		dup /customcolor_tint exch AGMCORE_gput
		
		current_spot_alias{
			1 index 4 get map_alias{
				mark 3 1 roll
				setsepcolorspace
				counttomark 0 ne{
					setsepcolor
				}if
				pop
				pop
			}{
				AGMCORE_&setcustomcolor
			}ifelse
		}{
			AGMCORE_&setcustomcolor
		}ifelse
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd /setpagedevice load def
	/setpagedevice { get_gstate spd set_gstate } def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known{
			currentpagedevice/NegativePrint get Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						bdict /NegativePrint Adobe_AGM_Core/AGMCORE_inverting get edict setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 
		fill grestore
	}if
	end
}def
/lw_save_restore_override {
	/md where {
		pop
		md begin
		/pmSVsetup{} def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage /showpage load def}
		ifelse
		/showpage {orig_showpage gR} def
		end
	}if
}def
/pscript_showpage_override {
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage /restore load def
		/restore {exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where {
		pop
		md /initializepage known {
			md /initializepage {} put
		} if
		md /rC known {
			md /rC {4{pop}repeat} put
		} if
	}if
	
	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put
}def
/driver_check_media_override
{
	Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne
	{
		Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix
	}if
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def
	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def
	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) def
end
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.12 0
%%Copyright: Copyright 1997-2001 Adobe Systems Incorporated.  All Rights Reserved.
%%Version: 2.12 0
userdict/Adobe_CoolType_Core 60 dict dup begin put/Level2? systemdict
/languagelevel known dup{pop systemdict/languagelevel get 2 ge}if def Level2?
not{/currentglobal false def/setglobal/pop load def/gcheck{pop false}bind def
/currentpacking false def/setpacking/pop load def/SharedFontDirectory 0 dict
def}if currentpacking true setpacking/@_SaveStackLevels{Adobe_CoolType_Data
begin @opStackCountByLevel @opStackLevel 2 copy known not{2 copy 3 dict dup
/args 7 index 5 add array put put get}{get dup/args get dup length 3 index lt{
dup length 5 add array exch 1 index exch 0 exch putinterval 1 index exch/args
exch put}{pop}ifelse}ifelse begin count 2 sub 1 index lt{pop count 1 sub}if
dup/argCount exch def dup 0 gt{exch 1 index 2 add 1 roll args exch 0 exch
getinterval astore pop}{pop}ifelse count 1 sub/restCount exch def end
/@opStackLevel @opStackLevel 1 add def countdictstack 1 sub
@dictStackCountByLevel exch @dictStackLevel exch put/@dictStackLevel
@dictStackLevel 1 add def end}bind def/@_RestoreStackLevels{
Adobe_CoolType_Data begin/@opStackLevel @opStackLevel 1 sub def
@opStackCountByLevel @opStackLevel get begin count restCount sub dup 0 gt{{pop
}repeat}{pop}ifelse args 0 argCount getinterval{}forall end/@dictStackLevel
@dictStackLevel 1 sub def @dictStackCountByLevel @dictStackLevel get end
countdictstack exch sub dup 0 gt{{end}repeat}{pop}ifelse}bind def
/@_PopStackLevels{Adobe_CoolType_Data begin/@opStackLevel @opStackLevel 1 sub
def/@dictStackLevel @dictStackLevel 1 sub def end}bind def/@Raise{exch cvx
exch errordict exch get exec stop}bind def/@ReRaise{cvx $error/errorname get
errordict exch get exec stop}bind def/@Stopped{0 @#Stopped}bind def/@#Stopped{
@_SaveStackLevels stopped{@_RestoreStackLevels true}{@_PopStackLevels false}
ifelse}bind def/@Arg{Adobe_CoolType_Data begin @opStackCountByLevel
@opStackLevel 1 sub get/args get exch get end}bind def/doc_setup{
Adobe_CoolType_Core begin/mov/moveto load def/nfnt/newencodedfont load def
/mfnt/makefont load def/sfnt/setfont load def/ufnt/undefinefont load def/chp
/charpath load def/awsh/awidthshow load def/wsh/widthshow load def/ash/ashow
load def/sh/show load def end userdict/Adobe_CoolType_Data 6 dict dup begin
/AddWidths? false def/CC 0 def/charcode 2 string def/@opStackCountByLevel 32
dict def/@opStackLevel 0 def/@dictStackCountByLevel 32 dict def
/@dictStackLevel 0 def end put}bind def/doc_trailer{currentdict
Adobe_CoolType_Core eq{end}if}bind def/page_setup{Adobe_CoolType_Core begin}
bind def/page_trailer{end}bind def/unload{systemdict/languagelevel known{
systemdict/languagelevel get 2 ge{userdict/Adobe_CoolType_Core 2 copy known{
undef}{pop pop}ifelse}if}if}bind def/ndf{1 index where{pop pop pop}{dup xcheck
{bind}if def}ifelse}def/findfont dup systemdict begin userdict begin
/globaldict where{/globaldict get begin}if dup where pop exch get/globaldict
where{pop end}if end end def/systemfindfont/findfont load def/undefinefont{pop
}ndf/copyfont{currentglobal 3 1 roll 1 index gcheck setglobal dup null eq{0}{
dup length}ifelse 2 index length add 1 add dict begin exch{1 index/FID eq{pop
pop}{def}ifelse}forall dup null eq{pop}{{def}forall}ifelse currentdict end
exch setglobal}bind def/copyarray{currentglobal exch dup gcheck setglobal dup
length array copy exch setglobal}bind def/newencodedfont{currentglobal{
SharedFontDirectory 3 index known{SharedFontDirectory 3 index get
/FontReferenced known}{false}ifelse}{FontDirectory 3 index known{FontDirectory
3 index get/FontReferenced known}{SharedFontDirectory 3 index known{
SharedFontDirectory 3 index get/FontReferenced known}{false}ifelse}ifelse}
ifelse dup{3 index findfont/FontReferenced get 2 index findfont ne{pop false}
if}if{pop 1 index findfont/Encoding get exch 0 1 255{2 copy get 3 index 3 1
roll put}for pop pop pop}{findfont dup dup maxlength 2 add dict begin exch{1
index/FID ne{def}{pop pop}ifelse}forall/FontReferenced exch def/Encoding exch
dup length array copy def/FontName 1 index dup type/stringtype eq{cvn}if def
currentdict end definefont pop}ifelse}bind def/SetSubstituteStrategy{
$SubstituteFont begin dup type/dicttype ne{0 dict}if currentdict/$Strategies
known{exch $Strategies exch 2 copy known{get 2 copy maxlength exch maxlength
add dict begin{def}forall{def}forall currentdict dup/$Init known{dup/$Init get
exec}if end/$Strategy exch def}{pop pop pop}ifelse}{pop pop}ifelse end}bind
def/scff{$SubstituteFont begin dup type/stringtype eq{dup length exch}{null}
ifelse/$sname exch def/$slen exch def end{findfont}@Stopped{dup length dup 21
add string dup 4 3 roll 0 exch 128 string cvs putinterval exch 1 index exch
(_was-malformed-so-was)putinterval cvn{findfont}@Stopped{pop/Courier findfont}
if}if $SubstituteFont begin/$sname null def/$slen 0 def end}bind def
/isWidthsOnlyFont{dup/WidthsOnly known{pop pop true}{dup/FDepVector known{
/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}{dup/FDArray known{
/FDArray get{isWidthsOnlyFont dup{exit}if}forall}{pop}ifelse}ifelse}ifelse}
bind def/?set{$SubstituteFont begin/$substituteFound false def/$fontname 4
index def/$doSmartSub false def end 3 index findfont $SubstituteFont begin
$substituteFound{false}{dup/FontName known{dup/FontName get $fontname eq 1
index/DistillerFauxFont known not and/currentdistillerparams where{pop false 2
index isWidthsOnlyFont not and}if}{false}ifelse}ifelse exch pop/$doSmartSub
true def end{exch pop exch pop exch 2 dict dup/Found 3 index put exch findfont
exch}{exch exec exch findfont 2 dict dup/Downloaded 6 5 roll put}ifelse dup
/FontName 4 index put copyfont definefont pop}bind def/?str1 256 string def
/?str2 256 string def/?add{1 index type/integertype eq{exch true 4 2}{false 3
1}ifelse roll 1 index findfont dup/Widths known{Adobe_CoolType_Data/AddWidths?
true put gsave dup 1000 scalefont setfont}if/Downloaded known{exec exch{exch
?str2 cvs exch findfont/Downloaded get 1 dict begin/Downloaded 1 index def
?str1 cvs length ?str1 1 index 1 add 3 index putinterval exch length 1 add 1
index add ?str1 2 index(*)putinterval ?str1 0 2 index getinterval cvn findfont
?str1 3 index(+)putinterval 2 dict dup/FontName ?str1 0 6 index getinterval
cvn put dup/Downloaded Downloaded put end copyfont dup/FontName get exch
definefont pop pop pop}{pop}ifelse}{pop exch{findfont dup/Found get dup length
exch ?str1 cvs pop ?str1 1 index(+)putinterval ?str1 1 index 1 add 4 index
?str2 cvs putinterval ?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add
getinterval cvn 1 dict exch 1 index exch/FontName exch put copyfont dup
/FontName get exch definefont pop}{pop}ifelse}ifelse Adobe_CoolType_Data
/AddWidths? get{grestore Adobe_CoolType_Data/AddWidths? false put}if}bind def
/?sh{currentfont/Downloaded known{exch}if pop}bind def/?chp{currentfont
/Downloaded known{pop}{false chp}ifelse}bind def/?mv{currentfont/Downloaded
known{moveto pop pop}{pop pop moveto}ifelse}bind def setpacking userdict
/$SubstituteFont 25 dict put 1 dict begin/SubstituteFont dup $error exch 2
copy known{get}{pop pop{pop/Courier}bind}ifelse def/currentdistillerparams
where dup{pop pop currentdistillerparams/CannotEmbedFontPolicy 2 copy known{
get/Error eq}{pop pop false}ifelse}if not{countdictstack array dictstack 0 get
begin userdict begin $SubstituteFont begin/$str 128 string def/$fontpat 128
string def/$slen 0 def/$sname null def/$match false def/$fontname null def
/$substituteFound false def/$doSmartSub true def/$depth 0 def/$fontname null
def/$italicangle 26.5 def/$dstack null def/$Strategies 10 dict dup begin
/$Type3Underprint{currentglobal exch false setglobal 11 dict begin/UseFont
exch $WMode 0 ne{dup length dict copy dup/WMode $WMode put/UseFont exch
definefont}if def/FontName $fontname dup type/stringtype eq{cvn}if def
/FontType 3 def/FontMatrix[.001 0 0 .001 0 0]def/Encoding 256 array dup 0 1
255{/.notdef put dup}for pop def/FontBBox[0 0 0 0]def/CCInfo 7 dict dup begin
/cc null def/x 0 def/y 0 def end def/BuildChar{exch begin CCInfo begin 1
string dup 0 3 index put exch pop/cc exch def UseFont 1000 scalefont setfont
cc stringwidth/y exch def/x exch def x y setcharwidth $SubstituteFont
/$Strategy get/$Underprint get exec 0 0 moveto cc show x y moveto end end}bind
def currentdict end exch setglobal}bind def/$GetaTint 2 dict dup begin
/$BuildFont{dup/WMode known{dup/WMode get}{0}ifelse/$WMode exch def $fontname
exch dup/FontName known{dup/FontName get dup type/stringtype eq{cvn}if}{
/unnamedfont}ifelse exch $deepcopyfont exch 1 index exch/FontBasedOn exch put
dup/FontName $fontname dup type/stringtype eq{cvn}if put definefont}bind def
/$Underprint{gsave x abs y abs gt{/y 1000 def}{/x -1000 def 500 120 translate}
ifelse Level2?{[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]setcolorspace}{0
setgray}ifelse 10 setlinewidth x .8 mul[7 3]{y mul 8 div 120 sub x 10 div exch
moveto 0 y 4 div neg rlineto dup 0 rlineto 0 y 4 div rlineto closepath gsave
Level2?{.2 setcolor}{.8 setgray}ifelse fill grestore stroke}forall pop
grestore}bind def end def/$Oblique 1 dict dup begin/$BuildFont{currentglobal
exch dup gcheck setglobal null copyfont begin/FontBasedOn currentdict/FontName
known{FontName dup type/stringtype eq{cvn}if}{/unnamedfont}ifelse def/FontName
$fontname dup type/stringtype eq{cvn}if def/currentdistillerparams where{pop}{
/FontInfo currentdict/FontInfo known{FontInfo null copyfont}{2 dict}ifelse dup
begin/ItalicAngle $italicangle def/FontMatrix FontMatrix[1 0 ItalicAngle dup
sin exch cos div 1 0 0]matrix concatmatrix readonly end 4 2 roll def def}
ifelse FontName currentdict end definefont exch setglobal}bind def end def
/$None 1 dict dup begin/$BuildFont{}bind def end def end def/$Oblique
SetSubstituteStrategy/$findfontByEnum{dup type/stringtype eq{cvn}if dup
/$fontname exch def $sname null eq{$str cvs dup length $slen sub $slen
getinterval}{pop $sname}ifelse $fontpat dup 0(fonts/*)putinterval exch 7 exch
putinterval/$match false def $SubstituteFont/$dstack countdictstack array
dictstack put mark{$fontpat 0 $slen 7 add getinterval{/$match exch def exit}
$str filenameforall}stopped{cleardictstack currentdict true $SubstituteFont
/$dstack get{exch{1 index eq{pop false}{true}ifelse}{begin false}ifelse}forall
pop}if cleartomark/$slen 0 def $match false ne{$match(fonts/)anchorsearch pop
pop cvn}{/Courier}ifelse}bind def/$ROS 1 dict dup begin/Adobe 4 dict dup begin
/Japan1[/Ryumin-Light/HeiseiMin-W3/GothicBBB-Medium/HeiseiKakuGo-W5
/HeiseiMaruGo-W4/Jun101-Light]def/Korea1[/HYSMyeongJo-Medium/HYGoThic-Medium]
def/GB1[/STSong-Light/STHeiti-Regular]def/CNS1[/MKai-Medium/MHei-Medium]def
end def end def/$cmapname null def/$deepcopyfont{dup/FontType get 0 eq{1 dict
dup/FontName/copied put copyfont begin/FDepVector FDepVector copyarray 0 1 2
index length 1 sub{2 copy get $deepcopyfont dup/FontName/copied put/copied
exch definefont 3 copy put pop pop}for def currentdict end}{$Strategies
/$Type3Underprint get exec}ifelse}bind def/$buildfontname{length $str 1 index
(-)putinterval 1 add $str 1 index $cmapname $fontpat cvs putinterval $cmapname
length add $str exch 0 exch getinterval cvn}bind def/$findfontByROS{/$fontname
exch def $ROS Registry 2 copy known{get Ordering 2 copy known{get}{pop pop[]}
ifelse}{pop pop[]}ifelse false exch{dup/CIDFont resourcestatus{pop pop save 1
index/CIDFont findresource dup/WidthsOnly known{dup/WidthsOnly get}{false}
ifelse exch pop exch restore{pop}{exch pop true exit}ifelse}{pop}ifelse}forall
{$str cvs $buildfontname}{false(*){save exch dup/CIDFont findresource dup
/WidthsOnly known{dup/WidthsOnly get not}{true}ifelse exch/CIDSystemInfo get
dup/Registry get Registry eq exch/Ordering get Ordering eq and and{exch
restore exch pop true exit}{pop restore}ifelse}$str/CIDFont resourceforall{
$buildfontname}{$fontname $findfontByEnum}ifelse}ifelse}bind def end end
currentdict/$error known currentdict/languagelevel known and dup{pop $error
/SubstituteFont known}if dup{$error}{Adobe_CoolType_Core}ifelse begin{
/SubstituteFont/CMap/Category resourcestatus{pop pop{$SubstituteFont begin
/$substituteFound true def dup length $slen gt $sname null ne or $slen 0 gt
and{$sname null eq{dup $str cvs dup length $slen sub $slen getinterval cvn}{
$sname}ifelse dup/CMap resourcestatus{pop pop dup/$cmapname exch def/CMap
findresource/CIDSystemInfo get{def}forall $findfontByROS}{128 string cvs dup
(-)search{3 1 roll search{3 1 roll pop{dup cvi}stopped{pop pop pop pop pop
$findfontByEnum}{4 2 roll pop pop exch length exch 2 index length 2 index sub
exch 1 sub -1 0{$str cvs dup length 4 index 0 4 index 4 3 roll add getinterval
exch 1 index exch 3 index exch putinterval dup/CMap resourcestatus{pop pop 4 1
roll pop pop pop dup/$cmapname exch def/CMap findresource/CIDSystemInfo get{
def}forall $findfontByROS true exit}{pop}ifelse}for dup type/booleantype eq{
pop}{pop pop $findfontByEnum}ifelse}ifelse}{pop pop pop $findfontByEnum}ifelse
}{pop pop $findfontByEnum}ifelse}ifelse}{//SubstituteFont exec}ifelse/$slen 0
def end}}{{$SubstituteFont begin/$substituteFound true def dup length $slen gt
$sname null ne or $slen 0 gt and{$findfontByEnum}{//SubstituteFont exec}ifelse
end}}ifelse bind readonly def Adobe_CoolType_Core/scfindfont/systemfindfont
load put}{/scfindfont{$SubstituteFont begin dup systemfindfont dup/FontName
known{dup/FontName get dup 3 index ne}{/noname true}ifelse dup{
/$origfontnamefound 2 index def/$origfontname 4 index def/$substituteFound
true def}if exch pop{$slen 0 gt $sname null ne 3 index length $slen gt or and{
pop dup $findfontByEnum findfont dup maxlength 1 add dict begin{1 index/FID eq
{pop pop}{def}ifelse}forall currentdict end definefont dup/FontName known{dup
/FontName get}{null}ifelse $origfontnamefound ne{$origfontname $str cvs print
( substitution revised, using )print dup/FontName known{dup/FontName get}{
(unspecified font)}ifelse $str cvs print(.
)print}if}{exch pop}ifelse}{exch pop}ifelse end}bind def}ifelse end end
Adobe_CoolType_Core/findfont{$SubstituteFont begin $depth 0 eq{/$fontname 1
index dup type/stringtype ne{$str cvs}if def/$substituteFound false def}if
/$depth $depth 1 add def end scfindfont $SubstituteFont begin/$depth $depth 1
sub def $substituteFound $depth 0 eq and $doSmartSub and{currentdict/$Strategy
known{$Strategy/$BuildFont get exec}if}if end}bind put}if end end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.13 0
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated.
%%Version: 1.13 0
systemdict/languagelevel known dup{currentglobal false setglobal}{false}ifelse
exch userdict/Adobe_CoolType_Utility 2 copy known{2 copy get dup maxlength 25
add dict copy}{25 dict}ifelse put Adobe_CoolType_Utility begin/ct_Level2? exch
def/ct_Clone? 1183615869 internaldict dup/CCRun known not exch/eCCRun known
not ct_Level2? and or def/ct_UseNativeCapability? systemdict/composefont known
def/ct_MakeOCF 35 dict def/ct_Vars 25 dict def/ct_GlyphDirProcs 6 dict def
/ct_BuildCharDict 15 dict dup begin/charcode 2 string def/dst_string 1500
string def/nullstring()def/usewidths? true def end def ct_Level2?{setglobal}{
pop}ifelse ct_GlyphDirProcs begin/GetGlyphDirectory{systemdict/languagelevel
known{pop/CIDFont findresource/GlyphDirectory get}{1 index/CIDFont
findresource/GlyphDirectory get dup type/dicttype eq{dup dup maxlength exch
length sub 2 index lt{dup length 2 index add dict copy 2 index/CIDFont
findresource/GlyphDirectory 2 index put}if}if exch pop exch pop}ifelse +}def/+
{systemdict/languagelevel known{currentglobal false setglobal 3 dict begin/vm
exch def}{1 dict begin}ifelse/$ exch def systemdict/languagelevel known{vm
setglobal/gvm currentglobal def $ gcheck setglobal}if ?{$ begin}if}def/?{$
type/dicttype eq}def/|{userdict/Adobe_CoolType_Data known{Adobe_CoolType_Data
/AddWidths? known{currentdict Adobe_CoolType_Data begin begin AddWidths?{
Adobe_CoolType_Data/CC 3 index put ?{def}{$ 3 1 roll put}ifelse CC charcode
exch 1 index 0 2 index 256 idiv put 1 index exch 1 exch 256 mod put
stringwidth 2 array astore currentfont/Widths get exch CC exch put}{?{def}{$ 3
1 roll put}ifelse}ifelse end end}{?{def}{$ 3 1 roll put}ifelse}ifelse}{?{def}{
$ 3 1 roll put}ifelse}ifelse}def/!{?{end}if systemdict/languagelevel known{gvm
setglobal}if end}def/:{string currentfile exch readstring pop}executeonly def
end ct_MakeOCF begin/ct_cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09
/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C
/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F
/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42
/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55
/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68
/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B
/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E
/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1
/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4
/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7
/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA
/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED
/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_CID_STR_SIZE 8000 def/ct_mkocfStr100 100 string def/ct_defaultFontMtx[.001
0 0 .001 0 0]def/ct_1000Mtx[1000 0 0 1000 0 0]def/ct_raise{exch cvx exch
errordict exch get exec stop}bind def/ct_reraise{cvx $error/errorname get
(Error: )print dup(                    )cvs print errordict exch get exec stop
}bind def/ct_cvnsi{1 index add 1 sub 1 exch 0 4 1 roll{2 index exch get exch 8
bitshift add}for exch pop}bind def/ct_GetInterval{Adobe_CoolType_Utility
/ct_BuildCharDict get begin/dst_index 0 def dup dst_string length gt{dup
string/dst_string exch def}if 1 index ct_CID_STR_SIZE idiv/arrayIndex exch def
2 index arrayIndex get 2 index arrayIndex ct_CID_STR_SIZE mul sub{dup 3 index
add 2 index length le{2 index getinterval dst_string dst_index 2 index
putinterval length dst_index add/dst_index exch def exit}{1 index length 1
index sub dup 4 1 roll getinterval dst_string dst_index 2 index putinterval
pop dup dst_index add/dst_index exch def sub/arrayIndex arrayIndex 1 add def 2
index dup length arrayIndex gt{arrayIndex get}{pop exit}ifelse 0}ifelse}loop
pop pop pop dst_string 0 dst_index getinterval end}bind def ct_Level2?{
/ct_resourcestatus currentglobal mark true setglobal{/unknowninstancename
/Category resourcestatus}stopped{cleartomark setglobal true}{cleartomark
currentglobal not exch setglobal}ifelse{{mark 3 1 roll/Category findresource
begin ct_Vars/vm currentglobal put({ResourceStatus} stopped)0()/SubFileDecode
filter cvx exec{cleartomark false}{{3 2 roll pop true}{cleartomark false}
ifelse}ifelse ct_Vars/vm get setglobal end}}{{resourcestatus}}ifelse bind def
/CIDFont/Category ct_resourcestatus{pop pop}{currentglobal true setglobal
/Generic/Category findresource dup length dict copy dup/InstanceType/dicttype
put/CIDFont exch/Category defineresource pop setglobal}ifelse
ct_UseNativeCapability?{/CIDInit/ProcSet findresource begin 12 dict begin
begincmap/CIDSystemInfo 3 dict dup begin/Registry(Adobe)def/Ordering(Identity)
def/Supplement 0 def end def/CMapName/Identity-H def/CMapVersion 1 def
/CMapType 1 def 1 begincodespacerange<0000><ffff>endcodespacerange 1
begincidrange<0000><ffff>0 endcidrange endcmap CMapName currentdict/CMap
defineresource pop end end}if}{/ct_Category 2 dict begin/CIDFont 10 dict def
/ProcSet 2 dict def currentdict end def/defineresource{ct_Category 1 index 2
copy known{get dup dup maxlength exch length eq{dup length 10 add dict copy
ct_Category 2 index 2 index put}if 3 index 3 index put pop exch pop}{pop pop
/defineresource/undefined ct_raise}ifelse}bind def/findresource{ct_Category 1
index 2 copy known{get 2 index 2 copy known{get 3 1 roll pop pop}{pop pop
/findresource/undefinedresource ct_raise}ifelse}{pop pop/findresource
/undefined ct_raise}ifelse}bind def/resourcestatus{ct_Category 1 index 2 copy
known{get 2 index known exch pop exch pop{0 -1 true}{false}ifelse}{pop pop
/findresource/undefined ct_raise}ifelse}bind def/ct_resourcestatus
/resourcestatus load def}ifelse/ct_CIDInit 2 dict begin/ct_cidfont_stream_init
{{dup(Binary)eq{pop null currentfile ct_Level2?{{cid_BYTE_COUNT()
/SubFileDecode filter}stopped{pop pop pop}if}if/readstring load exit}if dup
(Hex)eq{pop currentfile ct_Level2?{{null exch/ASCIIHexDecode filter/readstring
}stopped{pop exch pop(>)exch/readhexstring}if}{(>)exch/readhexstring}ifelse
load exit}if/StartData/typecheck ct_raise}loop cid_BYTE_COUNT ct_CID_STR_SIZE
le{2 copy cid_BYTE_COUNT string exch exec pop 1 array dup 3 -1 roll 0 exch put
}{cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi dup array exch 2 sub 0 exch 1
exch{2 copy 5 index ct_CID_STR_SIZE string 6 index exec pop put pop}for 2
index cid_BYTE_COUNT ct_CID_STR_SIZE mod string 3 index exec pop 1 index exch
1 index length 1 sub exch put}ifelse cid_CIDFONT exch/GlyphData exch put 2
index null eq{pop pop pop}{pop/readstring load 1 string exch{3 copy exec pop
dup length 0 eq{pop pop pop pop pop true exit}if 4 index eq{pop pop pop pop
false exit}if}loop pop}ifelse}bind def/StartData{mark{currentdict dup/FDArray
get 0 get/FontMatrix get 0 get .001 eq{dup/CDevProc known not{/CDevProc
1183615869 internaldict/stdCDevProc 2 copy known{get}{pop pop{pop pop pop pop
pop 0 -1000 7 index 2 div 880}}ifelse def}if}{/CDevProc{pop pop pop pop pop 0
1 cid_temp/cid_CIDFONT get/FDArray get 0 get/FontMatrix get 0 get div 7 index
2 div 1 index .88 mul}def}ifelse/cid_temp 15 dict def cid_temp begin
/cid_CIDFONT exch def 3 copy pop dup/cid_BYTE_COUNT exch def 0 gt{
ct_cidfont_stream_init FDArray{/Private get dup/SubrMapOffset known{begin
/Subrs SubrCount array def Subrs SubrMapOffset SubrCount SDBytes ct_Level2?{
currentdict dup/SubrMapOffset undef dup/SubrCount undef/SDBytes undef}if end
/cid_SD_BYTES exch def/cid_SUBR_COUNT exch def/cid_SUBR_MAP_OFFSET exch def
/cid_SUBRS exch def cid_SUBR_COUNT 0 gt{GlyphData cid_SUBR_MAP_OFFSET
cid_SD_BYTES ct_GetInterval 0 cid_SD_BYTES ct_cvnsi 0 1 cid_SUBR_COUNT 1 sub{
exch 1 index 1 add cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add GlyphData exch
cid_SD_BYTES ct_GetInterval 0 cid_SD_BYTES ct_cvnsi cid_SUBRS 4 2 roll
GlyphData exch 4 index 1 index sub ct_GetInterval dup length string copy put}
for pop}if}{pop}ifelse}forall}if cleartomark pop pop end CIDFontName
currentdict/CIDFont defineresource pop end end}stopped{cleartomark/StartData
ct_reraise}if}bind def currentdict end def/ct_saveCIDInit{/CIDInit/ProcSet
ct_resourcestatus{true}{/CIDInitC/ProcSet ct_resourcestatus}ifelse{pop pop
/CIDInit/ProcSet findresource ct_UseNativeCapability?{pop null}{/CIDInit
ct_CIDInit/ProcSet defineresource pop}ifelse}{/CIDInit ct_CIDInit/ProcSet
defineresource pop null}ifelse ct_Vars exch/ct_oldCIDInit exch put}bind def
/ct_restoreCIDInit{ct_Vars/ct_oldCIDInit get dup null ne{/CIDInit exch/ProcSet
defineresource pop}{pop}ifelse}bind def/ct_BuildCharSetUp{1 index begin
CIDFont begin Adobe_CoolType_Utility/ct_BuildCharDict get begin/ct_dfCharCode
exch def/ct_dfDict exch def CIDFirstByte ct_dfCharCode add dup CIDCount ge{pop
0}if/cid exch def{GlyphDirectory cid 2 copy known{get}{pop pop nullstring}
ifelse dup length FDBytes sub 0 gt{dup FDBytes 0 ne{0 FDBytes ct_cvnsi}{pop 0}
ifelse/fdIndex exch def dup length FDBytes sub FDBytes exch getinterval
/charstring exch def exit}{pop cid 0 eq{/charstring nullstring def exit}if/cid
0 def}ifelse}loop}def/ct_SetCacheDevice{0 0 moveto dup stringwidth 3 -1 roll
true charpath pathbbox 0 -1000 7 index 2 div 880 setcachedevice2 0 0 moveto}
def/ct_CloneSetCacheProc{1 eq{stringwidth pop -2 div -880 0 -1000 setcharwidth
moveto}{usewidths?{currentfont/Widths get cid 2 copy known{get exch pop aload
pop}{pop pop stringwidth}ifelse}{stringwidth}ifelse setcharwidth 0 0 moveto}
ifelse}def/ct_Type3ShowCharString{ct_FDDict fdIndex 2 copy known{get}{
currentglobal 3 1 roll 1 index gcheck setglobal ct_Type1FontTemplate dup
maxlength dict copy begin FDArray fdIndex get dup/FontMatrix 2 copy known{get}
{pop pop ct_defaultFontMtx}ifelse/FontMatrix exch dup length array copy def
/Private get/Private exch def/Widths rootfont/Widths get def/CharStrings 1
dict dup/.notdef<d841272cf18f54fc13>dup length string copy put def currentdict
end/ct_Type1Font exch definefont dup 5 1 roll put setglobal}ifelse dup
/CharStrings get 1 index/Encoding get ct_dfCharCode get charstring put
rootfont/WMode 2 copy known{get}{pop pop 0}ifelse exch 1000 scalefont setfont
ct_str1 0 ct_dfCharCode put ct_str1 exch ct_dfSetCacheProc ct_SyntheticBold{
currentpoint ct_str1 show newpath moveto ct_str1 true charpath ct_StrokeWidth
setlinewidth stroke}{ct_str1 show}ifelse}def/ct_Type4ShowCharString{ct_dfDict
ct_dfCharCode charstring FDArray fdIndex get dup/FontMatrix get dup
ct_defaultFontMtx ct_matrixeq not{ct_1000Mtx matrix concatmatrix concat}{pop}
ifelse/Private get Adobe_CoolType_Utility/ct_Level2? get not{ct_dfDict/Private
3 -1 roll{put}1183615869 internaldict/superexec get exec}if 1183615869
internaldict Adobe_CoolType_Utility/ct_Level2? get{1 index}{3 index/Private
get mark 6 1 roll}ifelse dup/RunInt known{/RunInt get}{pop/CCRun}ifelse get
exec Adobe_CoolType_Utility/ct_Level2? get not{cleartomark}if}bind def
/ct_BuildCharIncremental{{Adobe_CoolType_Utility/ct_MakeOCF get begin
ct_BuildCharSetUp ct_ShowCharString}stopped{stop}if end end end end}bind def
/BaseFontNameStr(BF00)def/ct_Type1FontTemplate 14 dict begin/FontType 1 def
/FontMatrix[.001 0 0 .001 0 0]def/FontBBox[-250 -250 1250 1250]def/Encoding
ct_cHexEncoding def/PaintType 0 def currentdict end def/BaseFontTemplate 11
dict begin/FontMatrix[.001 0 0 .001 0 0]def/FontBBox[-250 -250 1250 1250]def
/Encoding ct_cHexEncoding def/BuildChar/ct_BuildCharIncremental load def
ct_Clone?{/FontType 3 def/ct_ShowCharString/ct_Type3ShowCharString load def
/ct_dfSetCacheProc/ct_CloneSetCacheProc load def/ct_SyntheticBold false def
/ct_StrokeWidth 1 def}{/FontType 4 def/Private 1 dict dup/lenIV 4 put def
/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def/PaintType 0 def
/ct_ShowCharString/ct_Type4ShowCharString load def}ifelse/ct_str1 1 string def
currentdict end def/BaseFontDictSize BaseFontTemplate length 5 add def
/ct_matrixeq{true 0 1 5{dup 4 index exch get exch 3 index exch get eq and dup
not{exit}if}for exch pop exch pop}bind def/ct_makeocf{15 dict begin exch/WMode
exch def exch/FontName exch def/FontType 0 def/FMapType 2 def/FontMatrix
matrix def/bfCount 1 index/CIDCount get 256 idiv 1 add dup 256 gt{pop 256}if
def/Encoding 256 array 0 1 bfCount 1 sub{2 copy dup put pop}for bfCount 1 255{
2 copy bfCount put pop}for def/FDepVector bfCount dup 256 lt{1 add}if array
def BaseFontTemplate BaseFontDictSize dict copy begin/CIDFont exch def CIDFont
/FontBBox known{CIDFont/FontBBox get/FontBBox exch def}if CIDFont/CDevProc
known{CIDFont/CDevProc get/CDevProc exch def}if currentdict end
BaseFontNameStr 3(0)putinterval 0 1 bfCount dup 256 eq{1 sub}if{FDepVector
exch 2 index BaseFontDictSize dict copy begin dup/CIDFirstByte exch 256 mul
def FontType 3 eq{/ct_FDDict 2 dict def}if currentdict end 1 index 16
BaseFontNameStr 2 2 getinterval cvrs pop BaseFontNameStr exch definefont put}
for ct_Clone?{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
if FontName currentdict end definefont ct_Clone?{gsave dup 1000 scalefont
setfont ct_BuildCharDict begin/usewidths? false def currentfont/Widths get
begin exch/CIDFont get/GlyphDirectory get{pop dup charcode exch 1 index 0 2
index 256 idiv put 1 index exch 1 exch 256 mod put stringwidth 2 array astore
def}forall end/usewidths? true def end grestore}{exch pop}ifelse}bind def
/ct_ComposeFont{ct_UseNativeCapability?{2 index/CMap ct_resourcestatus{pop pop
exch pop}{/CIDInit/ProcSet findresource begin 12 dict begin begincmap/CMapName
3 index def/CMapVersion 1 def/CMapType 1 def exch/WMode exch def/CIDSystemInfo
3 dict dup begin/Registry(Adobe)def/Ordering CMapName ct_mkocfStr100 cvs
(Adobe-)search{pop pop(-)search{dup length string copy exch pop exch pop}{pop
(Identity)}ifelse}{pop(Identity)}ifelse def/Supplement 0 def end def 1
begincodespacerange<0000><ffff>endcodespacerange 1 begincidrange<0000><ffff>0
endcidrange endcmap CMapName currentdict/CMap defineresource pop end end}
ifelse composefont}{3 2 roll pop 0 get/CIDFont findresource ct_makeocf}ifelse}
bind def/ct_MakeIdentity{ct_UseNativeCapability?{1 index/CMap
ct_resourcestatus{pop pop}{/CIDInit/ProcSet findresource begin 12 dict begin
begincmap/CMapName 2 index def/CMapVersion 1 def/CMapType 1 def/CIDSystemInfo
3 dict dup begin/Registry(Adobe)def/Ordering CMapName ct_mkocfStr100 cvs
(Adobe-)search{pop pop(-)search{dup length string copy exch pop exch pop}{pop
(Identity)}ifelse}{pop(Identity)}ifelse def/Supplement 0 def end def 1
begincodespacerange<0000><ffff>endcodespacerange 1 begincidrange<0000><ffff>0
endcidrange endcmap CMapName currentdict/CMap defineresource pop end end}
ifelse composefont}{exch pop 0 get/CIDFont findresource ct_makeocf}ifelse}bind
def currentdict readonly pop end end
%%EndResource
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2000 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Image 65 dict dup begin put
/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
%%don't initialize AGMIMG_&customcolorimage, it wrecks havoc in a nested environment
%%AGMIMG_ccimage_exists not {/AGMIMG_&customcolorimage nd} if 
/AGMIMG_&imagemask nd
/AGMIMG_mbuf () def
/AGMIMG_ybuf () def
/AGMIMG_kbuf () def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/idximg nd
/doc_setup
{ 
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage /colorimage ldf
	}if
	end
	end
}def
/page_setup
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists {/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				 }ifelse
			 }ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode [ Decode 1 get Decode 0 get] def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode [1 1] def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub} currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{ pop 1 } currenttransfer addprocs settransfer
		}def
	}ifelse
	/img /imageormask ldf
	/sepimg /sep_imageormask ldf
	/idximg /indexed_imageormask ldf
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/doc_trailer
{
}def
/imageormask_sys
{
	begin
		save mark
		level2{
			currentdict
			Operator /imagemask eq{
				AGMIMG_&imagemask
			}{
				AGMIMG_&image
			}ifelse
		}{
			Width Height
			Operator /imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix /DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix /DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get
		dup /DeviceGray eq{
			pop AGMCORE_black_plate not
		}{
			/DeviceCMYK eq{
				AGMCORE_is_cmyk_sep not
			}if
		}ifelse
	}{
		false
	}ifelse
}def
/imageormask
{
	begin
		SkipImageProc not{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator /imagemask eq{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{
						[/Separation /Black /DeviceGray {}] setcolorspace
						/Decode [ Decode 1 get Decode 0 get ] def
					}if
					image
				}ifelse
			}{
				Width Height
				Operator /imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix /DataSource load
					AGMCORE_host_sep{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
  	 						currentoverprint not{
  			 					1 AGMCORE_&setgray
  	 							knockout_image_samples
  			 					currentdict imageormask_sys
  			 				}{
  			 					currentdict ignoreimagedata
  			 				}ifelse
				 		}ifelse
					}{
						imagemask
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator /colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								MultipleDataSources{
									4 {pop} repeat
									/DataSource [
										DataSource 0 get /exec cvx
										DataSource 1 get /exec cvx
										DataSource 2 get /exec cvx
										DataSource 3 get /exec cvx
										/AGMCORE_get_ink_data cvx
									] cvx def
								}{
									/DataSource /DataSource load filter_cmyk 0 () /SubFileDecode filter def
								}ifelse
	
								/Decode [ Decode 0 get Decode 1 get ] def
								/MultipleDataSources false def
								/NComponents 1 def
								/Operator /image def
								AGMCORE_is_cmyk_sep{
									currentoverprint InksUsed current_ink not and{
										currentdict consumeimagedata
									}{
										invert_image_samples
						 				1 AGMCORE_&setgray
										currentdict imageormask_sys
									}ifelse
								}{
										currentdict ignoreimagedata
								}ifelse
							}{
									
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator /image eq{
							AGMCORE_host_sep{
								/DoImage true def
								HostSepColorImage{
									invert_image_samples
								}{
									AGMCORE_black_plate not{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}ifelse
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys} if
							}{
								image
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentoverprint InksUsed current_ink not and{
								}{
									currentcolorspace overprint_plate not{
										knockout_unitsq
									}if
								}ifelse
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	/MappedCSA CSA map_csa def
	begin
	SkipImageProc not{
		save mark 
	
		AGMCORE_avoid_L2_sep_space{
			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get /DeviceCMYK eq and
		currentdict/Components known and 
		Name () ne and 
		Name (All) ne and 
		Operator /image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load /exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			} /exec cvx
			] cvx bind
			MappedCSA 0 get /DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{ 
					currentdict
					Operator /imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentoverprint InksUsed current_ink not and{
						}{
							currentdict/ImageMatrix get concat
							knockout_unitsq
						}ifelse
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name (All) ne and{
 								level2{
	 								[ /Separation Name [/DeviceGray]
	 								{ 
	 									sep_colorspace_proc AGMCORE_get_ink_data
										1 exch sub
	 								} bind
									] AGMCORE_&setcolorspace
									/sep_tint AGMCORE_gget AGMCORE_&setcolor
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator /imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
							currentdict consumeimagedata 
 							currentoverprint not Name (All) eq or{
								gsave 
								knockout_unitsq
								grestore
		 					}if
 						}ifelse
		 			}ifelse
 				}{
					currentcolorspace 0 get /Separation ne{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentoverprint 
					MappedCSA 0 get /DeviceCMYK eq and 
					Name inRip_spot_has_ink not and 
					Name (All) ne and {
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}if
	end
	end
}def
/imageormask_l2_overprint
{
	
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{ 			
			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN [
				AGMIMG_c 0 ne {/Cyan} if
				AGMIMG_m 0 ne {/Magenta} if
				AGMIMG_y 0 ne {/Yellow} if
				AGMIMG_k 0 ne {/Black} if
				] /DeviceCMYK {}] setcolorspace
				
				AGMIMG_c 0 ne {AGMIMG_c} if
				AGMIMG_m 0 ne {AGMIMG_m} if
				AGMIMG_y 0 ne {AGMIMG_y} if
				AGMIMG_k 0 ne {AGMIMG_k} if
				setcolor			
			}{	
				/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
				[/Indexed 				
					[
						/DeviceN [
							AGMIMG_c 0 ne {/Cyan} if
							AGMIMG_m 0 ne {/Magenta} if
							AGMIMG_y 0 ne {/Yellow} if
							AGMIMG_k 0 ne {/Black} if
						] 
						/DeviceCMYK {
							AGMIMG_k 0 eq {0} if
							AGMIMG_y 0 eq {0 exch} if
							AGMIMG_m 0 eq {0 3 1 roll} if
							AGMIMG_c 0 eq {0 4 1 roll} if						
						}
					]
					255
					{
						255 div 
		
						mark exch
						dup	dup dup
		
						
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
							
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
		
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
							
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				] setcolorspace
			}ifelse
			
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation /Black /DeviceGray {}] setcolorspace
			gsave
			/Black
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Yellow /DeviceGray {}] setcolorspace
			gsave
			/Yellow
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Magenta /DeviceGray {}] setcolorspace
			gsave
			/Magenta
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Cyan /DeviceGray {}] setcolorspace
			gsave
			/Cyan 
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		} if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
} def
/indexed_imageormask
{
	begin
		save mark 
	
 		currentdict
 		AGMCORE_host_sep{
 			
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget /CSA get map_csa overprint_plate not{
					knockout_unitsq
				}if
			}{
	 			AGMCORE_is_cmyk_sep{
					Operator /imagemask eq{
						imageormask_sys
					}{
						level2{
							indexed_image_lev2_sep
						}{
							indexed_image_lev1_sep
						}ifelse
					}ifelse
				}{
					currentoverprint not{
						knockout_image_samples
		 				imageormask_sys
		 			}{
		 				currentdict consumeimagedata
		 			}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				imageormask
			}{ 
				Operator /imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		
		currentcolorspace 
		dup 1 /DeviceGray put
		dup 3 [
			currentcolorspace 3 get 
			{
				exch 4 mul 4 getinterval {} forall
				AGMCORE_get_ink_data 255 div 1 exch sub
			} /exec cvx
		] cvx put
		setcolorspace
		
		currentdict 
		Operator /imagemask eq{
			AGMIMG_&imagemask
		}{
			AGMIMG_&image
		}ifelse
			
	end end
}def
/OPIimage
{
	dup type /dicttype ne{
		10 dict begin
			/DataSource xdf
			/ImageMatrix xdf
			/BitsPerComponent xdf
			/Height xdf
			/Width xdf
			/ImageType 1 def
			/Decode [0 1 def]
			currentdict
		end
	}if
	dup begin
		/NComponents 1 cdndf
		/MultipleDataSources false cdndf
		/SkipImageProc {false} cdndf
		/HostSepColorImage false cdndf
		/Decode [
				0 
				currentcolorspace 0 get /Indexed eq{
					2 BitsPerComponent exp 1 sub
				}{
					1
				}ifelse
		] cdndf
		/Operator /image cdndf
	end
	/sep_colorspace_dict AGMCORE_gget null eq{
		imageormask
	}{
		gsave
		dup begin invert_image_samples end
		sep_imageormask
		grestore
	}ifelse
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type /dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode [/customcolor_tint AGMCORE_gget 0] def
				/Operator /image def
				/HostSepColorImage false def
				/InksUsed [] def
				/SkipImageProc {false} def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		bdict
			/Name AGMIMG_colorAry 4 get
			/CSA [ /DeviceCMYK ] 
			/TintMethod /Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components [ AGMIMG_colorAry aload pop pop ] 
		edict
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		dup 4 get map_alias{
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					} if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage	
		end
	} def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				
				{
					255 mul round cvi GrayLookup exch get
				} currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get /DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
						
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer
						currentdict imageormask
					}{ 
						
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					
					MappedCSA 0 get /DeviceGray eq {
						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get /DeviceCMYK eq {
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{ 
							currentcolortransfer
							{pop 1} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
					
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{ 
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			
			currentdict imageormask_sys
				
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				
				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer
				imageormask
			}{
				
				MappedCSA 0 get /DeviceGray eq {
					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get /DeviceCMYK eq {
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{ 
						currentcolortransfer
						{pop 1} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 	   Lookup exch get HiVal div} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			
			currentdict imageormask_sys
				
		end end
	}def
}if
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%ADOBeginClientInjection: DocumentProlog End "AI10"
%ADOEndClientInjection: DocumentProlog End "AI10"
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
%ADOBeginClientInjection: DocumentSetup Start "AI10"
%ADOEndClientInjection: DocumentSetup Start "AI10"
Adobe_AGM_Utils begin
2 2010 true Adobe_AGM_Core/doc_setup get exec
Adobe_CoolType_Core/doc_setup get exec
Adobe_AGM_Image/doc_setup get exec
%ADOBeginClientInjection: DocumentSetup End "AI10"
%ADOEndClientInjection: DocumentSetup End "AI10"
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: grav_float_nodelay.eps 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI10"
%ADOEndClientInjection: PageSetup Start "AI10"
Adobe_AGM_Utils begin
Adobe_AGM_Core/page_setup get exec
Adobe_CoolType_Core/page_setup get exec
Adobe_AGM_Image/page_setup get exec
%ADOBeginClientInjection: PageSetup End "AI10"
%ADOEndClientInjection: PageSetup End "AI10"
%%EndPageSetup
Adobe_AGM_Core/AGMCORE_save save ddf
1 -1 scale 0 -498.887 translate
[1 0 0 1 0 0 ]  concat
mark
/0 
[/DeviceGray] add_csa
/CSA /0 
/1 
[/DeviceCMYK] add_csa
/CSA /1 
/2 
[/DeviceRGB] add_csa
/CSA /2 
cleartomark
800 path_rez
% page clip
gsave
newpath
gsave % PSGState
0 0 mo
0 498.887 li
560.942 498.887 li
560.942 0 li
clp
[1 0 0 1 0 0 ] concat
%ADOBeginClientInjection: BeginPageContent "AI10"
%ADOEndClientInjection: BeginPageContent "AI10"
gsave % PSGState
0 0 mo
561 0 li
561 499 li
0 499 li
0 0 li
clp
1 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
22.2339 .495605 mo
34.2402 .495605 43.9736 6.98486 43.9736 14.9888 cv
43.9736 22.9932 34.2402 29.4814 22.2339 29.4814 cv
10.2275 29.4814 .494141 22.9932 .494141 14.9888 cv
.494141 6.98486 10.2275 .495605 22.2339 .495605 cv
false sop
0 0 0 rgb
s
0 0 0 rgb
%ADOBeginSubsetFont: TimesNewRomanPSMT Initial
11 dict begin
/FontName /TimesNewRomanPSMT def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1674 dict dup begin
/.notdef 
<10bf317005b8302fd45b0609d6bde5a48b0240d44d91aabd11b7ee50303a
812fda6ed97443c437b8d3bea589> ND 
/zero 
<10bf31705d64a97b20dbc4561ea81104c96d02e040b796018bde0586bcad
95676b124522d0c27422b5dfa0bc2ccb1721be737b8e218982a6c51bb309
d221437a412ad70c8e013d67f1a65a7fdb26ab4d68559ae94edf62d226ee
2788d9a25e35d76a982a9ce00f945b2003db52c99e6508ea9ec1d594cacc
c5569596c150879d227c7852387d8a43228bbbf5b713924c938436dc78fa
d90a58c4b5cad2f69e6ba85a2be55b7f> ND 
/bracketleft 
<10bf31702f739a8f5a83eb4267fe7fbfd550a9fb3a241de4d11a3e72ccae
ccd83074d3184c> ND 
/bracketright 
<10bf31704220e20f5dcf22203033fafd3657396072233e4f2b1017e06b8a
40a3a8d8d4> ND 
/i 
<10bf31705ac6fd959d25cdc7a9a3e9a496239b73578bd39bc85c0d669e22
6e691e09b0f32a97a0998434376a9ae157042bfa0f185e0e1869e77dcfcf
1555c1c8abd2efd30cc82f4c6c4ddf0f13b90a3c76a63f04f6deca3db44a
cc213f28bbe83758b298928dc74aa0666fbe3e63b2fac529d140e3b7039a
bc2bb148559fada7a9e275e919fc3f2cd6b953d39d41def61462d0b129f2
b21125b163636a99efd52186dc8496e41f> ND 
/x 
<10bf31706ae07dd17233d682c9e1d171e05c39e4c2e1f18748a48d85f7aa
7cc65889e1b9adc82d1a976279fe7993dae95f57dccb69a45885b73cea03
d21a96fa38c7939c2a96ece439bc9aa684358afdabeb04ef7d8ec3bb5b3c
abe7efc841c96493b46c90a45df4b325a723eff80649b127668ef3097078
a3aa469a18461e5d2dd1ff75b61f9703453844d7df91eb99a0ed3ff61a59
265671b958253b91d2e399cb7b2f436352e5fb24345fa1f70fd78f1ff451
7a30037eb3eb35f2e10ea2490fd5cc6e967836f42e303278ce23561832f8
8625704ea3dc> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/TimesNewRomanPSMT findfont /Encoding get
dup 48 /zero put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 105 /i put
dup 120 /x put
pop
%ADOEndSubsetFont
/TimesNewRomanPSMT*1 
[
48{/.notdef}repeat /zero 42{/.notdef}repeat /bracketleft /.notdef /bracketright 11{/.notdef}repeat /i 
14{/.notdef}repeat /x 135{/.notdef}repeat
] /TimesNewRomanPSMT nfnt
/TimesNewRomanPSMT*1 findfont [11.2724 0 0 -11.2724 0 0 ]mfnt sfnt
12.2139 19.0146 mov
(xi[0]) sh
58.4668 55.2476 mo
80.2065 64.9097 li
101.946 55.2476 li
101.946 38.3384 li
58.4668 38.3384 li
58.4668 55.2476 li
cp
0 0 0 rgb
s
0 0 0 rgb
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs

systemdict begin
/TimesNewRomanPSMT 
findfont dup
/Private get begin
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/d 
<10bf31705e925b80b46abd5c29fa2d468b9b5e4bad025ff66ae6421f2159
e410fae538e7f5a90755fc4aa0e1909acab87d2263fe2beb089d6b932597
f97955542fb23ee02ff075e0e2003bcd35a0dc8fcdeec3b05157e1f949f5
3c3859814e432358033eab4cbebb11cb313a2d4e01ccb1ec831eb024e2db
c3d579a8da35c14675626591ac2eca02995f016a332260c2ef3a214c5222
c09fc068d46227963e811f66f7af291aa81d7807ad4efe2098965b55e611
61084fbfd3c71fb1d7ddef324c18429080886cac73b35a7c57be7b> ND 
systemdict /gcheck known {setglobal} if end end
end
/TimesNewRomanPSMT findfont /Encoding get
dup 100 /d put
pop
%ADOEndSubsetFont
/TimesNewRomanPSMT*1 
[
48{/.notdef}repeat /zero 42{/.notdef}repeat /bracketleft /.notdef /bracketright 6{/.notdef}repeat /d 
4{/.notdef}repeat /i 14{/.notdef}repeat /x 135{/.notdef}repeat
] /TimesNewRomanPSMT nfnt
/TimesNewRomanPSMT*1 findfont [11.2724 0 0 -11.2724 0 0 ]mfnt sfnt
68.9336 54.4424 mov
(dx[0]) sh
38.3369 24.6519 mo
43.1685 27.0659 48.8047 31.0928 53.6357 34.313 cv
0 0 0 rgb
s
55.2456 31.8979 mo
60.8823 38.3384 li
52.8301 36.729 li
55.2456 31.8979 li
0 0 0 rgb
f
55.2456 31.8979 mo
60.8823 38.3384 li
52.8301 36.729 li
55.2456 31.8979 li
cp
0 0 0 rgb
s
196.15 .495605 mo
208.157 .495605 217.891 6.98486 217.891 14.9888 cv
217.891 22.9932 208.157 29.4814 196.15 29.4814 cv
184.144 29.4814 174.411 22.9932 174.411 14.9888 cv
174.411 6.98486 184.144 .495605 196.15 .495605 cv
0 0 0 rgb
s
0 0 0 rgb
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs

systemdict begin
/TimesNewRomanPSMT 
findfont dup
/Private get begin
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/one 
<10bf317005ae401898a67a8f6de1f54e88dd29653934d8fb66d867e6b838
31e46aba7ec16ec2bf2610f48d513e9468def491a395c79c04ab97661388
486cef0a89ff7cb8841e12e5981f5cdc657a7ebfcdd8d206693275b7b903
ac4b583f7a5f7e19747edacf7fd79fb831> ND 
systemdict /gcheck known {setglobal} if end end
end
/TimesNewRomanPSMT findfont /Encoding get
dup 49 /one put
pop
%ADOEndSubsetFont
/TimesNewRomanPSMT*1 
[
48{/.notdef}repeat /zero /one 41{/.notdef}repeat /bracketleft /.notdef /bracketright 6{/.notdef}repeat 
/d 4{/.notdef}repeat /i 14{/.notdef}repeat /x 135{/.notdef}repeat
] /TimesNewRomanPSMT nfnt
/TimesNewRomanPSMT*1 findfont [11.2724 0 0 -11.2724 0 0 ]mfnt sfnt
186.131 19.0146 mov
(xi[1]) sh
174.411 55.2476 mo
196.15 64.9097 li
217.891 55.2476 li
217.891 38.3384 li
174.411 38.3384 li
174.411 55.2476 li
cp
0 0 0 rgb
s
0 0 0 rgb
/TimesNewRomanPSMT*1 findfont [11.2724 0 0 -11.2724 0 0 ]mfnt sfnt
184.879 54.4424 mov
(dx[1]) sh
196.15 29.4814 mo
196.15 29.4814 196.15 29.4814 196.15 30.2876 cv
0 0 0 rgb
s
199.372 30.2876 mo
196.15 38.3384 li
193.735 30.2876 li
199.372 30.2876 li
0 0 0 rgb
f
199.372 30.2876 mo
196.15 38.3384 li
193.735 30.2876 li
199.372 30.2876 li
cp
0 0 0 rgb
s
371.678 .495605 mo
383.685 .495605 393.419 6.98486 393.419 14.9888 cv
393.419 22.9932 383.685 29.4814 371.678 29.4814 cv
359.672 29.4814 349.938 22.9932 349.938 14.9888 cv
349.938 6.98486 359.672 .495605 371.678 .495605 cv
0 0 0 rgb
s
0 0 0 rgb
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs

systemdict begin
/TimesNewRomanPSMT 
findfont dup
/Private get begin
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/two 
<10bf31705245f700165abe0e8d91cddb6feb7811d3603825e66832849610
d7492bb7bb1bbe9b38b9effb001f6d173bafa44049a55f486a16d864a63a
0b8656d896563e3acf945ca9d464a5da6a162804f115d383572fc15c981c
15b63475fe68ef2e72a5ed63c6d92b271dfd5ca6b8185c6f94514ec3f8b2
9754c26f2e52febc00e73850ee3614b9e5b4860482acf7ce> ND 
systemdict /gcheck known {setglobal} if end end
end
/TimesNewRomanPSMT findfont /Encoding get
dup 50 /two put
pop
%ADOEndSubsetFont
/TimesNewRomanPSMT*1 
[
48{/.notdef}repeat /zero /one /two 40{/.notdef}repeat /bracketleft /.notdef /bracketright 
6{/.notdef}repeat /d 4{/.notdef}repeat /i 14{/.notdef}repeat /x 135{/.notdef}repeat
] /TimesNewRomanPSMT nfnt
/TimesNewRomanPSMT*1 findfont [11.2724 0 0 -11.2724 0 0 ]mfnt sfnt
361.658 19.0146 mov
(xi[2]) sh
291.967 55.2476 mo
313.706 64.9097 li
335.445 55.2476 li
335.445 38.3384 li
291.967 38.3384 li
291.967 55.2476 li
cp
0 0 0 rgb
s
0 0 0 rgb
/TimesNewRomanPSMT*1 findfont [11.2724 0 0 -11.2724 0 0 ]mfnt sfnt
302.434 54.4424 mov
(dx[2]) sh
355.575 24.6519 mo
350.744 27.0659 345.107 31.0928 340.276 34.313 cv
0 0 0 rgb
s
341.081 36.729 mo
333.03 38.3384 li
338.666 31.8979 li
341.081 36.729 li
0 0 0 rgb
f
341.081 36.729 mo
333.03 38.3384 li
338.666 31.8979 li
341.081 36.729 li
cp
0 0 0 rgb
s
254.928 .495605 mo
267.379 .495605 277.474 6.98486 277.474 14.9888 cv
277.474 22.9932 267.379 29.4814 254.928 29.4814 cv
242.477 29.4814 232.384 22.9932 232.384 14.9888 cv
232.384 6.98486 242.477 .495605 254.928 .495605 cv
0 0 0 rgb
s
0 0 0 rgb
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs

systemdict begin
/TimesNewRomanPSMT 
findfont dup
/Private get begin
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/e 
<10bf3170422f4b41885a9676842055648b7ac91c5a5b75b50afc4ad63a16
3403789c9c8ba615f8e38a9fce64aceadaad23d4e3dbfa43e075f8b5608d
92b54d863453827f92409bc9183300c8f2b193237fd39a67d028e7efccd3
224f7d467520735ecf6bf2ce731119ee6085c9e4a87b9d8af5aaaf671a24
b9d9d852fe88b0aa1a2fe53bd12da555ee08ba1ef1ee246f54193c816b> ND 
/p 
<10bf31707a065bb2d4fcdbff26dc7fc389a2b8b370b59f91b1e9fc0bef0c
327c88198d7b546dfc608b13f7fcb8bc64cff7af2c18f699da39e53fbe37
ec097fa9ed32bc909b431f94a38ef46b90c907c345fc0194b5122ed9dbb4
520a43693133d37a01aa7d03cfea7c465d1f39c417c97cf35752895b647b
f6eeb9e1860d65028ce948e26109d628005c88929ab2810711af73457538
140a230647d1a4449996d6a087aeef7aa11197b1a7d6644dda8a28e570b9
025110e75308275897df1500b8ee5bed886eab146b5949fd3e0cb2a624f1
82a3907dabdc7d67145f1487b4fdd05c5af52274c2933d164387a1> ND 
/s 
<10bf31704e7c764f163406da7dbbaf9d43c65b8fb757ade7829da62aa468
ae4baad8607e81147b16ed99a46ab38e424e5512c18fc36490fe0e0e3c97
dcaa7fe80721b43eb7737e0a60636624d7c3bb6047489980efa6d2c4807d
50aa67e7cf84be79d7d15a6b706fddbf727c9c6d9b0a699629abe5e444e5
0457164832d1875637e41249b15e9b27dc3430ba6cf1c3ab4c74334bddfb
8eb29c16da6b1ed80d7e90ec9c4540b3b77731da9497fdb30cff9013413f
000a5d34ea717ad1e71f37aca4fc003a6dde001ac4d2b8ee38552cfaec10
a42d8a25> ND 
systemdict /gcheck known {setglobal} if end end
end
/TimesNewRomanPSMT findfont /Encoding get
dup 101 /e put
dup 112 /p put
dup 115 /s put
pop
%ADOEndSubsetFont
/TimesNewRomanPSMT*1 
[
48{/.notdef}repeat /zero /one /two 40{/.notdef}repeat /bracketleft /.notdef /bracketright 
6{/.notdef}repeat /d /e 3{/.notdef}repeat /i 6{/.notdef}repeat /p 2{/.notdef}repeat 
/s 4{/.notdef}repeat /x 135{/.notdef}repeat
] /TimesNewRomanPSMT nfnt
/TimesNewRomanPSMT*1 findfont [11.2724 0 0 -11.2724 0 0 ]mfnt sfnt
243.031 19.0146 mov
(ieps2) sh
249.292 135.765 mo
275.058 135.765 li
283.915 106.779 li
240.435 106.779 li
249.292 135.765 li
cp
0 0 0 rgb
s
0 0 0 rgb
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs

systemdict begin
/TimesNewRomanPSMT 
findfont dup
/Private get begin
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/z 
<10bf31706d7b034b88b69b8745d3549483d633ef0d22afe4edf1d8b16d7d
8fcfd4b207cd72a6b23080b93a267d6450021d8dda1b2a7d1048bb787cdd
e4b3370d59c6ba81363a10949ee62624babf5dce2b9ed804c69a546bc5cf
6ad525f5bb> ND 
systemdict /gcheck known {setglobal} if end end
end
/TimesNewRomanPSMT findfont /Encoding get
dup 122 /z put
pop
%ADOEndSubsetFont
/TimesNewRomanPSMT*1 
[
48{/.notdef}repeat /zero /one /two 40{/.notdef}repeat /bracketleft /.notdef /bracketright 
6{/.notdef}repeat /d /e 3{/.notdef}repeat /i 6{/.notdef}repeat /p 2{/.notdef}repeat 
/s 4{/.notdef}repeat /x /.notdef /z 133{/.notdef}repeat
] /TimesNewRomanPSMT nfnt
/TimesNewRomanPSMT*1 findfont [11.2724 0 0 -11.2724 0 0 ]mfnt sfnt
251.536 125.297 mov
(z2e2) sh
255.733 29.4814 mo
257.344 47.1958 258.954 76.9873 260.564 98.7266 cv
0 0 0 rgb
s
262.98 98.7266 mo
261.37 106.779 li
258.149 98.7266 li
262.98 98.7266 li
0 0 0 rgb
f
262.98 98.7266 mo
261.37 106.779 li
258.149 98.7266 li
262.98 98.7266 li
cp
0 0 0 rgb
s
80.2065 .495605 mo
92.2129 .495605 101.946 6.98486 101.946 14.9888 cv
101.946 22.9932 92.2129 29.4814 80.2065 29.4814 cv
68.2002 29.4814 58.4668 22.9932 58.4668 14.9888 cv
58.4668 6.98486 68.2002 .495605 80.2065 .495605 cv
0 0 0 rgb
s
0 0 0 rgb
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs

systemdict begin
/TimesNewRomanPSMT 
findfont dup
/Private get begin
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/j 
<10bf3170ccea880dd3e5afadf08632e3e38e0db52107cf2e302ac4a87b56
e242e7e72991290dadfa92ecca6c6eb46958e2b5ca07907c84b818fa14b8
f98c013692d5e9e80139a1ade235bf193a6b2d9036ed1c7454ea7583e5a3
3647ccf0fda6d071be6e21984caffda59c37c8c81ee172321333023b416c
31feff49460f837eef90688a753cfe6ae339bbdbd2699e500b5046706362
f5ef06197531aa346fa291169331e154bdb13f1996182af3ab68707ea48f
af0fc9368880a20a7896ac6a7c367d54b55736927bd29c> ND 
systemdict /gcheck known {setglobal} if end end
end
/TimesNewRomanPSMT findfont /Encoding get
dup 106 /j put
pop
%ADOEndSubsetFont
/TimesNewRomanPSMT*1 
[
48{/.notdef}repeat /zero /one /two 40{/.notdef}repeat /bracketleft /.notdef /bracketright 
6{/.notdef}repeat /d /e 3{/.notdef}repeat /i /j 5{/.notdef}repeat /p 
2{/.notdef}repeat /s 4{/.notdef}repeat /x /.notdef /z 133{/.notdef}repeat
] /TimesNewRomanPSMT nfnt
/TimesNewRomanPSMT*1 findfont [11.2724 0 0 -11.2724 0 0 ]mfnt sfnt
70.1865 19.0146 mov
(xj[0]) sh
80.2065 29.4814 mo
80.2065 29.4814 80.2065 29.4814 80.2065 30.2876 cv
0 0 0 rgb
s
83.4268 30.2876 mo
80.2065 38.3384 li
77.791 30.2876 li
83.4268 30.2876 li
0 0 0 rgb
f
83.4268 30.2876 mo
80.2065 38.3384 li
77.791 30.2876 li
83.4268 30.2876 li
cp
0 0 0 rgb
s
138.179 .495605 mo
150.185 .495605 159.918 6.98486 159.918 14.9888 cv
159.918 22.9932 150.185 29.4814 138.179 29.4814 cv
126.172 29.4814 116.439 22.9932 116.439 14.9888 cv
116.439 6.98486 126.172 .495605 138.179 .495605 cv
0 0 0 rgb
s
0 0 0 rgb
/TimesNewRomanPSMT*1 findfont [11.2724 0 0 -11.2724 0 0 ]mfnt sfnt
128.158 19.0146 mov
(xj[1]) sh
154.282 24.6519 mo
159.113 27.0659 164.75 31.0928 169.58 34.313 cv
0 0 0 rgb
s
171.191 31.8979 mo
176.827 38.3384 li
168.775 36.729 li
171.191 31.8979 li
0 0 0 rgb
f
171.191 31.8979 mo
176.827 38.3384 li
168.775 36.729 li
171.191 31.8979 li
cp
0 0 0 rgb
s
313.706 .495605 mo
325.712 .495605 335.445 6.98486 335.445 14.9888 cv
335.445 22.9932 325.712 29.4814 313.706 29.4814 cv
301.699 29.4814 291.967 22.9932 291.967 14.9888 cv
291.967 6.98486 301.699 .495605 313.706 .495605 cv
0 0 0 rgb
s
0 0 0 rgb
/TimesNewRomanPSMT*1 findfont [11.2724 0 0 -11.2724 0 0 ]mfnt sfnt
303.686 19.0146 mov
(xj[2]) sh
313.706 29.4814 mo
313.706 29.4814 313.706 29.4814 313.706 30.2876 cv
0 0 0 rgb
s
316.927 30.2876 mo
313.706 38.3384 li
311.29 30.2876 li
316.927 30.2876 li
0 0 0 rgb
f
316.927 30.2876 mo
313.706 38.3384 li
311.29 30.2876 li
316.927 30.2876 li
cp
0 0 0 rgb
s
429.65 .495605 mo
441.656 .495605 451.391 6.98486 451.391 14.9888 cv
451.391 22.9932 441.656 29.4814 429.65 29.4814 cv
417.644 29.4814 407.911 22.9932 407.911 14.9888 cv
407.911 6.98486 417.644 .495605 429.65 .495605 cv
0 0 0 rgb
s
0 0 0 rgb
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs

systemdict begin
/TimesNewRomanPSMT 
findfont dup
/Private get begin
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/m 
<10bf3170612f50a32a221f92c62df6f217e624d0a9df1e121860640913cc
49c4b2d35b710b10afd4f958933cf36f77fa2631f24cbc39b6fb55164082
193c40e902d50b4dd0e9f5ae2867995b45675b905195bdfcc9b26d09519c
1e89df3994ea78cedeba6852e8b9c507c215033124b55ca65aeabe76ef04
57fa09d46563663ca74b6f95faf692e9ff2805a952be9ce73108295db01a
1994fa03645166fdecc81234fb6ed970d2a939579f06453bc00a9eb193c6
89afa32196c9bbfd4f2e113a0f0a380ead1a15279b212e2d6f74df100cc7
60a6d17274c6477145b98511b0f38377fb67ec75a8941a93686e94c1719c
fcfef92ae4ed1bb42acc6930c9fd7d14d03f2c5cc57e8f007a194fcdc380
4777a58ea7912850daff4d6c2854942dfb30e0675160b33e854bf7fed66f
47144c25d4528d081f2387910709746bda8159065734924af6aea3b40f49
1ba747b6dede483a966ee00175b89acc0a77eed79d9fdb> ND 
systemdict /gcheck known {setglobal} if end end
end
/TimesNewRomanPSMT findfont /Encoding get
dup 109 /m put
pop
%ADOEndSubsetFont
/TimesNewRomanPSMT*1 
[
48{/.notdef}repeat /zero /one /two 40{/.notdef}repeat /bracketleft /.notdef /bracketright 
6{/.notdef}repeat /d /e 3{/.notdef}repeat /i /j 2{/.notdef}repeat /m 
2{/.notdef}repeat /p 2{/.notdef}repeat /s 4{/.notdef}repeat /x /.notdef /z 
133{/.notdef}repeat
] /TimesNewRomanPSMT nfnt
/TimesNewRomanPSMT*1 findfont [11.2724 0 0 -11.2724 0 0 ]mfnt sfnt
423.7 19.0146 mov
(mj) sh
238.825 324.174 mo
217.085 338.667 li
238.825 353.161 li
260.564 338.667 li
238.825 324.174 li
cp
0 0 0 rgb
s
0 0 0 rgb
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs

systemdict begin
/TimesNewRomanPSMT 
findfont dup
/Private get begin
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/f 
<10bf317040cdafcf4c85ea96770a161ac86c86b3da1de71c3c1d8d7b233d
d5c9149f810914ad38a97a185443c1c2440e78f30291f76f6d029b3ea2b6
66de02ac1bf19ed2dbfc70d08ae79c368cc19dd7ee6f7f891d2c83ea3a82
f4273ce61781b76966f5c7876c34e2b43a45523c4b42ee5dfa86ed1aad28
c225091d8e9e75f9abbae478bde45603b24282244c90d0bd1005e38693d2
05c915e9f7b21b731549211bb149d33709f6ba292435a821caec7d09122a
a85fb1> ND 
systemdict /gcheck known {setglobal} if end end
end
/TimesNewRomanPSMT findfont /Encoding get
dup 102 /f put
pop
%ADOEndSubsetFont
/TimesNewRomanPSMT*1 
[
48{/.notdef}repeat /zero /one /two 40{/.notdef}repeat /bracketleft /.notdef /bracketright 
6{/.notdef}repeat /d /e /f 2{/.notdef}repeat /i /j 2{/.notdef}repeat 
/m 2{/.notdef}repeat /p 2{/.notdef}repeat /s 4{/.notdef}repeat /x /.notdef 
/z 133{/.notdef}repeat
] /TimesNewRomanPSMT nfnt
/TimesNewRomanPSMT*1 findfont [11.2724 0 0 -11.2724 0 0 ]mfnt sfnt
232.564 342.694 mov
(mf) sh
415.963 26.2617 mo
401.47 39.1445 381.34 61.689 381.34 85.8438 cv
381.34 85.8438 381.34 85.8438 381.34 229.97 cv
381.34 260.567 297.603 308.071 258.954 328.201 cv
0 0 0 rgb
s
259.76 330.616 mo
251.708 332.227 li
257.344 325.785 li
259.76 330.616 li
0 0 0 rgb
f
259.76 330.616 mo
251.708 332.227 li
257.344 325.785 li
259.76 330.616 li
cp
0 0 0 rgb
s
116.439 475.547 mo
94.6992 465.884 li
72.9595 475.547 li
72.9595 492.456 li
116.439 492.456 li
116.439 475.547 li
cp
0 0 0 rgb
s
0 0 0 rgb
/TimesNewRomanPSMT*1 findfont [11.2724 0 0 -11.2724 0 0 ]mfnt sfnt
84.0518 484.404 mov
(sx[0]) sh
199.372 475.547 mo
177.632 465.884 li
155.893 475.547 li
155.893 492.456 li
199.372 492.456 li
199.372 475.547 li
cp
0 0 0 rgb
s
0 0 0 rgb
/TimesNewRomanPSMT*1 findfont [11.2724 0 0 -11.2724 0 0 ]mfnt sfnt
166.984 484.404 mov
(sx[1]) sh
267.811 475.547 mo
246.072 465.884 li
224.332 475.547 li
224.332 492.456 li
267.811 492.456 li
267.811 475.547 li
cp
0 0 0 rgb
s
0 0 0 rgb
/TimesNewRomanPSMT*1 findfont [11.2724 0 0 -11.2724 0 0 ]mfnt sfnt
235.424 484.404 mov
(sx[2]) sh
115.634 71.3511 mo
93.894 85.8438 li
115.634 100.338 li
137.373 85.8438 li
115.634 71.3511 li
cp
0 0 0 rgb
s
0 0 0 rgb
/TimesNewRomanPSMT*1 findfont [11.2724 0 0 -11.2724 0 0 ]mfnt sfnt
101.543 89.8696 mov
(dx2[0]) sh
86.6479 61.689 mo
89.8682 65.7148 93.894 69.7407 97.9204 72.9614 cv
0 0 0 rgb
s
100.335 71.3511 mo
104.361 78.5972 li
96.3096 75.377 li
100.335 71.3511 li
0 0 0 rgb
f
100.335 71.3511 mo
104.361 78.5972 li
96.3096 75.377 li
100.335 71.3511 li
cp
0 0 0 rgb
s
93.894 59.2734 mo
97.1147 62.4946 101.141 65.7148 104.361 68.9355 cv
0 0 0 rgb
s
105.972 66.52 mo
109.998 74.5718 li
101.946 70.5459 li
105.972 66.52 li
0 0 0 rgb
f
105.972 66.52 mo
109.998 74.5718 li
101.946 70.5459 li
105.972 66.52 li
cp
0 0 0 rgb
s
94.6992 395.03 mo
72.9595 409.523 li
94.6992 424.016 li
116.439 409.523 li
94.6992 395.03 li
cp
0 0 0 rgb
s
0 0 0 rgb
/TimesNewRomanPSMT*1 findfont [11.2724 0 0 -11.2724 0 0 ]mfnt sfnt
84.3682 413.549 mov
(fx[0]) sh
77.791 64.1045 mo
75.3755 78.5972 72.1548 101.142 71.3491 121.272 cv
71.3491 121.272 71.3491 121.272 71.3491 338.667 cv
72.1548 357.187 78.5957 377.316 85.0371 391.808 cv
0 0 0 rgb
s
87.4526 391.004 mo
89.0635 399.056 li
82.6216 393.42 li
87.4526 391.004 li
0 0 0 rgb
f
87.4526 391.004 mo
89.0635 399.056 li
82.6216 393.42 li
87.4526 391.004 li
cp
0 0 0 rgb
s
204.203 71.3511 mo
182.463 85.8438 li
204.203 100.338 li
225.942 85.8438 li
204.203 71.3511 li
cp
0 0 0 rgb
s
0 0 0 rgb
/TimesNewRomanPSMT*1 findfont [11.2724 0 0 -11.2724 0 0 ]mfnt sfnt
190.112 89.8696 mov
(dx2[1]) sh
193.735 64.1045 mo
193.735 65.7148 194.541 66.52 194.541 68.1304 cv
0 0 0 rgb
s
196.957 67.3247 mo
196.957 76.1816 li
192.125 68.9355 li
196.957 67.3247 li
0 0 0 rgb
f
196.957 67.3247 mo
196.957 76.1816 li
192.125 68.9355 li
196.957 67.3247 li
cp
0 0 0 rgb
s
203.397 61.689 mo
204.203 62.4946 204.203 64.1045 205.008 64.9097 cv
0 0 0 rgb
s
207.423 64.9097 mo
206.618 72.9614 li
202.592 65.7148 li
207.423 64.9097 li
0 0 0 rgb
f
207.423 64.9097 mo
206.618 72.9614 li
202.592 65.7148 li
207.423 64.9097 li
cp
0 0 0 rgb
s
177.632 395.03 mo
155.893 409.523 li
177.632 424.016 li
199.372 409.523 li
177.632 395.03 li
cp
0 0 0 rgb
s
0 0 0 rgb
/TimesNewRomanPSMT*1 findfont [11.2724 0 0 -11.2724 0 0 ]mfnt sfnt
167.301 413.549 mov
(fx[1]) sh
184.879 59.2734 mo
180.853 62.4946 178.437 65.7148 175.216 71.3511 cv
163.139 91.481 159.918 98.7266 159.918 121.272 cv
159.918 121.272 159.918 121.272 159.918 338.667 cv
159.918 356.381 165.554 376.51 170.385 390.199 cv
0 0 0 rgb
s
172.801 389.394 mo
172.801 398.251 li
167.97 391.004 li
172.801 389.394 li
0 0 0 rgb
f
172.801 389.394 mo
172.801 398.251 li
167.97 391.004 li
172.801 389.394 li
cp
0 0 0 rgb
s
306.46 71.3511 mo
284.719 85.8438 li
306.46 100.338 li
328.199 85.8438 li
306.46 71.3511 li
cp
0 0 0 rgb
s
0 0 0 rgb
/TimesNewRomanPSMT*1 findfont [11.2724 0 0 -11.2724 0 0 ]mfnt sfnt
292.369 89.8696 mov
(dx2[2]) sh
306.46 61.689 mo
306.46 62.4946 305.654 64.1045 305.654 64.9097 cv
0 0 0 rgb
s
308.069 65.7148 mo
304.044 72.9614 li
303.238 64.9097 li
308.069 65.7148 li
0 0 0 rgb
f
308.069 65.7148 mo
304.044 72.9614 li
303.238 64.9097 li
308.069 65.7148 li
cp
0 0 0 rgb
s
316.121 64.1045 mo
316.121 64.9097 315.316 66.52 315.316 67.3247 cv
0 0 0 rgb
s
317.732 68.1304 mo
312.901 75.377 li
312.901 66.52 li
317.732 68.1304 li
0 0 0 rgb
f
317.732 68.1304 mo
312.901 75.377 li
312.901 66.52 li
317.732 68.1304 li
cp
0 0 0 rgb
s
246.072 395.03 mo
224.332 409.523 li
246.072 424.016 li
267.811 409.523 li
246.072 395.03 li
cp
0 0 0 rgb
s
0 0 0 rgb
/TimesNewRomanPSMT*1 findfont [11.2724 0 0 -11.2724 0 0 ]mfnt sfnt
235.74 413.549 mov
(fx[2]) sh
325.783 60.0786 mo
329.005 63.2993 333.03 67.3247 335.445 71.3511 cv
347.523 91.481 350.744 98.7266 350.744 121.272 cv
350.744 121.272 350.744 121.272 350.744 338.667 cv
350.744 377.316 301.629 395.835 271.032 403.887 cv
0 0 0 rgb
s
271.836 406.302 mo
262.98 406.302 li
270.227 401.471 li
271.836 406.302 li
0 0 0 rgb
f
271.836 406.302 mo
262.98 406.302 li
270.227 401.471 li
271.836 406.302 li
cp
0 0 0 rgb
s
191.32 135.765 mo
217.085 135.765 li
225.942 106.779 li
182.463 106.779 li
191.32 135.765 li
cp
0 0 0 rgb
s
0 0 0 rgb
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs

systemdict begin
/TimesNewRomanPSMT 
findfont dup
/Private get begin
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/y 
<10bf3170638bba13f480e5fde8996045de127a9c4618a2d4aa7c3941a65b
655e0c9abd29436b155308878db9c977a5fa9d8aabf88f01b9ed200087ec
a512549272155995d5ba8a658d1b9bd6631ff76a4e668a0f712e1ffb6536
2645509bc9da53c94714c8c3d06e835b3de8a617493a3b48a5cf09eb51a1
f8e94701f8b707ec6cac19b3b46b6af22d6b57b2906df634fd967798ff79
41b6c0c1662b9e4850b0745567e166dc15afd8d264bb362629824a3196ac
305d1be65193e27d2fd4c922aa9edd149d8aaacac7819d1067e8f92d1467
837fe3> ND 
systemdict /gcheck known {setglobal} if end end
end
/TimesNewRomanPSMT findfont /Encoding get
dup 121 /y put
pop
%ADOEndSubsetFont
/TimesNewRomanPSMT*1 
[
48{/.notdef}repeat /zero /one /two 40{/.notdef}repeat /bracketleft /.notdef /bracketright 
6{/.notdef}repeat /d /e /f 2{/.notdef}repeat /i /j 2{/.notdef}repeat 
/m 2{/.notdef}repeat /p 2{/.notdef}repeat /s 4{/.notdef}repeat /x /y 
/z 133{/.notdef}repeat
] /TimesNewRomanPSMT nfnt
/TimesNewRomanPSMT*1 findfont [11.2724 0 0 -11.2724 0 0 ]mfnt sfnt
192.93 125.297 mov
(x2y2) sh
129.322 91.481 mo
141.399 96.311 161.529 104.363 177.632 109.999 cv
0 0 0 rgb
s
178.437 107.583 mo
184.879 113.22 li
176.021 112.415 li
178.437 107.583 li
0 0 0 rgb
f
178.437 107.583 mo
184.879 113.22 li
176.021 112.415 li
178.437 107.583 li
cp
0 0 0 rgb
s
204.203 100.338 mo
204.203 100.338 li
0 0 0 rgb
s
207.423 98.7266 mo
204.203 106.779 li
201.787 98.7266 li
207.423 98.7266 li
0 0 0 rgb
f
207.423 98.7266 mo
204.203 106.779 li
201.787 98.7266 li
207.423 98.7266 li
cp
0 0 0 rgb
s
296.798 93.8955 mo
293.576 96.311 290.356 98.7266 287.135 101.948 cv
0 0 0 rgb
s
288.746 104.363 mo
280.694 106.779 li
285.525 99.5317 li
288.746 104.363 li
0 0 0 rgb
f
288.746 104.363 mo
280.694 106.779 li
285.525 99.5317 li
288.746 104.363 li
cp
0 0 0 rgb
s
208.229 171.192 mo
233.994 171.192 li
242.851 142.207 li
199.372 142.207 li
208.229 171.192 li
cp
0 0 0 rgb
s
0 0 0 rgb
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs

systemdict begin
/TimesNewRomanPSMT 
findfont dup
/Private get begin
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/r 
<10bf317063846c0d04467b4514eeaf5ad995f8d8d5368dfec5aee1c6b68a
3c0ec443b5151d573544f035f9c8d56a8c86eff8bc45b9cb7e9f7b4d2809
af6f18097fb347def46731e8a3ca8727e68580e7e5a82ffd67834895aa8a
7069ddf865d0109c1727ed7e1906ae399964f53305401f293656e81d3f7f
a520bb51b43e002474ba474471779fe9f889b94891c2fcd98f80aeea2c61
083a35a481b1750c54fd90563aed2fa403c1bb4ae1b4> ND 
systemdict /gcheck known {setglobal} if end end
end
/TimesNewRomanPSMT findfont /Encoding get
dup 114 /r put
pop
%ADOEndSubsetFont
/TimesNewRomanPSMT*1 
[
48{/.notdef}repeat /zero /one /two 40{/.notdef}repeat /bracketleft /.notdef /bracketright 
6{/.notdef}repeat /d /e /f 2{/.notdef}repeat /i /j 2{/.notdef}repeat 
/m 2{/.notdef}repeat /p /.notdef /r /s 4{/.notdef}repeat /x 
/y /z 133{/.notdef}repeat
] /TimesNewRomanPSMT nfnt
/TimesNewRomanPSMT*1 findfont [11.2724 0 0 -11.2724 0 0 ]mfnt sfnt
216.417 160.725 mov
(r2) sh
211.449 135.765 mo
211.449 135.765 li
0 0 0 rgb
s
213.865 133.35 mo
213.865 142.207 li
208.229 135.765 li
213.865 133.35 li
0 0 0 rgb
f
213.865 133.35 mo
213.865 142.207 li
208.229 135.765 li
213.865 133.35 li
cp
0 0 0 rgb
s
248.487 133.35 mo
246.876 134.154 246.072 135.765 244.461 136.57 cv
0 0 0 rgb
s
246.072 138.985 mo
238.02 142.207 li
242.046 134.959 li
246.072 138.985 li
0 0 0 rgb
f
246.072 138.985 mo
238.02 142.207 li
242.046 134.959 li
246.072 138.985 li
cp
0 0 0 rgb
s
221.111 206.62 mo
242.851 184.881 li
199.372 184.881 li
221.111 206.62 li
cp
0 0 0 rgb
s
0 0 0 rgb
/TimesNewRomanPSMT*1 findfont [11.2724 0 0 -11.2724 0 0 ]mfnt sfnt
216.417 196.153 mov
(r1) sh
221.111 171.192 mo
221.111 172.802 221.111 175.218 221.111 176.828 cv
0 0 0 rgb
s
224.332 176.828 mo
221.111 184.881 li
218.696 176.828 li
224.332 176.828 li
0 0 0 rgb
f
224.332 176.828 mo
221.111 184.881 li
218.696 176.828 li
224.332 176.828 li
cp
0 0 0 rgb
s
242.851 225.139 mo
221.111 213.062 li
199.372 225.139 li
207.423 243.658 li
234.799 243.658 li
242.851 225.139 li
cp
0 0 0 rgb
s
0 0 0 rgb
/TimesNewRomanPSMT*1 findfont [11.2724 0 0 -11.2724 0 0 ]mfnt sfnt
214.851 233.996 mov
(r1i) sh
221.111 253.32 mo
199.372 267.813 li
221.111 282.306 li
242.851 267.813 li
221.111 253.32 li
cp
0 0 0 rgb
s
0 0 0 rgb
/TimesNewRomanPSMT*1 findfont [11.2724 0 0 -11.2724 0 0 ]mfnt sfnt
214.851 271.839 mov
(r2i) sh
215.475 243.658 mo
215.475 245.268 215.475 246.879 215.475 248.489 cv
0 0 0 rgb
s
217.891 248.489 mo
216.28 256.54 li
213.059 248.489 li
217.891 248.489 li
0 0 0 rgb
f
217.891 248.489 mo
216.28 256.54 li
213.059 248.489 li
217.891 248.489 li
cp
0 0 0 rgb
s
226.748 243.658 mo
226.748 245.268 226.748 246.879 226.748 248.489 cv
0 0 0 rgb
s
229.163 248.489 mo
225.942 256.54 li
224.332 248.489 li
229.163 248.489 li
0 0 0 rgb
f
229.163 248.489 mo
225.942 256.54 li
224.332 248.489 li
229.163 248.489 li
cp
0 0 0 rgb
s
238.825 288.748 mo
217.085 303.24 li
238.825 317.734 li
260.564 303.24 li
238.825 288.748 li
cp
0 0 0 rgb
s
0 0 0 rgb
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs

systemdict begin
/TimesNewRomanPSMT 
findfont dup
/Private get begin
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three 
<10bf317046e83a12808b34aac7f1a2c51f931f10ca7f698d45f025e79cad
acddbcee06bad2c5cc1167c54f184f7ff6c5be54525dd336a18dac59abe3
51af65de3cb74e87680e210111fe3373cf78cdaaefde1102d8a669c7f56c
fd78df2fa64353b29ec63cee83be5507fab9efe5b0c0654ac5d0faf82f72
c7d0d0ece4b0777dfc4d4bfc7583f8632dc6c5fd99d182cc5583383cd380
38e183a0ee9157830157210c13c7cc41fe93378a95d46b9bf61021a1bc93
25b861a11afa297b545a525e2dd0f9091708f3c950db8d721b9ad5668e69
2c6e768a4c7c4da3341999d7214a> ND 
systemdict /gcheck known {setglobal} if end end
end
/TimesNewRomanPSMT findfont /Encoding get
dup 51 /three put
pop
%ADOEndSubsetFont
/TimesNewRomanPSMT*1 
[
48{/.notdef}repeat /zero /one /two /three 39{/.notdef}repeat /bracketleft /.notdef 
/bracketright 6{/.notdef}repeat /d /e /f 2{/.notdef}repeat /i /j 
2{/.notdef}repeat /m 2{/.notdef}repeat /p /.notdef /r /s 4{/.notdef}repeat 
/x /y /z 133{/.notdef}repeat
] /TimesNewRomanPSMT nfnt
/TimesNewRomanPSMT*1 findfont [11.2724 0 0 -11.2724 0 0 ]mfnt sfnt
232.564 307.266 mov
(r3i) sh
237.215 238.827 mo
242.046 242.853 246.876 247.683 250.097 253.32 cv
254.928 265.397 252.513 270.229 250.097 282.306 cv
250.097 283.111 249.292 284.722 249.292 285.526 cv
0 0 0 rgb
s
251.708 287.137 mo
245.266 292.773 li
246.876 284.722 li
251.708 287.137 li
0 0 0 rgb
f
251.708 287.137 mo
245.266 292.773 li
246.876 284.722 li
251.708 287.137 li
cp
0 0 0 rgb
s
226.748 279.085 mo
227.553 280.696 228.358 283.111 229.163 284.722 cv
0 0 0 rgb
s
231.579 283.917 mo
233.188 291.968 li
226.748 286.332 li
231.579 283.917 li
0 0 0 rgb
f
231.579 283.917 mo
233.188 291.968 li
226.748 286.332 li
231.579 283.917 li
cp
0 0 0 rgb
s
238.825 317.734 mo
238.825 317.734 li
0 0 0 rgb
s
242.046 316.124 mo
238.825 324.174 li
236.409 316.124 li
242.046 316.124 li
0 0 0 rgb
f
242.046 316.124 mo
238.825 324.174 li
236.409 316.124 li
242.046 316.124 li
cp
0 0 0 rgb
s
238.825 359.602 mo
217.085 374.094 li
238.825 388.589 li
260.564 374.094 li
238.825 359.602 li
cp
0 0 0 rgb
s
0 0 0 rgb
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs

systemdict begin
/TimesNewRomanPSMT 
findfont dup
/Private get begin
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/o 
<10bf31705fc1db5456c194eea6db4b28ba27bcfe06dfbaea808b4b94782b
858d11975b27223d0b6d7d91b178aa636f44bd6799b0a1e7bdfe3b2848e8
67d16652cf1e1d16eb11c8e931a8c3a5c20ce3e46e302745f5c6d7e5ce21
21e333fdaa150cd3191a1e4c670506e5c48803290df3192b44aa2b4f51a0
a9c983af94e8a18415a60616a6a395b3de67178db0d5045384581c136ad0
9005bf> ND 
systemdict /gcheck known {setglobal} if end end
end
/TimesNewRomanPSMT findfont /Encoding get
dup 111 /o put
pop
%ADOEndSubsetFont
/TimesNewRomanPSMT*1 
[
48{/.notdef}repeat /zero /one /two /three 39{/.notdef}repeat /bracketleft /.notdef 
/bracketright 6{/.notdef}repeat /d /e /f 2{/.notdef}repeat /i /j 
2{/.notdef}repeat /m /.notdef /o /p /.notdef /r /s 
4{/.notdef}repeat /x /y /z 133{/.notdef}repeat
] /TimesNewRomanPSMT nfnt
/TimesNewRomanPSMT*1 findfont [11.2724 0 0 -11.2724 0 0 ]mfnt sfnt
229.746 378.122 mov
(mfo) sh
238.825 353.161 mo
238.825 353.161 li
0 0 0 rgb
s
242.046 351.551 mo
238.825 359.602 li
236.409 351.551 li
242.046 351.551 li
0 0 0 rgb
f
242.046 351.551 mo
238.825 359.602 li
236.409 351.551 li
242.046 351.551 li
cp
0 0 0 rgb
s
222.722 378.122 mo
204.203 382.147 174.411 388.589 148.646 395.03 cv
138.984 397.446 127.711 400.666 118.049 403.082 cv
0 0 0 rgb
s
118.854 405.497 mo
109.998 405.497 li
117.244 400.666 li
118.854 405.497 li
0 0 0 rgb
f
118.854 405.497 mo
109.998 405.497 li
117.244 400.666 li
118.854 405.497 li
cp
0 0 0 rgb
s
226.748 380.538 mo
218.696 385.368 206.618 392.614 196.957 398.251 cv
0 0 0 rgb
s
197.761 400.666 mo
189.709 402.277 li
195.346 395.835 li
197.761 400.666 li
0 0 0 rgb
f
197.761 400.666 mo
189.709 402.277 li
195.346 395.835 li
197.761 400.666 li
cp
0 0 0 rgb
s
241.24 386.978 mo
241.24 387.783 241.24 387.783 242.046 388.589 cv
0 0 0 rgb
s
244.461 388.589 mo
243.656 396.64 li
239.63 389.394 li
244.461 388.589 li
0 0 0 rgb
f
244.461 388.589 mo
243.656 396.64 li
239.63 389.394 li
244.461 388.589 li
cp
0 0 0 rgb
s
296.798 324.174 mo
308.804 324.174 318.537 330.665 318.537 338.667 cv
318.537 346.672 308.804 353.161 296.798 353.161 cv
284.791 353.161 275.058 346.672 275.058 338.667 cv
275.058 330.665 284.791 324.174 296.798 324.174 cv
0 0 0 rgb
s
0 0 0 rgb
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs

systemdict begin
/TimesNewRomanPSMT 
findfont dup
/Private get begin
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/t 
<10bf3170675b4d3401fff3ff5f765da1975e70428467ea281d5658a08302
13a3804f9a1319dd7c580c31580e87e258a447c36de3afa6295edab19ac4
8b72bc19bc7bbb33808d808ebf49d28b777c53d40fa69bc3ca85c2cf0fb2
3dcaafafc241c80c646145936a07b2aeeb3dbc48cf79b8029b13f4d41756
50d9e9> ND 
systemdict /gcheck known {setglobal} if end end
end
/TimesNewRomanPSMT findfont /Encoding get
dup 116 /t put
pop
%ADOEndSubsetFont
/TimesNewRomanPSMT*1 
[
48{/.notdef}repeat /zero /one /two /three 39{/.notdef}repeat /bracketleft /.notdef 
/bracketright 6{/.notdef}repeat /d /e /f 2{/.notdef}repeat /i /j 
2{/.notdef}repeat /m /.notdef /o /p /.notdef /r /s 
/t 3{/.notdef}repeat /x /y /z 133{/.notdef}repeat
] /TimesNewRomanPSMT nfnt
/TimesNewRomanPSMT*1 findfont [11.2724 0 0 -11.2724 0 0 ]mfnt sfnt
286.466 342.694 mov
(fofst) sh
280.694 348.33 mo
273.448 352.356 264.59 357.992 257.344 362.823 cv
0 0 0 rgb
s
258.149 365.239 mo
250.097 366.849 li
255.733 360.408 li
258.149 365.239 li
0 0 0 rgb
f
258.149 365.239 mo
250.097 366.849 li
255.733 360.408 li
258.149 365.239 li
cp
0 0 0 rgb
s
117.244 430.458 mo
81.0112 430.458 li
72.1548 459.444 li
108.387 459.444 li
117.244 430.458 li
cp
0 0 0 rgb
s
0 0 0 rgb
/TimesNewRomanPSMT*1 findfont [11.2724 0 0 -11.2724 0 0 ]mfnt sfnt
82.5933 448.977 mov
-0.203644 0 (ff) ash
89.8972 448.977 mov
(x[0]) sh
94.6992 424.016 mo
94.6992 424.016 li
0 0 0 rgb
s
97.9204 422.406 mo
94.6992 430.458 li
92.2837 422.406 li
97.9204 422.406 li
0 0 0 rgb
f
97.9204 422.406 mo
94.6992 430.458 li
92.2837 422.406 li
97.9204 422.406 li
cp
0 0 0 rgb
s
200.177 430.458 mo
163.944 430.458 li
155.087 459.444 li
191.32 459.444 li
200.177 430.458 li
cp
0 0 0 rgb
s
0 0 0 rgb
/TimesNewRomanPSMT*1 findfont [11.2724 0 0 -11.2724 0 0 ]mfnt sfnt
165.526 448.977 mov
-0.203644 0 (ff) ash
172.83 448.977 mov
(x[1]) sh
177.632 424.016 mo
177.632 424.016 li
0 0 0 rgb
s
180.853 422.406 mo
177.632 430.458 li
175.216 422.406 li
180.853 422.406 li
0 0 0 rgb
f
180.853 422.406 mo
177.632 430.458 li
175.216 422.406 li
180.853 422.406 li
cp
0 0 0 rgb
s
268.617 430.458 mo
232.384 430.458 li
223.527 459.444 li
259.76 459.444 li
268.617 430.458 li
cp
0 0 0 rgb
s
0 0 0 rgb
/TimesNewRomanPSMT*1 findfont [11.2724 0 0 -11.2724 0 0 ]mfnt sfnt
233.965 448.977 mov
-0.203644 0 (ff) ash
241.269 448.977 mov
(x[2]) sh
246.072 424.016 mo
246.072 424.016 li
0 0 0 rgb
s
249.292 422.406 mo
246.072 430.458 li
243.656 422.406 li
249.292 422.406 li
0 0 0 rgb
f
249.292 422.406 mo
246.072 430.458 li
243.656 422.406 li
249.292 422.406 li
cp
0 0 0 rgb
s
221.111 206.62 mo
221.111 206.62 li
0 0 0 rgb
s
224.332 205.01 mo
221.111 213.062 li
218.696 205.01 li
224.332 205.01 li
0 0 0 rgb
f
224.332 205.01 mo
221.111 213.062 li
218.696 205.01 li
224.332 205.01 li
cp
0 0 0 rgb
s
94.6992 459.444 mo
94.6992 459.444 li
0 0 0 rgb
s
97.9204 457.833 mo
94.6992 465.884 li
92.2837 457.833 li
97.9204 457.833 li
0 0 0 rgb
f
97.9204 457.833 mo
94.6992 465.884 li
92.2837 457.833 li
97.9204 457.833 li
cp
0 0 0 rgb
s
177.632 459.444 mo
177.632 459.444 li
0 0 0 rgb
s
180.853 457.833 mo
177.632 465.884 li
175.216 457.833 li
180.853 457.833 li
0 0 0 rgb
f
180.853 457.833 mo
177.632 465.884 li
175.216 457.833 li
180.853 457.833 li
cp
0 0 0 rgb
s
246.072 459.444 mo
246.072 459.444 li
0 0 0 rgb
s
249.292 457.833 mo
246.072 465.884 li
243.656 457.833 li
249.292 457.833 li
0 0 0 rgb
f
249.292 457.833 mo
246.072 465.884 li
243.656 457.833 li
249.292 457.833 li
cp
0 0 0 rgb
s
[2 2 ] 0 dsh
560.442 498.387 mo
458.526 498.387 li
458.526 56.4038 li
560.442 56.4038 li
560.442 498.387 li
cp
0 0 0 rgb
s
[] 0 dsh
471.214 102.498 mo
490.175 110.199 li
509.137 102.498 li
509.137 89.0215 li
471.214 89.0215 li
471.214 102.498 li
cp
0 0 0 rgb
s
477.385 73.627 mo
477.393 78.0669 477.657 81.292 477.92 84.4565 cv
0 0 0 rgb
s
477.668 88.8647 mo
476.32 84.7603 li
479.561 84.7744 li
0 0 0 rgb
f
477.668 88.8647 mo
476.32 84.7603 li
479.561 84.7744 li
0 0 0 rgb
s
479.561 84.7744 mo
477.668 88.8647 li
0 0 0 rgb
f
479.561 84.7744 mo
477.668 88.8647 li
0 0 0 rgb
s
504.054 84.8804 mo
504.427 81.7251 504.802 78.5098 504.96 74.0723 cv
0 0 0 rgb
s
504.158 89.2944 mo
502.406 85.1523 li
0 0 0 rgb
f
504.158 89.2944 mo
502.406 85.1523 li
0 0 0 rgb
s
502.406 85.1523 mo
505.646 85.2295 li
504.158 89.2944 li
0 0 0 rgb
f
502.406 85.1523 mo
505.646 85.2295 li
504.158 89.2944 li
0 0 0 rgb
s
489.1 109.729 mo
489.549 111.372 489.549 112.603 489.549 114.246 cv
0 0 0 rgb
s
489.549 118.351 mo
488.2 114.246 li
491.346 114.246 li
489.549 118.351 li
0 0 0 rgb
f
489.549 118.351 mo
488.2 114.246 li
491.346 114.246 li
489.549 118.351 li
0 0 0 rgb
s
0 0 0 rgb
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs

systemdict begin
/TimesNewRomanPSMT 
findfont dup
/Private get begin
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/a 
<10bf31705d647142d5ee6b7c4c12c41164f05a89990635873917bf00c5a2
b1b299b84b64fad030fdefe54a736fd84981f1bdecf34c327a4087285dd7
ff9a128a9fff4f1e5e34e2c477e4543546f0e505eb84b8e6141c12199331
8a7bef58caa55697aff5d8bf4fe61eb63478ae931b5c51fe7be8aa76cee5
cf639a1d462398300117c6a9c09614a29dfc50b3c7ddbacc1c6e2f7accb0
35d51bb776dfa4f2180b5bfa695d4ee30d466764f5192b628fd7c4971313
cd38d55ff99cfe805727052d975c4756402eb9230dd87b777a603efe9c10
65e950375d54aa41ed1c701bfac764ae78b65834b8918a99ed1f017d5313
eb0950b1f45353f40dc633104ecc941e4bbbf8359d5ae9042ef0f4edfdb8
> ND 
/b 
<10bf31707b35db816a4355a1c9cd0401bf6033c55938246c8b69de26e575
c058903a4e9b57b68075848962a6cd3da069ec2730d8699e3ccf520befe1
1a090d11586ebd56effd705bd3a5ced6c4343ddaabfe70e422082141dc06
c695cc46ee2dde408c0760a4c361b784ab85994758cbad73179f314048f1
c5a0c06c0e0ad84ded3a7904f207403afdd3193bf093fb903dbdef2de225
7307e43f8ee047d711ed22adc155c93b72dbad1a68> ND 
/c 
<10bf31705fc10320935f517e088588bc677b6f6b1116d76a45fb5fc081aa
57ad08a2f19e4ebd5e7f2e40678b64d780ab49e945b6f1fcf8c1bf2edd40
201d9d025abf1aec5b1b3268a3f2a9365f1c6e4133cdb11264503de1434e
2553cdd7a1785e8aefca6abe49ef29279001bfee84321f1c29e0a5b47534
7f9b91833b42fbc209dedbbca6bb8dac3b6f01ececb32ee525fd2275d1f3
f94c46a2dc92d591> ND 
/l 
<10bf31705b0817c8e08e579d70bd731872938fa19da6249b22a36add018f
2d71afb39a24cba2d5b131292eaf2ea6440cd481b67673b68d5de7db4045
53f0515df79be16519f0349ec3761dc09575b85d12a0ca2ef3e3cac5171f
27c0bb5b6c16bd708dadf6acc7da72304e> ND 
/n 
<10bf3170638bba1389001ebc99bd428947467ee318fefc1fb124f3371d83
7e6e4fd04510bb88359fc2d65b2f295b6f18b7850f6ca41f0fd067e40bcc
1e6a5b41ca20f07f1559265c094e47681cd30c939ca836f577db4be36b05
95c3d60cd00f5b5495365e7e02e3400714839e79cc3816e739cdb0ba1b66
3f096ef3ea59642b52897d5ef4b5012d68776aa74244415b9e96a4f773a5
8085f9fe5bb74ace5b6860ca975ea43b7d0db4eefeddd777982336d72d05
c093ca194b7cd3478661a723994ed178a305b939140b4ac4b7ef4bb11e73
> ND 
/q 
<10bf31705e925b80bb44afdd80449a9019004483157f7a206da365a5b3f7
8e817f7d85ccb98decc0413cb1aad3badad1cc03a563c391c8aa6068d7e3
0e7f25d81543c3055a792149dafa6b421b59bb9a7c586f00d982f84e34a8
6eb81a6d2e5d0469a0475534487ff8a1de86976d09002e57cf1b9a5b9651
783da658816ced2d26e352c444560625e85828b2e4e4558755e30d1a05aa
ed4f42608d7e2eeedb01e0259b91825941bd1b5a38ce6f06522b93ba8b0d
c3140f68c73955f4b4bd495b40f7a8977e75e8b1c2519046a0f0449793> ND 
/u 
<10bf31707ec0b061a3e31ce6a8e02f67c79fc6fb9433b583752df0b97381
ced785f0788651d9110f4d168d6f4fb870b9f8634f66a1fe17ef5bb051c8
5b17a112a0ece57f7e85709c1e46ba1a1de6ef26a274c75bdde36925dd09
efae6e5faacef2f29e68904c9555df5e0f6550945360d079ca305237daa8
7397519a4b0aef19668718de15c20ef2e07af7217dbd27700833b73e8190
1c7d2aacb619fbf2f1396d79a94fea4ca18c65bd942fda84> ND 
/v 
<10bf3170612e88360faf380e328fa052d16002b3a6eb4d26fc61a8261d88
5d55beefaa23f749e4680928d2ec50b44ff8d74a2a42a0e615124d351c37
a9b6b3979ac1eedcff65bc4e156ed5711cac4c00ba96902c9956d3adb8e9
345080689b72e5082717e79b08e915301d3c209a4fac7e8f857cfb983000
d031a94c1a8ab5b2b0900013f2ae> ND 
systemdict /gcheck known {setglobal} if end end
end
/TimesNewRomanPSMT findfont /Encoding get
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 108 /l put
dup 110 /n put
dup 113 /q put
dup 117 /u put
dup 118 /v put
pop
%ADOEndSubsetFont
/TimesNewRomanPSMT*1 
[
48{/.notdef}repeat /zero /one /two /three 39{/.notdef}repeat /bracketleft /.notdef 
/bracketright 3{/.notdef}repeat /a /b /c /d /e /f 
2{/.notdef}repeat /i /j /.notdef /l /m /n /o 
/p /q /r /s /t /u /v /.notdef 
/x /y /z 133{/.notdef}repeat
] /TimesNewRomanPSMT nfnt
/TimesNewRomanPSMT*1 findfont [14.2728 0 0 -14.2728 0 0 ]mfnt sfnt
526.042 99.5923 mov
(sub) sh
522.87 160.369 mov
(mult) sh
525.25 296.877 mov
(sqrt) sh
515.748 359.881 mov
(recipro) sh
522.084 420.022 mov
(conv) sh
517.334 472.525 mov
(accum) sh
490.175 146.044 mo
468.536 157.846 li
490.175 169.649 li
511.814 157.846 li
490.175 146.044 li
cp
0 0 0 rgb
s
490.175 169.649 mo
490.175 171.125 490.175 172.108 490.175 173.584 cv
0 0 0 rgb
s
492.142 173.584 mo
490.175 178.501 li
488.7 173.584 li
492.142 173.584 li
0 0 0 rgb
f
492.142 173.584 mo
490.175 178.501 li
488.7 173.584 li
492.142 173.584 li
cp
0 0 0 rgb
s
475.562 134.723 mo
475.57 140.041 475.859 143.903 476.148 147.694 cv
0 0 0 rgb
s
477.942 148.074 mo
475.871 152.974 li
474.396 148.058 li
477.942 148.074 li
0 0 0 rgb
f
477.942 148.074 mo
475.871 152.974 li
474.396 148.058 li
477.942 148.074 li
0 0 0 rgb
s
503.059 147.186 mo
503.467 143.408 503.875 139.556 504.049 134.24 cv
0 0 0 rgb
s
501.254 147.511 mo
504.8 147.604 li
503.172 152.473 li
501.254 147.511 li
0 0 0 rgb
f
501.254 147.511 mo
504.8 147.604 li
503.172 152.473 li
501.254 147.511 li
0 0 0 rgb
s
477.877 234.322 mo
502.473 234.322 li
510.929 206.651 li
469.422 206.651 li
477.877 234.322 li
cp
0 0 0 rgb
s
476.866 189.597 mo
476.872 194.037 477.139 197.262 477.399 200.426 cv
0 0 0 rgb
s
477.148 204.834 mo
475.8 200.73 li
479.04 200.744 li
0 0 0 rgb
f
477.148 204.834 mo
475.8 200.73 li
479.04 200.744 li
0 0 0 rgb
s
479.04 200.744 mo
477.148 204.834 li
0 0 0 rgb
f
479.04 200.744 mo
477.148 204.834 li
0 0 0 rgb
s
503.536 200.85 mo
503.909 197.695 504.281 194.479 504.44 190.042 cv
0 0 0 rgb
s
503.641 205.265 mo
501.886 201.122 li
0 0 0 rgb
f
503.641 205.265 mo
501.886 201.122 li
0 0 0 rgb
s
501.886 201.122 mo
505.126 201.2 li
503.641 205.265 li
0 0 0 rgb
f
501.886 201.122 mo
505.126 201.2 li
503.641 205.265 li
0 0 0 rgb
s
490.093 234.79 mo
490.544 236.432 490.544 237.664 490.544 239.306 cv
0 0 0 rgb
s
490.544 243.412 mo
489.196 239.306 li
492.34 239.306 li
490.544 243.412 li
0 0 0 rgb
f
490.544 243.412 mo
489.196 239.306 li
492.34 239.306 li
490.544 243.412 li
0 0 0 rgb
s
0 0 0 rgb
/TimesNewRomanPSMT*1 findfont [14.2728 0 0 -14.2728 0 0 ]mfnt sfnt
525.651 226.555 mov
(add) sh
490.174 301.005 mo
510.928 280.254 li
469.423 280.254 li
490.174 301.005 li
cp
0 0 0 rgb
s
490.174 301.005 mo
490.174 301.005 li
0 0 0 rgb
s
490.122 263.191 mo
490.129 268.509 490.418 272.372 490.707 276.161 cv
0 0 0 rgb
s
492.501 276.543 mo
490.43 281.443 li
488.955 276.525 li
492.501 276.543 li
0 0 0 rgb
f
492.501 276.543 mo
490.43 281.443 li
488.955 276.525 li
492.501 276.543 li
0 0 0 rgb
s
489.479 300.659 mo
489.93 302.3 489.93 303.532 489.93 305.174 cv
0 0 0 rgb
s
489.93 309.28 mo
488.582 305.174 li
491.726 305.174 li
489.93 309.28 li
0 0 0 rgb
f
489.93 309.28 mo
488.582 305.174 li
491.726 305.174 li
489.93 309.28 li
0 0 0 rgb
s
489.288 364.714 mo
489.698 366.205 489.698 367.323 489.698 368.814 cv
0 0 0 rgb
s
489.698 372.542 mo
488.474 368.814 li
491.329 368.814 li
489.698 372.542 li
0 0 0 rgb
f
489.698 372.542 mo
488.474 368.814 li
491.329 368.814 li
489.698 372.542 li
0 0 0 rgb
s
509.019 347.277 mo
490.175 336.808 li
471.332 347.277 li
478.311 363.328 li
502.04 363.328 li
509.019 347.277 li
cp
0 0 0 rgb
s
490.993 318.558 mo
491 323.386 491.263 326.894 491.525 330.335 cv
0 0 0 rgb
s
493.153 330.682 mo
491.273 335.131 li
489.934 330.666 li
493.153 330.682 li
0 0 0 rgb
f
493.153 330.682 mo
491.273 335.131 li
489.934 330.666 li
493.153 330.682 li
0 0 0 rgb
s
505.015 403.948 mo
481.166 403.948 li
475.336 423.027 li
499.186 423.027 li
505.015 403.948 li
cp
0 0 0 rgb
s
490.175 423.027 mo
490.175 423.027 li
0 0 0 rgb
s
491.014 384.418 mo
491.021 389.736 491.311 393.599 491.6 397.389 cv
0 0 0 rgb
s
493.394 397.771 mo
491.321 402.671 li
489.847 397.752 li
493.394 397.771 li
0 0 0 rgb
f
493.394 397.771 mo
491.321 402.671 li
489.847 397.752 li
493.394 397.771 li
0 0 0 rgb
s
490.473 422.848 mo
490.923 424.49 490.923 425.721 490.923 427.364 cv
0 0 0 rgb
s
490.923 431.469 mo
489.575 427.364 li
492.719 427.364 li
490.923 431.469 li
0 0 0 rgb
f
490.923 431.469 mo
489.575 427.364 li
492.719 427.364 li
490.923 431.469 li
0 0 0 rgb
s
505.876 465.747 mo
490.174 458.768 li
474.474 465.747 li
474.474 477.958 li
505.876 477.958 li
505.876 465.747 li
cp
0 0 0 rgb
s
489.484 441.703 mo
489.492 447.02 489.78 450.883 490.069 454.673 cv
0 0 0 rgb
s
491.863 455.055 mo
489.792 459.955 li
488.317 455.037 li
491.863 455.055 li
0 0 0 rgb
f
491.863 455.055 mo
489.792 459.955 li
488.317 455.037 li
491.863 455.055 li
0 0 0 rgb
s
490.751 479.17 mo
491.201 480.812 491.201 482.043 491.201 483.686 cv
0 0 0 rgb
s
491.201 487.792 mo
489.854 483.686 li
492.998 483.686 li
491.201 487.792 li
0 0 0 rgb
f
491.201 487.792 mo
489.854 483.686 li
492.998 483.686 li
491.201 487.792 li
0 0 0 rgb
s
grestore % PSGState
%ADOBeginClientInjection: EndPageContent "AI10"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse

%ADOEndClientInjection: EndPageContent "AI10"
% page clip
grestore
grestore % PSGState
Adobe_AGM_Core/AGMCORE_save get restore
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI10"
%ADOEndClientInjection: PageTrailer Start "AI10"
Adobe_AGM_Image/page_trailer get exec
Adobe_CoolType_Core/page_trailer get exec
Adobe_AGM_Core/page_trailer get exec
currentdict Adobe_AGM_Utils eq {end} if
%ADOBeginClientInjection: PageTrailer End "AI10"
%ADOEndClientInjection: PageTrailer End "AI10"
%%Trailer
%ADOBeginClientInjection: DocumentTrailer Start "AI10"
%ADOEndClientInjection: DocumentTrailer Start "AI10"
Adobe_AGM_Image/doc_trailer get exec
Adobe_CoolType_Core/doc_trailer get exec
Adobe_AGM_Core/doc_trailer get exec
%ADOBeginClientInjection: DocumentTrailer End "AI10"
%ADOEndClientInjection: DocumentTrailer End "AI10"
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 10.0
%%For: (ev02) (ev02)
%%Title: (grav_float_nodelay.eps)
%%CreationDate: 12/13/2004 2:00 AM
%AI9_DataStream
%Gb"07HZL/sOsbMS*mOI#dVQ&;,eH>diuOgRCHFY*21of27!=W7eU=eK:a@c$5[j/T`#bE:If=DLLs2qMJ1-;JJ@0tsA0<YaiVj4/
%&!+fhrGHh.F+/.UrcWMbb;YF/NRk@S_)=T7kKeVO]DlmI_t7[e:$Z'R8D&)7GtMpW8*PGkU6!C&5<lkBS"<u:IlT`b?<usCBCj<I
%DjoM8jS82]pP8A3CPmUeH8`J5e+DfFk%BnLmpH"_jY4r;Ru<3Xl1F%sZod0V=,3][l/DR2Ci\A,[c9pMMC\\te`?,iRteg@rnI&)
%g!.Y2HYUn!jP)J:J&Q?C/,nSJo_P#&9=64UjG,td%Qj5Ue+%oprUa1IRD3KJnbb?Dq@UL!%\a]9q2<156(Zg.m;%ruo<">p^6i5#
%/go8Ko5gq".]*0ZU6j.(oZcH/FtHF,qG\0ArjkB-s&\gJ"_+VoQ`!l`r(m;jr*O8GB5:cJDbK'h536ej@GR<j8labu^Q3-:,k,)L
%*PL#aK3G:*#Dq2l0n22H]9l<qVbBH="X4hb48M)GQ_ZI)S1HQd>qn1`q#%.iXQfW2l-J6Dhs\7)q<d-LVLkA^lPHK!T\4M12::\/
%rPQlrHMQaqe*B,m45VA&q*3/#VR$oUfah^/T(kUDpifL'EcUu!H;,qFTA<o5WJt2/pSXLeUWJ;Uje.e*/uIebkC;HVDX"=!SiBD8
%7uZSeFgOi1U>_&`#qI;G4#3.3R3THo$N9D`o^1o=2`*]b8ESIsPDe\e&(BS)Dmgk0MoT\8^A]@bRknmVAkTF\h#D>=HI>`=cnsb[
%Mn@ca_7rtKjdsjZ?!gCR939$3Qg\h;?Ct"g0q8@iMPuZB@!>3Xmn^)6Lc;n\rl=YtB(s2#ZWp!b`o+?#pmi%Hn*QBBA+2;ZDiMS;
%A)o4;H-,23P'N,']LOaGOj*^?_bt/?84.X`nN/&BSe@3_KObAI2j3Rq+kb]nZL7,=c/'Mi*$4,,iM$"9rU:@)%M'kL1g6>!/Wr0V
%/[C]:`_^h@O:;*)D^7]b8oNf33ecH^K21AapUpujA4F?')h4P[pl2"YYbYrS$GX.?#Tt&a6EN#?dK1[]fC0_n%M'.QAr.H[,;!CS
%6\XE\<I-;=OQK4%Ujd3/RAuE<IZOtd`,?>9'.H)2GBr0Z5Vhu:bd7e<A4@[2)h4Q663m:V)ilEF7PaTJ^L]0S>\%fM"fScS!]Rhi
%;OKR[U5V6ual&GhOkr_9\FJ!(WEI@rdj@Z/&(7,'KgsHUc7V8HfB=H.,FQn>qC(AJRIM51cp>f\W4[)4%%l#mP[;GA&5Ai[DS2'i
%&4L#j1:K%8dQSOqWEBFd)daqhoM:p:A>O`(?4)egnrk"GN%1&DF"[V@73(lZOE/\GP)$=Zmd9hO$s([Z6Ks1/H:m8b4Z*u"mq97k
%F[$gY;]/?Uh@E1lDJ=-j=ULIr8p1&aB80$DJ$bMCrDS0HQ,!3or(qS",cZ@::C-N8s-0,mjmO%%m4nY-m)Z7,.6kGVnot+u+3M=4
%02_[HILZkKn,=b#?2_l)O#b-sR:#d%r$>/2;;48".(nGkSVZ0UYTJXE,6"XhIFPPlnmP_0,P"?bc3Z$g&ek!#Dgmudr)7&sG$D9`
%ZAf4RT0A"$DP;5g:uWjh+828FD_A3BH,tth'&&19S0\R.7&E/Fr%<[4$K3@D`rfJ?VK'W1$^<PgmGl3[Y$j)-87H[+$\keAm#k<Q
%]Y]/H/WpZbMiF(t9K&+YNjHjVC".>Da3>\Aak<"RPp/k\_]haIOucBDT!1O,LWc+.d#Nl?:Yb6%4ZNu3LBSk`dnc\.j^Ns?U&R;g
%O_=u`Q&4-(\UhkJ&<eKEcnID"a8pb2!R&H%m="-2QK??NRal9s3[?;p;tsQ$Ag^C1\6d+>FJ\[l1aPNJke?Q*68I5Q#3Kl,HJdLd
%+c#sK$O;XQrD<?d1X0oj+D(uJjY=Oh'70q)\kLn.)%q??A;TZO!JAND%Zg^-eMgd,ddl_V6]knFj.sLPTGUTUYn6\\Ce@[n@?@*1
%57chg;*Ds2ZDduLjn2.l%Ep([C0fd\)*.ttr%^KrQ:00j&VpiFiLr>l4dN25!94WF9X(If",mW>DKJ[E,C[fn/L!L<)/9$.;NUqD
%l]HdT.RH@VV=pEN-q^HW*Y@mM%T6o;T&2>R("s9=gfH]2ITHl@CkXc'b=FEC%?tu_2g#Ac.aqJ)FLuZ8$E3a*9]S[(n[,_m@O(#c
%a^q@a"JSVr6ni?K,JDPbIFONc9ceT0;s:hM;'lXT9Qto$&o,=R4EQ!iqghqN/JfcS=.q,RU!h(US%69U`W9*#3@^ajWjV"Rp6kku
%]VQ>NR-VokhXaYp\&[=7']](J(AL&er,==lDP7g$OME[*@!m[o(4j"1K[Cj<&>&5Y^+9G>,@ND=EHup7:)W@I2=6DO:E#7Y^5+(5
%FT46l(]E[]iKAEd%$i\!-E1l*gIOX3BS=D(+-UY0,2m`8]*4n8:63mc5iY[#4tfg%Q<aH94AZ+_4R<I"CYZ.&IF![c)=W$<eZH&-
%f.K]n%miYRHamb]6rg*_W%QDlN,]T]H<sZN,hE@1X0OYDHst(5_*YDA"Lq4Y_eQY:i])B*R>D7b[`CO!4HfrUY&P1'=4B;O^&]2?
%NQ?kOBDRIY:;d18=/)\;f>/"Jr;oF`MCJkS*?.qu!lkc6^!u6^]&El[V=5ZAGG?d$.Oar."#X&>%V9$(:bObV-,QkL67/2=OJSm2
%]:]?,^!qTf_iF"!Fec6Y+eDSZOfVTBr4O$;#:ll4[3%;`m=11d?9"YZF]hRb(RV%@@7TBR.9uKba;U?/(7O$RCa"qS<F$0h-5Ka<
%)8R&M;oP#tdhB"PWG_0jOY9.fFXR`(bI*Di?RA8YN90/80_04^N/Ud+Pmu;em3t`#N=W(o]J_t`+hPcU<)aXsKlO;(l-%3sikJ:p
%f6is$?g:Rt+;B\/p23m+/V%)6WShYC@Wf0VM<d%+F?:Z=MOFMnL2J;#<C3g0Vfqoo(285NDmrTW0TQX8k`Mo9^=T3"LWdA)Fi("j
%Dg>TSgU0"kV=o=,pO0HaEnG8`$k-G'[t:6c`d/$=e`&@;/.uZjKd*>L2PF-3)qT*\Qc\;/MJUlt'0@]`H"XCMChf_h(H?@-/f9d0
%LPb^LYcu_P=2X8S[1=0Z8sS8hJ\:k(U'Olgh:>8faRR$_J`b?5;Pg?q-s$5S%;*Ge68j`_dpOSZR`h_)*:*(,^!r<iHr4Ps@o?af
%+r&mjZm,p^<MgL=\eSpLdVKL7X(X=r2t#%l6rAkO9opRa.^QX6PQpl:LOPBN4#+tY;$pZ43/V*Eer5/R<Rea?Y=6G<",k#GZ:Vr*
%*6^ge>Lg3E/LL]5Do5X%XX:K*JTcJ!<BnJF_:RLp5m"9X\:MZF8W/s\S#F=q5VQbFQm#S20V7m!jY!@b':D2JRSiWRW4f;r]jt-e
%)0Mq`D=V8gVspX:4/f<4ooe,pB.Yt/qjHO.*N[_nriF9Xe&P3'27!_Mas%XWDS2#(4mk$Io^*#RZdb-fe=2cH\n[#nmDMlf9&kUC
%`;EPVks\7j!)/:k/R&_ie2AME3nc_QNs8W3Xu'B#VhdRB0[\Og5,?E>EP5B7[\]uVfW<g9CTf-f7bE`p6AduICaRulp]\OZ"'(#o
%&PZ6"dpXoGJsqErHJ?LK6$)b93]""`/JCg';c_k^3m`([Dje1P$[[KZW?XX'nLQ6H#$2%&=P*6>^V/_u1Q59_+1Dn_G?C`A+5s40
%m#OY`&[\iW1uRgg&VHsI^DGgC+B\`J%kDJggsuT"@#RG0pfds%f5"n$L3DkqXt"BDYLHtgrE-6+YCiZg*DuP9loE]r=I`d'N_J5F
%F$(Sk@`.T2'2lprd>$b.cWsc."fZo8Ukc4RRQ](8.APei/>KsN['#A]T^d4;DQh*kKu#5A16CpiWM'R^`G&I#jaQUcJZUjlW@GRj
%l$gu/];d)CIZJ&sY/<eQNX0AFVY8d=LIHtJEm/Q:.RsmmY:A#p9cksH'lBa`,/!=PjJr=!G)&Na(IT@H49Md;_D&8hQ"?[nIOi.4
%Q#iMN-Q@G*&,%=ce\(=YK(]N\%"NXONZ("+l[%=DEa_<+<UGmm]2=,jSdXBhC=N3p(F*9JbZ<@.D,lNJ>$MeNoWiRIbLlMHRVLc_
%jBUmj'=U1Oe3P`^hoqg^&"'>tn(B$j7p6_@_.%Cfi%46h!_S3iCiSol>]S`4fY'ILX1kEg5](%WcEs3t^qufi1a+Je[je?[6]5*M
%A$A1[$Q+#Z2uVh(,CsZ=k/rk2W.G@"LO!6=]X-I)$]i>qg@F)V1@%cdJ_JTDEbkdk$kT+pWYi6jjDE\X%/)rk;bbTUh26b_9`sYf
%`sk<q9,CW>33I148<LT9f^8?.WJ1L")0`@h1L)WR*?1IE1(`cb^5g1q@GY`4L8c]ic>Y.EIu#UT1oPoi_>AdW>C'AP-Nh0r+t:iq
%$u73[rB0Oo64S`h=D4C@&1L)s(>-nh00H-CD^?<-#&S$X)sB%EF5(R2*p&Ba83#B.*jJ/[P[3a)Z`"N09;GmI_P3r`?9p&I+%8%<
%8F(tjHZge@(18*skk`8up:[Bm%+Kp,Q;&C5?oR?\(PoNJo0@UD.7,>p2n4iSkQQn"U+AIa/JncSK1=s7lb+G^N+St$Q5,^bL?"j0
%H;"0T"VsW@=+f<'@<36N_^-L4UsS;<f15;q1t!o>U/dN&4>1:&o8nqKV@MEjmBu9Sb6eK=4m6'u_3Qh=NE1VJ^.>q=<nN[(;=UmV
%4YoPWE>\,e/F<@8!%HQ(ph\Hn@Vd$Redfk7/VA-\(ULm:U.Cf.Za'<\"8-&VMXbO+cW<-hYjBF>Ms)aY_o6+bHNEHkg+qmb!f.RS
%Xt[c7O)W#YFsu;X\iSu`Kta]nh\?[W:?bN>lUFg\1Mh$H)BVT[LB!h]f7hcT:u#K&^!<\$mgdW=E(VD]pZ?*JAqVriEe<EMbP>uR
%2S\YZi--iOf/FMlja[t6r,?s;]mThGpu_.1$FuNDs8DTfD0(,N1Ms:ljmVBY[[.K12=Dm\Vf1_\f?O-h](sZU!tN)J4SuQl`:IWa
%2(,<Bf?MF^7IqG..2`Kfe)Y?!XJk`$qBi+bq;Gf:QpJY4-eF]_^GJ/4?&OmY+ippki?*Og,i?-nVZ&KRdrl;75F(FaUP@/LN\=0]
%Y,R(<C3OmIPr2c@BdnddPr]E#O68KXfP'H;alVXF"*]pSWB&T.B=$FB\5CuBi^WeE?d5)9ATKT@a<f'!mFgb"oQoB<k*(uKH.Hf(
%c/10B*]Mh1IuCSD2lF!G]m#Z59[<[KF#&5.IJ)uDG&qeS3Ot_g^;?kOpQNe$B)9^@]4UrjldP1Qr:Pj2WC0Rhm[K38i-q(RrOZ"2
%VN^)*@8OH(NGU'_L@4h"jhT6eVWVm$h_ed>ldpbR.3JPn3#Y=U5&2Jm-RIrhRf3!FLLI5D=Q5D)(E[lS7L;ekMmAkE?V`?4:M.09
%4:'[YmlsRH&][ttgZ`ifhYVBn)_Jc.l#&:O+Gd&tK*Yr'F,)f5nW#!;n"qJ]pSZ'\k.`=`J'r!RRYq.@oRt6D^REV1e(N8nWV.,j
%!ip+/r\?Wcrp7Cgf;If"8kc_<JH*1_MA`;Frn%,1.*>/%o`+aZkDKZ/,N3m?C!MO<NQ$H7'dJ^*-Ajb[Urmh%*&K-BQ].\]%e1lg
%NU%L`@RD;SW@5qCXJ[<a70Q1M#(@KVq%X(8Mj-7[cA'?7fQ^u;39!!f4]Trg5+r.BT4e6_$pg.`j!2jDdaNDbV=;XkL>FoT9[JbT
%dYL<aVT)I*BKK3?nJ'F&2T3t"R[3i#>XsBZj*3JsR`b+J92260@XMFR9VG>"1qoa'.5Y?YDB<5\Vtr7#i#Os0)4l'f,cDC<U6.5P
%rGACGBXt!`dD3:\/Ys&'?L]OAUXPq,e9W$34H5EMHtpDT%?dZ'GWJfq&*d2kK[_Cg)[mr[TFKC.*?1/NBND'OQlKg`5R9/`0cI#_
%S6jTB.;Fg9mV!d^4H8J]F"eeq7[O+>nMqYMg4*\6I<.H=/Wl]0,XIs`FNM]Cj5dE,RIS(+RQrMoLfSO18:ZFadhMRPqF>%Q!S$`[
%1n\P+E)DlQ3\!f:l%1PW[*d&IC-Hci-Gb61Qsn98PfZL1(f;"W1MWe<$doe_71i5U1_t<`USAb\d)=QAkT*!M#MXe,:gCf#@+#`;
%;eE(?nuuAbl-K`ocqW$f:blelJer%9QoTth(nOkpT!S=?M-c\cYU=a<L*1W$)JMJD*H<b*-h/lmC2>.>V/_?XaWb?^ohC69f:Z?j
%'4fao":CiZ<'8DMjq'gQfsR+%d<HU^%Kk:Y+gX!6<cPBFGK^J]qIcc_4IreKMLo/5b)V=qJ4GTXUEM5t<.;ug@U)267Fa/n:d]XR
%W[#[0]Lf3a'r.6C?F*%$*Oik/*25&^%F,OS)5]%jq@^@@#(#R@,,Ff;SW*IL4kUfDPlX2[&Jcud?n_R%')8.Ql7\_eF$,$_^GMh;
%+s#lSbdaU>>euF#6<u!:B0rs_i+55frS4PA+(gX!W+CuY%4mE$&@DNq4<uBV\e`#Uq*kqT'JNhu&>h:Sf[U/EAFHU]56-`^Ju0=!
%L7)]8V!]2\8'F$6O&49_I(Kur@go$HTiFC0=b,m=Vf=K:#TBBuRb&1JFttk*)eh,c+dp^Z)F58Ebgo>9JQZ:;<fPW<r/4SeF_Rmf
%RK=]>?sF9Nn^C,`"DNGsd5]9I\BdKr6*<3J>iT]1Ns>cJ(;rK[l;MA,!.]ilC+9u99j+%6SAokG<2`ZuU@npo;.Y<(PX_6h1GCs(
%q#ld)dSRion?V()(MG*mpaodG!4<a+JsEn*^<lXmTdGm3'MVDd&nnXT8ml2*#-6NNgYoe/pm1].MSW67MT%kL+TiR55f(MQJ;"H;
%1oT<Yhua[0-a1>M=A-JX`+f-k=X9[`;FetWB;e`D#a>;i%EBY(cu^uR3/A@kYGY\69TUl?^_G]%5[AI5c^=h%cU2SoObZ3[>KVln
%`T-/br'2*n_G$+$K8G5#(u!C^ZuB`sE%^Olc.cT??KA-6\7eJb&1f,s3""fZ+ghcs\YWmPP/?Y?1qt:j(]nH<aUHSAQ=5V_$`r@W
%^g,>6;@$A*jTJO8dO0aE'p^O*=C04a^oNBI=D?p&lnF-%RO_eID%]q\"R0r$$3_8cPfRW+iX$m72GtQgI=C;u'SNJIb<[]M5f+oL
%<bU9>;(OAp=Fn:ged4GN9sTG3L/Uhu!dK<YIH$nD^&iIUo;tQsGX9L[G<reeaPip%1]h,2!/U00)l\'f-T"Dd+/f3<BdX90&tl+l
%7E!-cM\2&2T>F$S-6;d)E\Ke"Zom[dX)/V)d7D8=c[COQB14?OdW6,b##OPqG'QrHH%M7gab-3'aHN^11I5!bP<^Q:=Br1K$Ugc&
%O;kEK,iG<;`'PV>8I,jC"clF0A!1^<n<\IZ=dh]$!EZ<U.Wu6EG]KE%#a(6gP=<Tf1.5/2FQ+Xj9#3)K?T]*EU%>O*Xfu>l6:106
%+b5mM/AqhN64er.6RpEH1.!#f3l*c:0iQHnZHOCnAOGA&2MJQbe>60?;*=iH>H>sDV*JN-?OP5TXIe/lNBFAg?%^muA5Pe6)3bCG
%6t-F"Xt@O&%9=g/Q6i)H&?>uZ-$6$&&(Wa$7&1=W%d5Am!gH4X/0tf"J9W`q,a!p2/gLpM==`X0ADqWtE`CPn$I"*Oa*]JVM`Ynk
%$Y3I6,hai826ak^6_b??Q#f'p/;g^,lt'&7`E,K*L*l8TNI_T?K.I91KRa41aqp_'<mD*R+Do+$C-N*oN%Qk!Go4S#Tu#';PqNn;
%+I-0S*%FjPLm(E)$kS8\cE9]>#49otOV)Uc5?0-!;ui::>9d4jWiq,bUKN=]#sc!k>NR<Xg+%0?&buVdTOj6()E<%P8tTKnQt=YN
%1(ZhZ.!)q/a*f&]+MoFU(V5Wa9S>*H-pTOU/I4Jg78\kkIP?%4"Ld);0@LHnbVH4fa,$X8eVJa%d'#-:r6/CS;3Hc0Z0ICQ>#@U#
%9rNcQ%rKMrF5k=5T-OcN8kY\7'j]3:<[1^U$B3u41^jQo6OASUZOcCW[7`XJ/>Qd4P39)P+ufqq*5O'?.Ze(9#?lh5D17@V_rf&@
%V1G3mB6fJ'Pt^UO-=VLR?J(DD'fDaANG/>%+ubAq]od5nb:jCbUG=5NdB>*mM?\b=1IPYKe$E^!Y/Shj1P#oG6[rXk'(?Bb8r7Lm
%87E%6Z:g@>F'L6:.^t7T3L5ske?LS1.$o23[NsKdXS8S(rj*0[23/\_UW5s!Knp:mAV"Z`MMk.4YhC@r)]/qW.;Cqr)'H/jjrfns
%%('hg&?(<^``Plj(i32@>Gt"2AHZqFd2*DM$K;*k!P-3MbQSX\F>4n'?%-BHbA7)NZt*8LFXDkUKa?'S&.s%G#o%qU*1Qq8h@/t:
%V&>GNAJL$,,.H3DW;/.<.3T8).Y1]i.S\+mPQqPO8r/1nWW9M"]6.h2T$JS:1+b69)T\JNj'_t^4suJX&.)TLA#pHZ^9l.knq\QM
%FdUj@#t,i/=EPf9_>K^4-S-g)U1jh00bA"OD7?6d6!inG2`;ik5b3Tk$Jgt%!Q-<p'nS0]I)*BA-)r<dmC;k1%F/ocJ;\:Y_4=/Z
%N?AWMJ_(R)NFBU)2QNiO&7$T<Qt9]n.]pe/*KMn9%PiAFSMRP\J6AG>,KEh*!]-1^=q?3m`Q'ab(4q?6&;(PJM<li.:G^.JMSrC>
%>-Gl-_]TRo)?Thf<+To?ZA;%%Lb>ol_AF$,<$]g#r=u&lB'ITt`TL?fJ!_EW$nifL`iNOj+>+S?1#&FH6B5ZYN>:/4K2"7)FV<fS
%p8>7.Pf5hX$qR]r1^,9ia4ZtSNIaj?CBbOY))(ET0EdIOncP<j<P>d'q#1EVQ_;iMN6Z&rk[K\OLV]cY&;E?(C;(AQYSWLVes;GX
%LE!+2$@=EV-sK?//F6L%U&,!p"=+,T\9]![PjDs$B/@;d"kA7)@,mQ$"&P]SZ.#u\&7K0)7<W]J#sj?o1$Q83WChc02[:Nc&8Hp7
%crekf?ua@c&N)NRlRD1oXR]816C-(+pcH;sTK_KjLo@;0lk'AjKFXl%=q+qZOS>2$#1&40@_68b)&L6RjT)W;m3kkG7W9n6h(YY2
%m5b]/8uiSX+WW(ka$#JX<\%V'LOotN)p8AioWnf1b84psN@Z;BN(Rh@ff$$#+-9R^[N'l.1$^u_/T\AgR5i/i%3b:0AR,u!,qUd7
%\-Dl--)DtriQ2j9$Bc*TrMIB)B&<AN#\H?7a!`0j=C-P?T'aC\2bTh"GqlKPclAdQjX:^59.gc1$KB%\b;8Um+W(>0ck\@,$iJp@
%?f&-:9Ictk;\,nk-u'5>adlV^BYC?!B=tVYl=SKNP<Omi]JP1MZ'1gfM?@<L?AS)3Bf6%6VuW#H%9P/hT*E@l!-sksTbTqX^f-0%
%L)&f&.sI[q:_pGWJgTZ85iEk6J/EFc!Y)dE">#;!eJ,i%kR(qX)TZI.iYF1,fSY;5>OV_hl<"-Y0l5etM@WmQ=:`A<F`o2$bkgj6
%KA:X9aj'J=Aq\s6OBX8?RB4pu*`,Xo_ca;(L*!S-69Y(Ip-QJ,@gNntNXE&s!8C8j`O8bk4*akMK?C?2V_YgY9Q%Ql2kS2Ddh\%E
%OIOGSAhpob<TFq,8oD5'>H6b]L"rbkS#PHqoEW#4\_0Sm.?g65[0C0*QU8Yq&k\I6-F^ot+F,EkZ=:1+&Ag[;'*2VI2Vs<2"mXio
%JL@]gf/H[HQ4a?U5l(cE20r^X1@dQi5&cTp'p'jCQB=Ub#dTOd%;J:K_^)Xd;&M27bsm-(bQS9LDV5X/"#!=i><^PkD?Uf!.1%rV
%PsEE/&]W*^5YKHA&h:>sN9h<3>$E[#E<@>'UJY3&($7<4lI`0H;#s+A?EL_<N*/Jg6o`>4\"kO(KPk)pfN[>G?YrUj(V%+oAT\91
%JRtPV+_1+@FJ1+I*G*P]l(SFa\H0&[o/u-K#YCW\+HQ[`aS;``*CbUf)M'#p$:^in9stRCN3]!^PSK/J[prD4-q7c"ZAdZZF0N"p
%;2j7B=b;nf9ne:$>qq;>(flq0f2]@GE<laRR.jQg@7]-@P<lP`C`plHJUJg'?Pk;LmcfkE2u59?'V_BWW-`'A8UqWp?r[n*$lM1J
%^)+(C.%_l<Y>jZs2glfEJs(h^j*^3>+J8efK@G^bM[a,^C#CgmJl&j@*b>tsQsaO3houpW?rVf-fC4kBB=f=Q6SCnQ%26D@lPYts
%T8d8j'8>OB=0]@S&bo'9r&]2C$An+i!3$&J`'1*NAP31B/^6`b1^#RX-jgLoMFo.ueE,(EW"XtfI3?^TM208D^-LPldm^@:d.8Xe
%HT!Q1kr`5;IK\t-JC,?t4Br.1OZM1c`o\jo?NuW%Y/itN3Ws*PXHu4p&713CiR\34cTrik3.b,Uc3[)OWU0@(e-+Hm`s,.!lNjL!
%,(b(O]f8r8@#e\5&J5kjXl2E8/ABc\QE:"d"kf<a(DhsF_TiMD&VPBC6dgBJhM&b=!)j:!M,PJ@!4+%A^kP3$a(cC1dq^?B";sKH
%GrQC(B4a/;YsBt=df:CB0usU^<Z75O)a5<B-rq%l<EU1([;`c+kp%_R/r8<C@/$B@Ngmqs>j'd'ahiN7<]auh+ksaoUOZq+4>BE3
%@9fa<(?CFf2b\:qo/JfX5kW#W@abQ/#SE'Lj@ZeTXjj-!W[9bm<r^hkcSA-CbpZu."s=s<"/>5bd?`d>"[lPpYul4g!lDOWJ<C<E
%b_3'-<'V/**_[LjfSiop!KEZ[M%#40k`F%B;ZRJn(IK>R-=X[_n?,$aXABYu.nHQfp8L5P5`hr]ap3QlWZYsX"MK>Y0%)NDb-OPE
%mF1qR"?l2`UJ(kVlt-QF@f%i8.8M_m*42*efbZ)L@pUNRa2UMml;Xlo"mNf)O_m+o*Vf5[OrG`)rl<%"Cng&dNWociA-4V4?*#7^
%$e0=(%qNmo_)QB-0]?WA$FI'JRhobo\r(bRDf$HMUgV)Y`]W*t9VNIrhRg2>iJL?eR7Ug7"I%QP[0/R"AiI0W_cCGVAt3Uidif[m
%&B1e&^<4KaI+MbW_^-(+1T.GW)pK+E5[lt.Z^I6%K8'K7_M0!fEoltLr=!+h;BhlI$O%-B@FH_Gr*4.@:*pqX1j^8<ZAp`G,^)^g
%>C0o2K9r4Gqm4']&X]f;-2&/Y;r6C69*-0R*<e:?Mi[SbW*++rr>-Um7c9AA5?:2A_&/ntfVO2,l@[G(>jS3/RS)7U5n!m(DHN>M
%`9OW.)mNs_QTP8s"O<0TQs',HU>[U$U5Hp1BEu2*N2P"18TCB^HEr1-&W\/[bG#S[nXMT^1+9K)l"0UHd"7)fU0QR5$F4;q)+Ei=
%e`4BqpSXpnj::Po!dSjX%?am;1TqZYUEWYUIZ:m2AM4oJ>l["BXYef'MD/_rTM)6!H_iXDS>:MR_T4d+D0Q/?[9=tR9L#UeM201g
%G*a548oH:p1%@Hl(=_Fk&([X(36OVX56]`"_d,-REgYB4`Gu[".PX;JL'?>$cRPGE1mCE;9nhU1]._hM:jI*tqQ>Y:YhBD6'897G
%[OdJDCg8gqc:Zq'd^"/8Jca\q$SRFh`!k``6^:sVO>kB.%lpl0k)F%tZP/P/Cmb)@T2Of+.hKkE)1!dV]LJ*eZF$+5Aj[rHCfc3m
%W),DAR#Df(I['%4BB%1Q47--MGc0Bl47+ZhZn'fVKnM"/#(+:>jKX"cTuEUgA)9okY9P!mGfVCom&373"!#FK3('r!GD:N(KtS0d
%"T'df,0Vs2R*&*4gh#5+k#lt8`WAfm9H50/6EDWA-n\dhmX)\QF"Y"OnVi@<KDAp9`$/`uk>^;KA0J^OrFbh>dQFkVi\q(>>+N-W
%FQh>UY&#eiX:CUA%:OnBZ6Q7/$"8nOj1Kl_%[56XX2U);$#n,cLRkKHLJE+\+_hf";PkYCM`<+KDmRD4=)>\\?rm"7AN,X?mL5Rp
%Z8VsU9L:4=O-;!`;-4[,qom[Ej_%>DTM`K+!_.kF%LYZaL4s&<d_Lgf@EU?i&s"X!F>A2`"#)+X,](G;PmqeP*q/hZUPBg#-:KnP
%"(e4I_ufI&AtO9O1_1`d'HG>Y`<!!!!#W=o7<Ub$@2&NgOo6f'"gagiShJ_*YV4$8<+,0R]Q&mp2Oct)2D@UV81XZSf_Mn5&M-!*
%h,-_t.SGgo]Fms4*d1_7r?.fEr6.7-O<VYnT=ome'*L^Al1OTFq.A<2b#UYK<96AHjZn2'9t4Cf86%Y]LKh3Q0Wer,%eSp)HORd3
%6H"jnp/*Ea!NQoR-<7:U#X\'-c3pLZV]"0nB9C*9!C2<Jk,b:!KKbL:ADSi7M.6-"1.XF(!FB.=#8jj83EuTQK=A#9gk1C)mYqdE
%ZoAc)T2Whh#V%O`nRM+PZ)C''.D_CWIEB*uLgk%Q6,ch_,Z^]\41+&?%_QoR4;L.^Nl"P8&/E%"bhOBYMAqP;Vgp`36+5DbB2=GG
%2oE2A-k^f+Qa$j%O=mSki]S!cp\AWfo$sgBBP%^d?LjLnb>HsFM5"1[;nm.]>?C?Up#dUs"G=&(#LA>s6,S>p"]7<rh,)q$Lj(!M
%`2RYPB=Bj$#cOo=71+#AdhH4&KS;(_&]_Q'"E8JBk0M$l0`V8$`.Ls'd2!(*68QRbTG>d(9XD%9.W9^I-aD2?c^6jqfu"S<2fO_.
%a'C5%L:uHJTQhemQ+&fm<lcY!AD<;`+KZfkU8dp`*(/:3Rhua#4cCs&5\T0Xe7#R4lT*tWDB%9P_+kJV^q>o<gN6GD<::i=oAUM\
%lmCpr=#Z8C)`%J]H5I+-+?LZm9Z;q%cEZ^UCY=MV["W(EI>>cte];oe@XgshBAgY<Wf;'R"o\iOqc(ALQT(1SMd%/Fpd?<qPZ1d+
%&7e-;q[f7RLKH+$d"9r,aiA8("I1rK]T7^n$>H][*_X4SEnDt#?Rn%Y*IDlf<_/'>9t'oIZpR'SY-O5lbIfCp1+tm[iDD)m5.hLC
%@n[tBdK^+JFs*K0#K,Y?-H/J>6$Yp<;=qFOELG[@iY%N)H7_IPc.C;g<43r+fOAOt7moOGGq@6+g$QZJ)&2V9i-EDf$kEQ[A-0c$
%T6fA4@:j)qa2qaT?f7D:Aj+q^fZo[d@JG)(3.-M8HObq2!@R)`)#dZ&'5PhSP.qV>HD9K,*44^/!-j)<J<e!-Q/%\SReb`sPDois
%AnrW]d'GDKcJ3f'Y%%L^k<Y(m"3haDG^sBd40YP5Yra(He)uFESWY,%"-iSK4X,=IOAUX\ZsSaW(`!r%q.u-H-dE'-HUGG=!RKGA
%3j><AO!ugAj970WTr"011trQJ%<3^j2Qfjfj-^[lO][]m/$O^-hua?Z_'>68#UCn&ar,Ra8=8):iuu[JBXZpEjNp?gZW,K$dT/S*
%hFPK1@>q<ae^%,50:`b@bH;g%_'oB%UD1X=;>_u9pfUc\NIe#&)B`-eOttFd6$Q%O:RUh#`6?C7I#NSXk2e!+g<4,g=dnH9'0=kj
%i'SI&%\L=AS!Ki,R<@e&6/70(Fl"!E1SDo<6)FbK>S'C\(ahWEXtp6K3%1>O)D_e6AdS:7$g_4i'\n*,cXd&4_^AVuMr&'dVG:Bi
%5^.TD[.?^Oia=.gI4R`3>Pe\c3U][/L@qjU)Y3E1hAeB*_6Rs_=^Ld'Gg*EOV(1dK92]Gn'`]buQ^ND:3LJL#)i!]_-EFX5s/+#T
%OcU6k4`?7F-Z=UX+WbkX^p9'p,sL!*hH#"KL+EoT-TO;IbYYDFOqJOX/Va&+R8b0)!2VQ7XnmRP`.%82).L/$0!()pH>%PX*uTbD
%nsg9W+IdY^5@/0KEO+Xu)r\(+3E`])T+1M-]=KE>7NBt%.I3!O"5,$>EaLBbVO5oG5#CV3g]`M]+>7BuiCn#uBV=S4+iMgY+GLcb
%iT'te;g$.Y"Tj@e_8`QM\lq4:je!OXaFqII$kb"LJsfasl+lnZ%AMPk0j";!U?pOt]Q9R=):hdJPaC@2jEaL#ZWQ'!FUGB0&Xq@J
%_fmMB3ED9'Eu.V&p'13\b[(\`(/qIR1KA<t4g^mQM(TfqAuQeNAf+^46^E,aHj*'Y8ir(ldpH\u/%/u%(N9YfjU`K.!GedU7\7qI
%31Wk<6PJ8G,2Bt$"e4$kRs#OiauUWtJ4L,""<3*$]-IX(3ld@0M)u4.R4Y89ho?M`bf&XA50;!o@r[PA@8W2l,rK`pC?O(<E6(oI
%bib*#'Ft8R&m7+$ahl=M+P&0tmfj#`Z7Cs`2Z)Jn[LI@^;()W4-0Atp(!Bab/Q$p6c*M6lO9/I%i`[XDLsS7OQ>GIM+o`+s&n[ok
%>AS>*=UG&4')K!]Ne1hFdJ%!K'\@`&/W<k.K$(B.$[$Np'A%U)7o-kcOCF+r?Rin8MD,VF(hioKi.[NZl<*uEGZhkK\!A76<jqMN
%I)a?%k*3#ml.94UXOP5-%g)(%b`Y15DogRIC5m$M@8T>'(\3gpOHd[tfnuG8lTHkJh25WN.7@A@"k^q5fk&AZ[&-T$0,(Q[#`i6S
%6^k,30_,H,[i-t]-35s['N!csCl>tTK+Oh[*a2^WO(E[3-jS9[ZR]*(A</.QnA=>Z0Y.DU25F.XN,J@JX,-2T^#u;TYa?p6"S-q>
%Z-2l>eSD.?99>CA5/QtVpW?ta,gCV5nt-oVdB`3_Y2f%D0BOH"jhrI7.bU%k!JJ_G'tI5[BhL'aEq(Fi&>`H=Ep+2`/X];SA<jMu
%YH3XQKG3NbDR]G`YQI0O&tdLn0BPpK8#].qrK=?(@F&T;Qh"Q)>ocIfae,45n:@ntE<%07>07Qu:0Vbh&_UW`k4>01/SDujq`6(2
%r!k4"LX9)PL@P"\9F+eDA2>F9).>sNE$+/j-(h6g`E\s<<?52%;jVmGN[9Ja8jZ?)LfcU+[cC'*:U%F8@o:9J@B=:?CH-1Q[8V+N
%DlM#_hj$3M_s'h>]ilMA-?$DsaMh)^=*%AZ6e=Y&Ws=;*TI5nT1'%rIH(A-$M7K(<Q;!'Vf(*@XS(!7B4SjgZ?`:&32LX9SBiRVr
%5cDmIe<!B!U*R.XH]08E;DTJ:T'sI_DlLu>S?ufN>/h2lC<Dj*4$H^-_h<e;b_4etg0g-RCgQ[<>0_lU%[E=dh?n:7(4]N#+r_@V
%<)P'Obh8.i@qBjQ2GcuDZqN8UC',_c8A-NoC!8Q5/\+d$Q$o4VHYlbHb]p'K5c](j;dR%G-!cXkV`W@W?'rcgGQ#BHYF[tRd-8)G
%&U?+GaS/QkmR4-pVj(q@_'Io/8al8!PWqGZf`$r$q=XB;hTr'pEGiP)S@kJ'F)CF+p#Kl!rFRscV,:\t?;''q2ESU^3k_9ESP7nS
%SR1F`^#)";]fa"hHS_/jZ@+I@]RDfS\XK%\Cqhs$>gC[)hqjmK\Eqo@c1UdS#B2M^Z4TCaEVT+smCV[f,pt9oaK*oO'RRMf6SZ,t
%[lln7a7\]`A@d2;3B<M!9eQH@Kj?90.[fJKm?@A=CjL5HMZ*)4s*8WG]qc]V2;;1hB"059DTelI`ue]sgjXZ3s82Hdp#M9Af="?K
%D;8ZhbIfr_1Hdf_Vb)H3g\,I_p@NSb4.fku^\`!?DL0$F8M\4!F_uH1I5X)TZS(A5c\pK$($3*=g:mQ3IW\#1FumCn^4(8dS^tP&
%a#DW!mB[c,3,EZk$1?7&dZ14Q,hG_gV"o;.K,Shi\N7HmEJn;EbQ#)?>Z)UGhb@^$UlHF?"eY_[*@:k<C.E$o)9h6'N:0O/r=1lm
%]lUEkQ^b4-^tH1-3&<2P*+V:4q7`+nhb"X@%ao`/di;W-g\qjf8B#s()8;:Ch[M>g-Z/^_ju^2C?(YHI5&>^m2$6SN\TI&]P53FV
%b^Ze+rhmDVq/1XQe2"^",Dpn4]@riI`KS`BaWU=GWh.^,-9N93l1T*7Ni?Q]9'Oeg1DMdLq+`6dWMDQq<,l*j9PHK3V8BbgT9hI\
%#8uYa8^2I"qYh0@1)Ms5ogW]-)7AY)k4p.'YB_fcPj%;V?61e`3;5)0?=)HX9ttEA7"dD0n$ZWW2pJDblXa/Q;#A`8Ek2u%e+-eN
%c--.[]\lo2ba4YTe!GI,-Q4=kGX\b2Su1M9\a*$-0Ttmr%o`Db&sJ'>FMI\Dq>')fHIBIN;2tGKq6O)+!:OOoKYd9[IfA^'nF1ts
%%c0A(3D>4u0HBpVGA%N3TfuG2h8/'d_86,ehSJWrc9XLI#N<H?\-%(c%eP<5kk5P]&,,blp\&h*GP9L7I/[qHm/)4?DthMjhH.5U
%H1,-ZIrB7DGAh+ImDZcCkP*c'h(sD(:[N;:LV!f'qn%3e]=U/:BfGI7?,,]KmB5-m]5"g%rbUb:k?qqPB5_F,B4iUZ`1=-mGMJ57
%0fs\Om<%SH*MiY@QZghQ8h$X!Hud=Ude]/">s+&NEBim1h7++sN7_a%5.YDPC$8F5/f]UuYTNSUDV-,+.u"U_E5;b,j9+Yprm2b^
%ID=rhrJjZ;qV]&2hKk>2]^jQAGN]Ol^>!_@DT=%>?#\X\7oHqI,R&DcclUhf]4Z?TN_MFc@(g^6>!q#9,1Z_?*12/\B6MN0.I<1f
%YInkpP#eUm/SFoV+6\-dVg%fo:)Y3`nChTWNM\",GNr!FW-u(OG1DUF.]T/SEhl&@>/h;k*7iMZFu1AuDF]?1;7AXE;:@QU]H`jB
%q6SsWU?6['G%GOX6tV%X:2qqCnm2d"G-=/mr+H&D7c<\%IO8*ioKoR+b`KKH[dGJiHC*^KcK4_WlOUA`5or%Ys*W+A2;\tMs7BBp
%!rZ'i:]H\lm]Tf<Il56nPQ#a]hnF!:q9J2RU<G8ccRrhYR_*@LP7Ddf\`(:F-]%Sl7'$7V`uW+J^HUSZJ"b6(;r#]YD>r2coJb4.
%T@:Co0LA_MESL3]'C&Eccd/4@g\]GY#]Q\T+9l-Jpt0sY+`RO%M9<S_^">:Q6>'s3/=ulr?U*Q%gHi4+1k1XT0$$t\^O=Agr:gd?
%b"j\Pqr?kc^>J<>;k(GV$m1UnEPGX^*_OQOM3OkuH26I;g$AGB7K";SSdJ\\rKJ5[X7'[[N8O5rMf6r!bc.4^)0PQLjSE/g4!Sb7
%lK]e;@;'S6'7t5Do,W:ncYjMhhr30n8OFd4?gcHr<gVB4:+s?\Gl(%M3reVQ)L?[Mor`R#T?fud]tgiOYL5t@i+CW/^YH$[411<^
%X,AqY<27Zc\j/)mGOn%&kASf8]a:Yf[#SM+4$C<[jo:JOe?r_]dVJd7rRC7_>.NtnO]3imfBVcQs(?)0qo>UWipPUf2jH(EIX0Mc
%ld7!U@7^")j>(#Ci;NV/r#V]]Cq,Lt`d2oFPuEE$jk[TN,EMt%l?)XWk4Et']<X@[]9qK;o)@Y)jC4Q^`LQm:SbW4te8dZYiRe+H
%YLcJHpDM,kg#R2-O!Oanlan2>e]tj!LuJ1%l>/:)Ii5]b5Kc1P8li^>M_&b`r4IXKcUf'!=XS]Jj4/=0J=qHX:QM\TkNA&P%lrXi
%59Bc;IPR2'^A;aq3B;pH@a/i*qW3Ymn<<)PIR0e0)D]P*?EHulIPSMa.8mMN/QFoZO7*D9f;/9&UD'\sEAkM%S59_[7k<(:\)KP"
%UQa:TW(jJ!*_f9K7mk#_Gl2WTlM)C!kEjZhP%p,R#>#6L02Gr=*e'@fs)ZJld&Crd-4n871V^b2YL0h5L*PG9>5Qj"5JMMeHujEn
%5PsVJ;@f8"ItMGa?!0$Jr9BdGpZs7kU%5^?M6?d*4Xp'QBnOEVB_bFd3ZfA%m,_+HoiT7OfU5_b17KBcI<oppNh4SCD]=bp]T]0*
%%o4/1i5Xg?Vu)P-_D#6.q>%L*9s80,a8^K<V;.g^o:*q`kq47V8)1XDT(mP'Q#<-#^=iKo3gi,h:07sa+$SO3X^g+^oJjJU@<K'S
%$Y(:IRe'gSi8O;F]9`>uWdF33fFIk)s(mR0N'T\Nrfp6[lJV"(2$p$Jdl5n9?(S@erDDEe[Wgp+a4A;mIQXdPRo['!?.SGi]52o0
%D@A'C*9A3T]I)[Lo5/4hQe/G(PKT0PGWqU(2QF<h1>YNb^:g&fG'u4;l[D%&1Dat*Ws<M:B[U<.5+;9>ntNgfDLq#5i;.J7IW[@W
%?]hgaV^Ka>ks%d3?"&/W]U2qt0BqlWc"quG.S'iK4omsFqX3Ja+"dG"!ah)=IrNQmL[!?:Fu.48a-lod]mBFX/5+K$F"aJ)V.64k
%m,[05?0oI>G'^P5G;d#.H]Bn))8;K.%!7&kDk!;elZm>R*G'=9&#8EY2_u;UcY8%b3T8Qdl1$XUbj3AeEdkZ15Y$+^2qRE[E]sB_
%qOU9^Y2Rm:e>%`Ia0X5&RX<[hIVI`W1I(nAQA`rNeb&G2[$e\$?=(Fsg%-2Cd..&)A9tOj:7CQ7c*,1VeW>7*kC&33krH4fI`9=i
%;Yj8lKDj4%o.'[Wq@=A)D7?:^#<7O=]Tl^08GOZAjAWm?TDIdEo4MD>Xj#Igh8p]c*%$]k1B:dc=r%&7m6:4<NZqe,&cXClqhiOh
%oO%>uHA)f5hGF4AkNC0/T$)VuHIpj&2C/:aRr<.Anl8+SE?Y!pcF4;@hZt.X59Ba)<1EGI,UKHH'SVaH\IbB"lT5$0PLNPVpoH_"
%U=4O\12VeB/(A$C6sirRb,m+HeE/CVC%(l((HbeQkMh?6T1u1^!NEZWVSI*-0/#"]0Af!Dp@<P??&lAjl^4u[^(KO_+916]cW9i5
%1t5jVQOW*?Q>*Jm^3TO/9>6PsFReh]5<.e/(bAa.o=R%(rF,EYin]N^f2pS]1jp3i8.@WOE[Ng.a!35!J+E'Cn2EfbP)/hPh<^f^
%]\Mgg"e<=)2bs:+d_V9Jr:`VYf(dfeoC<pBrJ00pp%#5tHTC-=A,]3ppsh$q5J_-pjY&_g0E2Mg+c(RB,;o&RG=%F,5`m)a3r%j<
%YF?W5'n:\HRVsYo]_KYl?L;#n-eHh2h%/BU$G_42bT?"YKajC\!eS.?gD2%oeGSmnl.*UdqRO%<52?E_I<n&gLPbLDS+,<G_>1#t
%qoe6)mN0fXq5nHVO0l9*HMaU_).=-U(O-DTL2-F#F]f'Om50;W::1*m_IuM3KX#o_[+B.bYh:#d,o?d=ArpsG).VuL["te0Y)40/
%^01U&W!'qbcn0Y'ecY0?:4@J/W2/2QQ6$[):4Cm3d\DMmmLE?>>oOI&D0<G/*E6\HH<(u(]nT=^9fRai<GQR"Zqh0g$*IHspbRf=
%ota%Y"E-R6+55?bc'c0\q=:"?;B+MM4[:Xg=qbo5Fm<.iMk5u1jJBB<cgS^@e!%7>]A`O?(.>T[^Z#(INpg%iqFW*d?#2kE8*[$"
%4YQ;kHV1(l?#/u<_5[RfLgEgBj,,Hl$``K(WG\YuW^N:kLG)J(V)8$,q)HkrCWo$qX`:mK[@k7iMnN>oR&WPV'B?!*VGP7]',,]9
%"p#e_!Uo&"ZGF8qVM\AI)<tZGZj+*D"hUHheOL+FQbLP+O`tPMM@e1p,1TIja.=2)WORMV#?Jl'd.CG6kq7*p8T[!t&_BPJQBX5^
%r8eFe91,#^fB@#8@?CZ!d[b;rR8H\&ZmtZ.)VBed+'eeQ%;`rIO'VoEdC,LY#;T,l$o+$ebs"#5G)gYXI*=!S4+0N#'(p65EN038
%gOc99Tak[*^<enM2@Bs#4#Z&XhHEm<kpu,\EiWq@rT<$9s&LUX-;ZJQT)InGR!rM=cGg:cclf8GnFoI"S\(+?e(N;(DMT/s%ui6D
%%^e!#,>]bIe>PQO+N!b^Y)L"l$T#p<hYjHKZ)7e#qDQZe%5rVe/Sp&6Ntn/Pd_^s(Xhr'*K3^4l9kud)qe\(J6L/'gakL:Ekr.CB
%>Kf(UHF[$3mrt>mB:W3B_ZHbs7DbA\UKt+cm-?'3C?),]i'I`cAfLGnoU;3ATs`9"ClS\YEAQB[+u\bAcC01"?uN-de\/4m:2d]m
%[>k)A*AKH9l-q)e,`LZ%j1_<-1T7LsPt%$jqK=ObDRJ)n"7Y5)QCk%@SPCi@oLe)?r;B/TTT*1&K*#JYM[]kS8eL8>oh9__7[nec
%'#Y;,?SRNcn_aLU2=cR<dF$Zu41bfQn4A9Xr`fMUe3_qgM(A6Qm;:T(K+CDMf#Qk&KVEt[l'"LZj#9g,OAI3EYsG*SM*uQ*M30QJ
%D[2<2`&u.A*PU;q!Z(39f0QeSGC"U/D\Bdk*)*DP\$jnQhfn3XF\E#QJFJE:R[U'<'#*i]aruXrXplDY^67u!<UP":0s`SH5J.Q5
%p%o0u49]l/*/PMIA#dG?Z>Qo&<6mp2YJ;&2E#l$"e\SI(<3`6j^_j"[OZ4<rPo<^6<Rc&(6sj)VapfhSe0ZhkCo&<k.2BQTp8Rq!
%s8M(SAo,DWLG_O!qo1r!&W8er@c1)B=c2Mimbn;5>alqG^]ltf[=Eh13H_I?G<CZK5"g1QO_m#3rSZJE3J?oZ,TGi9,f#0m8"u!`
%K!,EFAefE'_nas&Nu3[226MfpV4dg87B(3I%)^"AN*LlIW@TJ-]nuTQ6%q2![&Ohi2ghTSX3Y3V*#JDc/jTI9jLh&$"p?"b"?.B`
%:JA](hR=*So,R,$/(1,=^j4D7_lc=>9c$db@TT?I.Dr&On$0p9U*33hDKPSO`RL>ic,*$]e`,nk_qjtHh!550WnT6+6Sn\\q>"_q
%51Q]PjSWh%.NS<r(RMl$Am?Pb^;r17H7YD7HEZJr76#C<<gHkB&'R)b0sE=2`XF>uEMZ[3TYBAXrEJ[eXPfq7ceX)VjR^k`$o]P!
%*Z>/?-LE0-q(.0IfrE+ZbWY;S7]4fi)L2*&L>IU;[*aWuM6>t,CPb*ArMp1dnr5Tedh$Z'e\"gC](j\3d$#@&r+J5"*5e7(qM;sB
%Y8UIqIk1b'PUP&k"W_B_=fhn*@S=,]d7kR.bb2Zg<uP'GlJ'#)]9RDs2-uNG:R#qGrr";Bn"^Bu4sUDc-oU#X-j?/'h$BQd:"6&F
%SSk4N:9GX1,``ejLe'3S.UT5R;OTi`MY;)i]K#G_9NfP$>3SRk?--mX@/HB@o]@TsOPR_!_nsci%1GBt(qRnGd-B7E%1f29CBFSC
%b@Si)*?bjU7tGb+5YiTf8\m:@4+`EQ"u0/d$CJ5VF8LlX29(g'eZ#41pOd#-PIRD$Q);,nH&,KN[Rp;OD:,03L?R/XS.mi3@'G%8
%hiR%KY)n<ShOtCe%5)4!lg,^-4%0dOQJ7@aZEL%b\W&oPJH_RGhf$m'&SZK6hB5k-_]aq?P@X]Ne/^FUj.q=m6nX=V(d+`\i@rPZ
%\_d@"=Q7KE61/;U#=b18iRF64?!LIX\U&k:3H#D15:@:QD&eESZ^e@*djeFAN?B[4^k":@6V(*=[astgd2l<aa8u;4AZh!)'9lHe
%Xg@lQ60Y@oq.pPk5<('.pA1C".)i>HUgB$G8\<W$%=)Lb9%s%u`\[mr5&uHD[EOnuGCl!dThSD_$;p&emD,dI-.!0^8t0\.-\b5i
%X&Qt#;<M,$>S-;IP5rNK8@)1VBUD\ECn\0GTY_:>e(p=qPdssI;O/H/o8P]&<@Y)^2g4bMIWF/2hY7=<n24^%UTQah%(b8RPZ"PD
%kBh8+j,e/\`XP5*^N%ou^uRh_XTsZ(Xi1<@#6VE@G<8)@h3&'*a'bfmRn,7Z#`GgAaYSTmZ&KgFh+<@l>nXAGb.`n`=Dc?54nr[!
%i#8s'JB).[^.mgiD!XM.Pd/*lWV-%HWV<j/8`Lr*BmmkM,msNN<[G/QF6`1?/<n"@(N+6enE07gXe=+<lo9A(ee,>=2u]PEUNY<C
%1](YL[?uC&mCQg#7pF[`B(ikPA;k8eXLVooa/D89AVB#W3a22Tke_#bB6D@%,-)MQq`kINK2MEX?<HsaX>^Zr&[^NrcbfX!2L@3o
%&_jL;VrV\]n#sJCU0Q%&8LT?!*+1)"M(kWijJ+$k![<>AD6u2XdBonE,^=E+51E((`)9isW/c%NTgZF:j)N1AMG7!NElKrU-98%3
%&*%2?#0XD(`,N2%dWKE)3l@pg`5rW'ko*_;/F"?YPp="`6A;3aTkPO(7KS*u\^us<gdX3t!j]oPUE70`U.Ls_\>!kO&&8cipr<h<
%RXN>0nP^B)&T1/uZ@"9@]T@O$4[/]=l#tC.fFZoDs(=,RDDl."KQNr,]8bn'Dt]J-a:4r/5#/0sRad]WYm?OF%"4(mD05bpCSpM4
%Bi2CJb)lrrJqI$#,J,jW:6#g+[e3MphJRA@.f27nK\j5S55820`PAapP"./oO:^iM)JrdPP!H9a%Uq1?BLOD'a+rp%(S:&*GEq*i
%d3h,A3#14Vqr:6$UFbJa$oCI)19\[_)fMkgY<Uah^8s&q30=]0RFPSbA>?44#M.,a0"O+*mFFrjO@C&RY:sU,1knNDs)0gPS52O]
%E46i:rUkVAou$OA/^ZuAXu\_u&gabQangHZ1fEmpHOu(R@1Tif;)mOG9B1!Y60^,KXLIcp0`tA<Eb(0/`mFI4A0uCM-$>G'[S!OO
%(^GO!n+h:@A9B(u,Io2A]7h1=?#(;8%*YYRp1e@g2*)S@YG^\iLQdT_gZNVNFlXLVO`.saI'Z,La"Q9\KB(&@fKkAt(4mHC8!_Fa
%jhN!RE1\`>/%7:q*B$dM/=/26I_&8G+l(I(#k6M`U)V_R-R%K:gC/GDrjK9C"9Ua-+>Sj77Zi@u<9iirUR7+r8W5!a"IFUN$&L1K
%WF4gXAeLk0`(;S@^TY>4GqCho`jbi]59VUjOq!X<Fub-WFq5[NiVpkGOr4aY%PcUb"/JDN/VuP,*I"fcI]nF*E30::&%o>dgq\tl
%1$`"Z^@C7?Ykb%GmE=pFPgcZ8CM5l/3j`o#$&@*YE_^b"b1j%lg;\Lbd3i-c2nHl$jo79/;l!2W<OgRsp?P]^'3esdRB-(!lCpi>
%<jg4gQq0qE\D\?9nYu5DH?l2jM*EhP)HusKW)R[F2,o1l<:%l'IE]JH\f=j_L??iHZM9%2?@3L$m-,pR6h\o(;\MP=dun8$n)!Ai
%[`'%K=<37Lb84:PLK/+8A#O94K\*2X9>/N2$b=kEL2Or!0-K+f5jeqL2k;+'KX?lhBA^m\XeX4VM^)p8A`V^'FRZ^!V;bO42?Yip
%i]QP)II[7PrSbT,pq?cZcN4)%72sg-r:5iXmCnrp^Y;DU%*:*0QUn@:kmV>ihU&P;V_/]8aXu.id@-:Dj-o6`ic,SH3-",YC>CFA
%WO89OZDUqcRRqc3,[\[m.01:"*Udt^2Q0^t;o[MB16ZNLR6:CA(L+Z3TZIiY,aJq$SDA4[jQ"OX7:-q!cjL`0^BOr!C;Q_\RFgEX
%>PEb.I/M[m=Ddj..IaV,;JVetV:.\b=0emSq,S@Hqdl76S@$0-r2(,V%4Ro:m7dAt^'9GnVSfmCb-K>g(oGiZi/a6g7?S1ss0ST>
%!W?\3k-^S)isGDJILo_us+d1`R/N.']-]`%Y7M8_[j8!Frh?j8FZ;Tc,Jf*K[]iUi*"n=gph&G]jAMDH9E;Tn+qT,]O)NUOrQ2"]
%N<.sWK>?T'pRd3:s'X./>*EFQq7'g8>`?<o+i%aR-juk0XZ,8&e46YESY=#C.Jm:X_Ieke_+fSe^YdtfUR)S*C--4[QjI&5Xhjk)
%F;p3_:%`5!*2jlAN>+OpFKJPeh\FUQO4`5eq;UnHFmu(CZ+@7nko5Y`k0H%.Xie?nX)H4,&'F06"ZEI]"B_3oId\Md\q\h"QR079
%r`6M.o4,Ud&@[o"::]8(KH#)?Z!V@dr^Y5tQ^cH":I=FBm_Qj@$3NYZ66?N++cEOqeJQg@+%J%kX5$55QE)'o2>*o:+Y8a8iWs75
%_P:,Af+Ahs7U11GgAqTg)^'Fm_EsLq3n6\=(-#,.geGCg-7gU,qY`Go9l"j6S)nI"NUpj(\Q$mI\KXQg91hLeQg30;/5A-e`T%.+
%bg6P+*kuAsDu3Suk7]F`5X5=I@#K0;--F/g.Uk!tKZb_t$BD2_R>\]k>9*($>5KSbV;>V',KCS5_3V!M/J%!F#fB&C[-gADZV_ts
%.14rYlsiS+kX$3+K\5"#\$Mee?#+<D'B_u^$%O/2Pd?i_]@JLLUQY+[7HS`7(;'*UH>)gO(=!AL4EdjGUt4JDfFabMObM-YR)8#D
%k!"01W>s`Rq4,c,N0q7[+bi\)Quai+hfq%rR/Crip4Z3SW\q;J_%P'+j-nAh-EBi[XIKU\;g,.j:<W0DdKPld\"tWeY#6"9b;iQ(
%)i&Q9"g_&@*]X@j%JN'r<T1bXb+gQYG0mU^a4Mm!AVZ*.Q!g@%=6\uo@7(ZGAaOX+SW21PYQsWSd+[\3c7:n:XhAM^ck4VahZeJ7
%]['[')4[s$ilIs;r,q[GPG]8R;CQ>tUKZuqO'K*]X^na`l>SZL=(hp58.dTK<gEP49%Q[08#rr!-+[p\Q21QVb6GU#^$&AE$ldpM
%WU,aA8r+\b--`-;c@UkJM!'-IYBiQEah.3ZJ<\ZUT>?7tEKG@Z^ePlYN^iF#"E0<$ARCAG2ia.6D9^k?qGUep-/IVJ(5:fZYK7u2
%W32+d%R1J]ctub9$-U=HiF9<cnn;%s[J5",#4^'?`n'V)hJCj>M6O6.;;O\[8&bbnL^0+bRh5AWV\Iq-fW[DJ.<D>j5sqj&Hll>[
%DI&liZT%K8Z/JP)!70#Hq]ESX_*-EsEBOpG:./"V7k8tH]U+^fJg7\Z\T&2`KW.:)9mO)qq`7'\XWt0'LsH29O:aB)n^rNu;Q4e0
%VI-BZGFKGtVkZhg+f1YF0ZIEc:q3:6K-6;[MT#g:Lj,Ci`/u<V:nU[]RqnY[Dr2J89VZQ$6cUqVbdTBP?_KkV>6PU,;]po_P@Tj-
%3GN5e4@3Rn,@:LTC-#O`I4^!%=9BUJL=gmOqe8;`[^6q<>AKEf6ohr2HXXU>l*#IDdhpifqVTdugt!!,h>MoLXu.[=31.IY$_*j1
%XfJmqDa`M6]a<;ae]V6Z<b5Tme,@8il&0NWk2aHjkB(@j^fS.s]%qL+/-[tpE'SWSWiq:/U3I7\mQOO>cX5;R>`G(e4FA0$O=%S/
%l^$4Mn6rlhghZHVAioI>nG;9<ocrYmHC\4s`q(!O8GVso@%kUjgEg*ET!5M81PdKHYTMoJp_o!SfXdpq<D<M%`YrnLT=6&q_tT9S
%"qi?>TVt.M?Xk0\)HMd])o'nC$qhg\AP-g;+j!.,C+=VUcWSKL>[;9lQ&ciJnf2KHkm81X+7:7?\\lgJfQrmfMi"#.*E#U*+:3el
%U<t.*=XrHARh@e5-#n/`hR:S]O*E@3XplC852fK\nto'"M8H_UPf`)^I:SZNj1X7II'b*h=pBnEB_1^AZ8$)X!SO>R"#\1):5bT!
%Z+knpZc3SqiV"UpD$+E@B>nP_]/Ee2a)R%!*A-`+-J'`f!.p-#;I!:`a>*nK_Eu21?[h8uT?2Dd=KjMb4r&q6ek8khrHBNu5SAd3
%rHIq[<^e(c[DS]LeqV7Qi-+ldf!'fNg*fQ)/_$b_nn:J[Fi9!<f`6Ha0BmU`^Y]%1'9F$;dVU\hNoU?Y.,=&A(QqJM/PHejE)=;#
%22k`hE.u*#!ad)=5,6&h2A3p&KnIVSaA\3<_JT1$^Kt@t?]Z0t$ql_,8dqN9=OlZ@aA@a2JQ3+q#hVulM@</2f9."0-AI;A)3i2N
%)lS#J1.,$C$J(/H#+RnM<fP^ZgnrH;"ed+'eu/bG@B%0[63D]>6gN'4B%VKjqsi[^Agd8n#Rq=.Bq;Gh*srJ#O`q*@ot9roBW+@Y
%^oFtS%-3'&ltZn:)b8&+()jOc%3)6jlpAV4HgFhi:OeH&V6qMe&*ilCD<hAS-0<OSlt`ls``)GZ013MYe!gHfO.;2V$[n>tcW8!?
%WPiGe4^8AZ1Q)Eu*mi$nk\Bgp.?@Nj?AjLrLSGr?B5m22<u\LGj(ICe2&idi@beY5E?d[89,R/<Z,M^tGU`MNN#Xcln\Z=4R?9G:
%\4=ic]dDJinl"8Vo]%)>%nc%'\a%4&SmBXU(*d`UiZI$5`f.RXNunTOhh*Z??;<-0I<6QKWSFie/d=6=q?Os)5AUnm2`At5TPAXp
%+)Id,n.Q,]c/6+pjLN1MA0"m@j;q/;'R&[9\>)75LT\TZV\Fi$$\&Y->Wil*5+8.5IB&AZ_d2[R.+`]\>8uZhV<d%ZUoATDZOe@N
%i*_T:M8YXIEYN4SS%P-]qD),A%^KHt7fpLXC%Y*3g'Ai4#o"a+l/T$>+!(.J(7_T`[E4"ZSS8OQ2a[]li<ndg%?[AU900df2H#J9
%LIR</+V4`Zh)a$HMbR6YhcF$X0+b&@DW+2#]=U/Fa#@Wqbc`Bb]\&(+H4.37<"d'".$q>]F!DY;'/r?q\Kr;hT2R4SM8YeeMVPnQ
%I9i=O8=d;0qj*.)>Lg=2>,NV?oL^"(;g"\t6tD2+o$!2%()j+?mCm+Vp+1^#RptS'[EE9Q:[>d:>bP_^d#i>&-_6`B$,[579&[+o
%mW/od@e!]9PZ.I8$r4N8^>-<GgQ51PR6-k"<kD0E6Cp->n51?a0.GHhMp&lZ0SWV&X7Vs<n+tNSl0cOpWMW$A@p]B8gDROkA/r.I
%SHiRGA;m(!SB2Cof0j,jhY$uYm8kr:c_acnRf<6&r+pEQrJNnSCoDtIkZ"0Y\28nap#V\+cb@!%H2VN>']2#[Co_?R%`Al!C_PF5
%P]?'(nC?4:m(j/pJ!(qagtg>sNd0=tHm^;Dq*FJ'mU#k4jWj4HaeGZMBm:_u]5Gkh!A8KgEdE+ZEVX"/E.4Yj[OhLsHr=o@R9e8R
%DP>+koCM^;]=U%SR&IX,C;kLaIT:S>5jCkjhcm4pj0i%Va[I3!e6,,Uob/Yb\><5/q7q0GdLeP#6[#P/!G=t<=e2j_q,-NnUCqtZ
%Pt5i%<dnQUaj'Eg/ialUNe?sSE`e@,Ug6AMN%qI%o\CU\Eui)>iXaf,e>$b$RR_"E)3maK2<E5cm-F#BR-p6rfJakCRC@YFMuKq8
%F$(3oa"8&:d`$35UJ&+$dHY0r:muXdiLX-:%=^^e6@4_^%OiSGFIr&W`7H8_.Jnjp)I[g:^9lDT8.>s8mAS9=rM3KS^0+41P89(s
%..:g"X8+9URKk'\>qDk.N]PEp`](IO`Ytl4`BXH%1>-7?%25KYCf"K[oO-COPiLo[i4Ll_G*-/mdR9;D!3RVbeFE&!jdeoBZ@CHA
%*2qJN!nhtHjtpR>IA:fQ52.YogVL0ri`M_GjWG2LZL=lW'a2rm$L#D^Ej<Q*%-5EH%-.r3JG_c12_2pY=ZPn.OBW/gbM[^G]SFLh
%M*Ta-Z'6KQ-g"'LD\O;N@j=#\dCsb;F'iPXTLreCd^iE](1ddai1m0Ra">2]C0_1p5&GH;h"L9Wim1Z5m^(Zg74G)pQ'&rg]HlH/
%$CD[$!9t73%F,I1jLHl[N_'OUm,]^m04c2+.E]J[TX?E7EGP@U"8!0%R:g*Apq/6UBKSe>-mp:+>PFQ1j1$3AhpK>*9(H+H19Ki+
%kIi0>]81]H$rN&47Lruqr;u.&8m"ds#po>T__-I2I1]W>MRZl7*4_I8j5t@;&RffaH7@`dPLW`uPET?lm9[t`UhHQ<G#OXO(lB$d
%j>2OdOJXKr`6O>dQa:T]7:5%VbXOA_:!H),\RlR0]O6AT%jVRF)VL8f?4BLjP14>SjKg@sO0+Qp@<$G"m/7gcUPS0gW*T0Rb>(Q"
%Ko8hZY6DJE"Q6(i=9m_l=6rfp$7Da)"o`18p<UH*F9Z)9jmO*U<Ea%GFkY!2%Uo^b*(a@e(cAo#pss:\8PNu-5%'?;.YCMRQP/kp
%THgR#j2cr0MlQop)9#%f)cR^pT!%]R4/*;AM]/=U%:G$4,XC@leNllF'm<26eruUB9=q]cU[HFcm^,k[?Hck(TkGFVR!lLuO8rP$
%IFb2'#;res)P$aKRA%-$70psp?.M<:-RlnDCNu2OG&9Z)*(;JZZ<:bQaHrhabKOn;b`H)o]%GXf>PZQ:,^/`-i4I;+8eEoh5pTQU
%pacPeWJcN"K(o$eba2KoJg1#VDkQQ8D/D+%;']0%>`Xt<l$QRGI%Fq1qa4Q;f]O^AqL2Tl3bk0EB[I0hNUJ)0[fVEcLkL\Fm#NXO
%7Z@q)%\a`^gHa9N5+'Aog&l2[Ap,"_!0ooXh#I<(`jiZA!qqFCqguGD]\!IFl>WNld8gPRqe>g6P\0=&A3&A2ejPm*8H;TV0BFi_
%6CRmO&jUJ0C=VgF/J:=)M8*2+<,lXq$)"Uo;W;<@UK,u3Zgqd?^C7S0.FUpg(03$)1.dSDbV=thE9I*8Hl<78+!7g<k/:$-Wf(LC
%l)V4Fgfkf3*QKaD?DTaSNZc!#XYHDCj(^+%!j*dTrg8G'@kSC$=P^#,8!+RZqoPa\C7-Rs#MJRZ;lIp[e`;:tI"UF>#fU`>.:h1u
%`V7$$n"[#_g=\m(&<_Ff)_p]%7aTL3HpWohKfV&27Afl9)hhBYXQH^1W&A(f,.H.EZ$q4Yc=[8@Jp/RK?)NT`Cn1C/"1dY?@#@o>
%jm/WX*56&p4g#6Rbod5"OCDFpO$O*.a'A7/C6MhdS>jLtV,UeiL2p1/_a<Enp-gMsg84f8I-Y)ZS=^cq5"mW=[OC-ZhbW*(?X?K&
%B@G&ece_u&hG9W_q)LoRH9na'\!PRElhTYL\U$47))9331]6Zb#N$OcJ+imEmS)Z9~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial 4683 3359 a
 currentpoint grestore moveto
 4683 3359 a 8 3359 a
 currentpoint currentpoint translate 1 0.40422 div 1 0.40422 div scale
neg exch neg exch translate
 8 3359
a 0 3542 a Fu(Figure)51 b(11:)89 b(Simple)52 b(data)g(\003o)n(w)g(of)g
(gra)n(vitational)f(force)0 3642 y(pipeline.)0 4016 y(It)30
b(is)g(implemented)e(with)i(tw)o(o)g(Altera)f(EPF10K100)f(FPGAs,)0
4116 y(each)d(of)f(which)h(contains)f(about)g(100k)g(gates.)39
b(The)25 b(peak)f(per)n(-)0 4215 y(formance)18 b(of)i(calculating)e
(gra)n(vitational)h(force)g(results)h(in)g(0.96)0 4315
y(G\003ops.)k(PR)m(OGRAPE-1)18 b(w)o(as)h(composed)d(of)i(short)f
(length\(14-)0 4415 y(bit\))26 b(logarithmic)d(arithmetics)i(and)g
(this)i(w)o(as)f(the)g(reason)f(why)0 4514 y(the)20 b(performance)d(w)o
(as)k(e)o(xcelent)f(with)g(this)h(outdated)d(FPGAs.)83
4626 y(MPRA)m(CE)421 4596 y Fc(1)479 4626 y Fu(is)24
b(similar)g(system)g(to)g(PR)m(OGRAPE-1,)g(which)0 4726
y(uses)f(a)g(parameterized)d(\003oating-point)g(library[6)n(].)32
b(The)22 b(tar)o(get)0 4825 y(application)h(of)h(MPRA)m(CE)h(is)g
(astrophysical)e(hydrodynamics)p 0 4927 763 4 v 90 4983
a Fb(1)120 5006 y Fa(http://www-li5.ti.uni-mannheim.de/fpga/ra)o(ce/)
1988 1762 y Fu(simulations)j(using)g(SPH\(Smoothed)f(P)o(article)h
(Hydrodynam-)1988 1861 y(ics\))18 b(method.)k(The)o(y)16
b(are)h(making)e(an)i(ef)n(fort)f(to)h(construct)f(a)h(high)1988
1961 y(performance)h(system.)2071 2071 y(CAST\(Computer)42
b(Arithmetic)h(Synthesis)g(T)-7 b(ool\))p Fe(??)42 b
Fu(is)i(a)1988 2171 y(similar)31 b(tool)f(to)g(our)f(PGR.)i(The)f
(contrib)n(ution)e(of)i(both)f(tools)1988 2270 y(is)34
b(a)g(set)g(of)e(parametrized)f(\003oating-point,)j(\002x)o(ed-point,)g
(and)1988 2370 y(logarithmic)23 b(numbers)h(libraries)g(and)h(a)g(tool)
g(that)g(generates)f(a)1988 2470 y(computational)c(pipeline)i(from)f
(an)h(abstract)g(description.)30 b(The)1988 2569 y(CAST)37
b(de)n(v)o(elopers)d(claimed)i(that)g(the)o(y)g(ha)n(v)o(e)f
(implemented)1988 2669 y(a)d(pipeline)f(for)f(gra)n(vitational)g
(N-body)g(problem.)56 b(Ho)n(we)n(v)o(er)m(,)1988 2768
y(the)o(y)26 b(ha)n(v)o(e)f(only)g(indicated)g(projected)g(results)h
(based)g(on)f(sim-)1988 2868 y(ulation)k(with)h(only)f(one)g(pipeline)g
(unit.)53 b(There)28 b(is)j(a)f(big)f(dis-)1988 2968
y(tance)23 b(between)f(implementing)f(a)i(pipeline)f(unit)g(and)h(b)n
(uilding)1988 3067 y(a)35 b(real)g(high-performance)29
b(commutating)j(system.)68 b(In)34 b(con-)1988 3167 y(trast)20
b(to)f(their)g(w)o(ork,)g(we)g(ha)n(v)o(e)g(implemented)e(64)i
(pipelines)f(\(16)1988 3267 y(pipelines)32 b(per)f(one)h(FPGA)h(chip\))
e(for)g(gra)n(vitational)g(N-body)1988 3366 y(problem)18
b(on)g(our)h(tar)o(get)f(hardw)o(are)g(PR)m(OGRAPE3)h(board,)f(and)1988
3466 y(the)k(mesured)e(highest)h(performance)d(of)j(our)g(system)g
(\(Opteron)1988 3565 y(2.4GHz)f(PC)i(+)g(one)e(PR)m(OGRAPE-3)h(board\))
e(is)j(100)e(GFLOPS)1988 3665 y(as)38 b(sho)n(wn)e(in)g(Figure)g(13.)74
b(W)-7 b(e)38 b(ha)n(v)o(e)e(pro)o(v)o(ed)e(a)j(real)f(high-)1988
3765 y(performance)25 b(computing)h(system)i(can)g(be)g(implemented)e
(us-)1988 3864 y(ing)20 b(the)g(PGR.)1988 4203 y Fv(6)120
b(Conclusion)1988 4408 y Fu(W)-7 b(e)29 b(ha)n(v)o(e)e(de)n(v)o(eloped)
d(the)k(PGR)g(package,)f(a)h(softw)o(are)f(which)1988
4508 y(automatically)20 b(generate)g(most)h(of)f(communication)e(softw)
o(ares)1988 4608 y(and)k(the)g(hardw)o(are)f(descriptions)f(\(the)i
(bit-le)n(v)o(el)f(hardw)o(are)g(de-)1988 4707 y(sign)29
b(of)f(pipeline)g(processors\))f(for)h(FB)m(As)i(from)d(a)i(high-le)n
(v)o(el)1988 4807 y(description)21 b(PGDL.)g(Using)h(the)g(PGR)h
(package,)d(we)i(ha)n(v)o(e)f(im-)1988 4907 y(plemented)16
b(gra)n(vitational)h(force)f(pipelines)h(used)h(in)f(astrophys-)1988
5006 y(ical)35 b(simulations.)65 b(The)33 b(PGDL)h(description)e(for)h
(the)h(gra)n(vi-)p eop end
%%Page: 12 12
TeXDict begin 12 11 bop 8 2669 a
 currentpoint currentpoint translate 0.4035 0.4035 scale neg exch neg
exch translate
 8 2669 a 8 2669 a
 gsave currentpoint currentpoint translate +0 neg rotate neg exch neg
exch translate
 8
2669 a @beginspecial 0 @llx 0 @lly 562 @urx 663 @ury
5620 @rwi @setspecial
%%BeginDocument: ./mat/grav_float_delay.eps
%!PS-Adobe-3.1 EPSF-3.0
%%Title: grav_float_delay.eps
%%Creator: Adobe Illustrator(R) X
%%AI8_CreatorVersion: 10.0
%AI9_PrintingDataBegin
%%For: ev02
%%CreationDate: 12/13/2004
%%BoundingBox: 0 0 562 663
%%HiResBoundingBox: 0 0 561.8184 662.9747
%%CropBox: 0 0 561.8184 662.9747
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI10"
%ADOEndClientInjection: DocumentHeader "AI10"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image (1.0 0)
%%+ procset Adobe_CoolType_Utility_MAKEOCF (1.13 0)
%%+ procset Adobe_CoolType_Core (2.12 0)
%%+ procset Adobe_AGM_Core (2.0 0)
%%+ procset Adobe_AGM_Utils (1.0 0)
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%AI7_Thumbnail: 108 128 8
%%BeginData: 11364 Hex Bytes

%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FFFFFD07A8FD06FFFD08A8FD06FFFD07A8FD07FFFD08A8FD06FFFD
%07A8FD07FFFD08A8FD06FFFD07A8FD07FFFD08A8FFA8A8FD07FFA8FD04FF
%A8A8FD07FFA8FD04FFA8FD07FFA8A8FD04FFA8A8FD06FFA8A8FD04FFA8FD
%07FFA8A8FD04FFA8FD08FFA8FD04FFA8FD07FFA8A8FD04FFA8A8FD06FFA8
%A8A8FD09FFA8FFFFFFA8FD09FFA8FFFFFFA8FD08FFA8A8FFFFA8A8FD09FF
%A8FFFFA8FD09FFA8FFFFFFA8FD0AFFA8FFFFFFA8FD09FFA8FFFFFFA8FD09
%FF7DFFFF7D7D5252F8FFFF7DFFFFFF7DFFA87D7DF85252FFFF7DFFFFA8FF
%FFFFA87D7D7DFFFFFF7DFFFFA8FFFFA87D7DFF52FFFFFF7DFFFFA8FFFF7D
%A87D275252FFFF7DFFFFA8FFFF7DA87DA87D52FFFF7DFFFFFF7DFFA87D7D
%275252FFFF7DFFFFA8FFFFA87D7D275252FFFFA8FFFF277D7D527DFFFFA8
%FFFFFFA8FFFF27527D527DFFFFA8FFFFFFA8FFFFA827277DFFFFFFA8FFFF
%A8FFFFFF2752FF7DA8FFFFA8FFFFA8FFFF7D52FD047DFD05FFA8FFFF5227
%7D7D7D52FFFFA8FFFFFFA8FFFF27527D527DFFFFA8FD06FF277D7D527DFF
%FFA8A8FFFF7D7DFF7DFFA8A8FFFFFFA8FD04FF7DFF7DFFA8FD04FFA8FD04
%FFA8A8FFFF7DFD04FF7DFFFFFFA87DA8FFFFA8FD04FF7DFFFFFF7D7DFF7D
%A8A8FD04FF7DFFFFFF52FD04FFA8A8FFFFFFA8FD04FF7DFF7DFF7DFD04FF
%A8FFFFA87D7DFF7DFFA8FFA8A87DFFFFA87DFD04A8FFFFFFA8A8A8FFFFA8
%A8A8FD06FFA8A87DFFFFA87DA8FD06FFA8A8A8FFFFA87DA8FD06FFA8A87D
%FFFFA87DA8FD06FF7DA8A8FFFFA8A8A8FD06FFA8A87DFFFFA87DA8FD04FF
%FD05A8FFFFA8A8A8FD05FFA8A8A8FD04FFA8A87DFD04FF27F87DFD0BFF7D
%7DA8FD0BFF7DA8A87DF8FD05FF277DFFFF7DA8FD0CFF52A8A8FD0BFF27F8
%7DFFFFFFA87D7DFD05FF7DA8A8FD0FFF52F8A8FFFFFFA827FD0DFFA8FD0F
%FF7D2752FD04FF2752FD10FFA8FD0DFFA827FD04FF27F8FD19FFA852A87D
%A87D7D7DA87DA87DFD08FFA8FD0EFF52A87D7D7DA87D7D52A87DFD0EFFA8
%FD0AFF52A87DA87D7D7DA87DA852FD1BFFA8FD09FFA8FD08FF7DFD0EFFA8
%FD09FFA8FD0EFF7DFD0AFFA8FD09FFA8FD1BFF7DFFA8527D52277D52FF7D
%FD08FFA8FD0EFF7DFFFF527D7D27A852FF7DFD0EFFA8FD0AFF7DFFA8527D
%527D7D52FF7DFD1BFFA8FF7D5252FD047DFFA8FD08FFA8FD0EFFA8FF7D52
%527D7DA87DFFA8FD0EFFA8FD0AFFA8FF7D5252FD047DFFA8FD1BFF7DFD04
%FF7DA8A87DA8A8FD08FFA8FD0EFF7DA8FFFFFFA87DFF7DA87DFD0DFFA8A8
%FD0AFF7DA8FFFFFF7DA8A87DA8A8FD1CFFA8A8A8FFFFFF7DA8FD0AFFA8FD
%0EFFA8A8A87DFFFFFF7DA8FD0FFFA8FD0CFFA8A8A8FFFFFF7DA8FD1FFF7D
%FF7D7DA8A87DFD0AFFA8FD0DFFA8FD04FF52A87DFD11FFF8A8FD0CFFA8FF
%7DA87DFD20FFA8FFFFFFA8A85227FD0AFFA8FD0CFFA8FD04FF7D52FF527D
%FD0DFFA87D5227FD0BFF7D27A8A8FFFFFFA8FD1FFFA8FFFFFF2727FF27FD
%0AFFA8FD0CFF7DFD04FF5227FF277DFD0CFF27F8F827F8F87DFD09FF2752
%7D27FFFFFFA8FD1EFFA8FD04FF7D277DFFA8FD09FF7DFD0BFF7DFD06FF52
%A852FD0CFF27F87DFFFFA827F8A8FD07FFA8A87D5227FFFFFFA8FD1EFF7D
%FD04FFA87DFFFFFFA8A8FD07FFA8FD0BFFA8FD04FFA8A8FFFFFFA8A8FD09
%FF7DF87DFD05FFF827FD05FFA8A8FFFFFF52FD04FFA8FD1DFFA8FD04FFA8
%7D7D7D5252527D52FD06FFA8FD0AFFA8FD04FFA852A87D527D52A852FD08
%FF5227FFFFA87DFFFF7DF8FFFFFFA8A827A8A87D275252A8FFFFA8FD1DFF
%A8FFFFFF7DA87DF852277D527D527DFD05FFA8FD0AFF7DFFFFFF7DFF277D
%27275252FF7D7DFD07FF2752FFFF527DFFFF52F8FFFFA87D7D52527D527D
%277DA87DFFA8FD1DFFA8FD04FFA8A8FFFFFF7DFF7D52A8FD05FFA8FD0AFF
%A8FD04FFA8FD04FF7DA87D7DFD08FF52F8FFFF7D52FFFF7DF8FFFFFFA8A8
%FD04FF7DFF52FFFFFF7DFD1CFF7DFD07FF7DFFFFFF7DFFFFA87DA8A8FFFF
%A8FD09FFA8A8FD05FFA8A8FFFFA8A8A8FD09FF7DF852FD04FFA8F852FD04
%FFA8A8A8FFFFFF7DFD04FFA8FD1CFFA8FD08FFA8A8A8FD06FFA8A8A87DFD
%09FFA8FD08FFA87DA8FD0CFF52F852A8A87D2727FD04FFA8FFFFFFA8A8A8
%FD05FFA8FD1CFF7DFD13FF27F87DA8A8FD06FFA8FD09FFA8FD0EFF52FD04
%F827A8FFFFFFA8A8FD0BFFA8FD1CFFA8FD12FFA852F8A8FFFF7DA8A8FFFF
%FFA8FD08FFA8F8A8FD0FFF52F8A8FFFFFF5252FD0DFFA8FD1CFFA8FD11FF
%27F8F827F827A8FFFFFF7DA8A8A8FD04FF7DA87DA87D277DA87DA8A8FD07
%FF7DA87DA87D277DA87D52F852FD0CFFA8FD1CFFA8FD11FF27277DFFFFA8
%2727A8FD04FFA87DA8A8FF7DA8FD09FFA8FD07FFA8FD09FFA8FD0DFFA8FD
%1CFFA8FD10FF7DF87DFD05FFF827FD04FF7DFFFFFF27F827FD09FF7DFD07
%FF7DFD09FFA8FD0DFF7DFD1CFF7DFD10FF5227FF7D7DA87DFF7DF8FD04FF
%A8FD06FFA8FFFD047D52FFA8FD08FFA8FFFF7D7D7DA852FF7DFD0EFFA8FD
%1CFFA8FD10FFF852FFFF52FF52FF52F8FD04FF7DFD06FFA8A82727A82727
%FFA8FD08FFA8A87D2727F87D52FFA8FD0EFF7DFD1CFFA8FD10FF5227FF7D
%52A87DFF7DF8FD04FFA8FD06FFA8FFFFFFA8FFFFFFA8FD09FFA8FD07FFA8
%FD0EFFA8FD1CFFA8FD10FF7DF87DFD04FFA8F852FD04FF7DFD06FFA8A8FD
%05FFA8FD0AFFA8FD06FF7DFD0FFF7DFD1CFFA8FD11FF272752A87D7D2727
%A8FD04FFA8FD07FF7DA8A87DA8A87DA8FD09FFA8A87DA8A8A87DA8FD0EFF
%7DFD1DFFA8FD12FF52FD04F827A8FD04FF7DF87DFD0EFFA8A8FD08FF7DA8
%FD13FFA8FD1DFFA8FD14FFA8A8A8FD06FFA8277DFD10FF5252FD06FF52F8
%FD13FFA8FD1DFFA8FD16FF7DFD04FFA8F8F8F827F852A8FD0DFF27F852A8
%7DA87DA8277D7DA8A8FD10FFA8FD1DFF7DFD16FFA8FFFFFFA8F8277DFFA8
%7DF827FD0EFFA8FD09FFA8A8FD10FFA8FD1DFFA8FD16FFA8A8FFFF2727A8
%FD04FF7DF87DFD0EFF7DFD08FFA8FD10FFA8FD1EFFA8FD17FFA8FFFFF852
%FFFD047DFF2752FD0EFFA8FFFFA87D52FFFFFFA8FD10FFA8FD1EFFA8FD17
%FFA8FFFFF87DFFFF52A852FF5227FD0EFF7DFFFFFF2727FFFFFFA8FD10FF
%7DFD1EFFA8FD17FFA8FFFFF852FF527D7D7DFF2752FD0FFFA8FD06FFA8FD
%11FFA8FD1FFFA8FD17FF7DFF2727A8FD04FF7DF8A8FD0FFFA8FD06FF7DFD
%11FF7DFD1FFFA8FD17FFA8FFFFF8277DA8A87DF852FD10FFFD08A8FD10FF
%A8FD20FF7DFD17FF7DFFFFA827FD04F852FD14FF7DFD14FF527DFD1FFFA8
%FD18FFA8FFFFFF7DA87DFD16FFA8FD12FFA87DF8FD20FF7DFD18FFA8FFFF
%FFA8FD18FF527DFD0FFF52FD05F8A8FD1FFFA8FD17FFA8FD1CFF5227FD0E
%FF52F87DA8A87D52F8A8FD1EFFA8FD17FFA8FFFF7DFD15FF7DA87DA85252
%7DA87DA8A8FD08FFA8F87DFD04FFA82727FD1EFFA8FD17FFA8FFFFA8FD14
%FFA8A8FFFFA8A852FFFFFFA8FD09FF5227A8A852FF7DA852F8FD1FFF7DFD
%17FF7DFF7DFD15FFA8A8FFA85252FFFFA8FD0AFF52F8FFFFA87D52A87DF8
%A8FD36FFA8FFA8FD17FFA8FD04FFA8FD0BFF5227FFA8527D7DA852F8FD20
%FFA8FD16FF7DA8FD18FFA8A8FFFFA8FD0CFFA8F87DFD05FF2727FD20FFA8
%FD17FF7DFD1AFFA8A8FD0EFF52F852A8FF7D52F8A8FD21FF7DFD16FF7DFD
%1AFF2752FD0FFF52FD05F8A8FD22FFA827FFA8A8A8FD11FF7DFD1AFF5227
%FD11FF7D7DA8FD24FFA827FD05F827A8FD0EFF7DFD1AFF527DFD11FFA8FD
%27FF27277DA87D7DF827A8FD0CFFA8FFA8FD17FFA87DFFFFA8A8FD0FFF7D
%FD26FF52F87DFD04FFA8F87DFD0CFF7DFF7DFD15FFA8A8A8FD05FF7DFD0D
%FF7DFD27FF5227FFFD047DFF5227FD0CFFA8FFA8FD14FFA8FD09FFA8A8FD
%0BFFA8FD27FFF852FFFF52A852FF5227FD0CFF7DFFA8FD15FF7DFFFFA8A8
%7D7DFFFFA8FD0CFF7DFD27FF5252FF527D7D7DFF5227FD0CFFA8FFFFA8FD
%14FFA8FFFF527D277DFFFF7DFD0CFFA8FD27FF52F8A8FD04FFA8F87DFD0C
%FF7DFFFFA8FD14FFA8A8FD06FFA8FD0DFF7DFD28FF27277DFFFF7D2727FD
%0CFFA8FFFFFFA8FD15FF7DA87DFD05A8FD0DFFA8FD29FF27F8F827F827A8
%FD0CFFA8FD04FFA8FD13FFA8FFFFA8FFFF7DFD0FFF7DFD2AFFA87D7DA8A8
%FD0DFF7DFD04FFA8FD0AFF7DA8A8FD04FFA8A8FFFFFF52FFA852FD0FFFA8
%FD2EFFA8FD0DFFA8FD04FF7DFD08FF52FD04F827A8277DA8FD04FFF8527D
%F8FD0EFFA8A8FD2FFFA8FD0CFFA8FD0CFF52F87D7DFF7D27F8277DFD05FF
%27A87D52FD0EFFA8FD30FF7DFD0CFFA8FD05FFA8FD05FF7DF87DFD04FFA8
%2727FD05FF7DA8FFFFA8A8FD0DFFA8FD31FFA8FD0BFFA8FD05FF7DFD05FF
%2727FFFF7D7DFFFF52F8FD04FF7DFD06FFA8A8FD0BFF7DFD31FFA8FD0BFF
%A8FD05FFA8FD05FF2727FFFFFF52FFFF7DF8FFFFA8A8FFFFA87D527DFFFF
%A8A8FD0AFFA8FD31FFA8FD0BFFA8FD0BFF2727FFFF7D52FFFF52F8FFFFFF
%A8A8FF527D277DFFA8A8FD0BFFA8FD31FFA8A8FD09FF7DFD07FF7DFD04FF
%7DF8A8FD04FFA82727FD04FFA87DFFFFFFA8A8A8FD0CFFA8FD32FFA8FD09
%FFA8FD07FFA8FD05FF27F87DFFFF7D27F8FD04FFA8A8FFFD04A8FD0EFFA8
%FD32FF7DFD09FF7DFD07FFA8A8FD04FFA827FD05F8A8FFFFFFA8A8FFFFFF
%A8FD10FFA8FD32FFA8FD09FFA8FD08FFA8FD06FFA827277DFD04FFA8FD16
%FFA8FD32FF7DFD09FF7DFD08FFA8FD08FF27FFFFA827A8FD05FFA87DA8A8
%A87DFD0CFFA8FD32FFA8FD09FFA8FD08FFA8FD06FFA8A8FFA8A82727A8FD
%04FFA8A8FD05FFA8A8FD0AFF7DFD32FF7DFD09FF7DFD09FF7DFFFFFFA8A8
%A8FD04FFA8A8FD04FFA8FD09FFA8FD09FFA8FD32FFA8FD09FFA8FD09FFA8
%FFFFA8A8FFFF7D527DFFFFFF7DFFFFFFA8FFFF527D527D7DFFFFA8FD09FF
%A8FD32FF7DFD09FF7DFD09FF7DFFFFFF7DFFFF5252F8FFFFA8A8FFFFFFA8
%FFFF5252F85252FFFFA8FD09FFA8FD32FFA8FD09FFA8FD0AFFA8FFFFFFA8
%FD05FF7DFD05FFA8FD09FFA8FD09FFA8FD32FF7DFD09FF7DFD0AFFA8FD04
%FFA87DFFA8A8FD07FFA8A8FD05FFA8A8FD0AFFA8FD32FFA8FD09FFA8FD0A
%FFA8FD04FFA8FFA8FD0BFF2727A8A8A8FD0CFFA8FD32FF7DFD09FF7DFD0A
%FF5227FFFF7D7DFD09FF7D522752F8A8FD0FFFA8FD32FFA8FD09FFA8FD0A
%FF7D52A8FFF852FD08FF27F8275227F827FD0FFF7DFD32FF7DFD09FF7DFD
%0AFFA852FF7D52FD08FF52F87DFFFFFF7D2727FD0EFFA8FD32FFA8FD09FF
%A8FD09FFA8FD04FFA8A8FD07FFF852FD05FF7DF8A8FD0DFFA8FD32FF7DFD
%09FF7DFD07FFA8A8FFFF7D7D27FFFFA8A8FD04FFA8F8A87D7DA87DA8A8F8
%7DFD0DFFA8FD32FFA8FD09FFA8FD07FFA8A8FFFF52F852FFFFA8A8FD04FF
%A8F87DFFA87D52A8A82752FD0DFFA8FD32FFA8FD09FF7DFD08FFA8A8FD05
%FF7DA8FD06FFF87D7D52FD047DF8A8FD0DFFA8FD33FFA8FD08FFA8FD0AFF
%A8FFFFFFA8FD08FF2727FD05FF2727FD0EFFA8FD33FFA8FD08FFA8A8FD0A
%FFA87DA8FD07FF7DA8A827F8527D52F8F8A8FD0EFFA8FD33FF7DFD09FFA8
%FD0AFFA8F8A8FD06FFA8FD04FF52F8F8F852A8FD0FFF7DFD33FFA8FD09FF
%A8FD0BFF27FD04FFA8A8A8FD19FF7DFD34FFA8FD09FFA8FD0AFFA8A8A8FF
%FF27A8FD1BFFA8FD34FFA8FD0AFF7DFD07FFA8A8FFFFFFA82752A8FD1AFF
%A8A8FD34FFA8FD0BFFA8FD05FF7DFFA87D277DA8FF7DFD1BFF7DFD36FF7D
%FD0AFFA8FD04FF52FFFFFD04527DFFFF52FD19FF7DFD37FFA8FD0BFFA8FD
%04FFA8FD06FFA87DFD19FFA8FD38FF7DFD0BFFA8A8FFFFFD04A8FFFFFFA8
%A8A87DA8FD16FFA8A8FD39FFA8FD0BFF7DA8A8FFFFFFA87DA8A8FD05FFA8
%A8A8FD13FFA8FD39FFA82752FD08FFA87DFF7DA8A8FFFF7DF8FD09FFA8A8
%7DFD10FFA8FD3BFF277DA8FD05FFA8A8FD04FFF852FFFF7D52FD0DFFA8A8
%FD08FFA8A8FF5252FD3BFFA8A87DFF7DFF7D277DFD06FF52F8A8A8FFA8A8
%FD0EFFA8A87D52A8FFA8A8FFFF7DF827FD3AFFA8A8FD04FFA82752A8FD06
%FFA8A8FD04FFA8A8FD10FFF8277DFD05FF7DFD3AFF7DFF52277DF85252FF
%A8A8FD05FF7DFFA8277D525252FFA8A8FD0EFFA8A8FF277D527D5252A87D
%FD38FFA8FFFD047D527DFFA8FD06FFA8A8FF27527D527DFFA8FD0FFFA8A8
%FF52277D527D7DFFA8FD39FFA8A8FFFF7DFF52A8FD09FF7DFFFF7DFF527D
%FD11FFA8A8A8FF7DA8A852A8FD3CFFA8FFA8A8FD0CFFA8FFFFA8A8FD14FF
%A8A8FFA8A8FD3FFF27F8FD0EFF27F8A8FD17FFF852FD40FF7D52FD0FFF27
%FD18FF52A8FD3DFF7D7DA87D7D7DA87DA87DFD06FFA87DA87D7D7DA87DA8
%7DFD10FF7D7DA87DA87DA87D7DA8FD38FFA8FD07FFA8FD07FFA8FD08FFA8
%FD0FFFA8FD08FF7DFD38FFA8FF52F87D52277D52A8FD07FFA852F8FD047D
%52FFA8FD0FFF7DA8F8277D275252FFA8FD38FFA8FF525252FD047DA8FD06
%FFA8FF5252527DFF527DA8FD10FFA8A8FD047D527DFFA8FD38FF7DFD04FF
%7DA8A87DA8FD06FF7DFD04FFA87DA87DA8FD0FFFA8A8FD04FF7DFF7D7DFD
%38FFA8FD08FFA8FD07FFA8FD08FFA8FD0FFF7DFD08FFA8FD38FFA87DA87D
%A852277DA87DFD07FF7DA87DA852277DA87DFD10FF7D7DA87DA827527DA8
%A8FD3DFF5227FD0EFFA8F8FD18FF277DFD40FF7D7DA8FD0DFF7D52A8FD16
%FFA852A8FD3DFFA8A8A8FFFFA87DFD0AFFA87DFFFFFF7DA8FD12FFA8A8A8
%FFA8A8A8FD3AFF7DFD07FFA8A8A8FD05FF7DA8FD06FFA8A8A8FD0EFFA87D
%FD07FF7D7DFD37FFA8FFFFFF7DA8F85252FFFFA8FD05FFA8FFFF7D7D527D
%7D7DFFA8FD0EFFA8FFFFA8FD047D52FFA8FD37FFA8FFFF527D527D527DFF
%FF7DFD05FF7DFF7D7D277D52FF52FF7DFD0EFFA8FFFFFD05527DFFA8FD37
%FFA8FD05FF52FF7DFFFFA8FD05FFA8FD04FF52FFA8A8FFA8FD0EFF7DFD04
%FFA8A8FF7DFFA8FD37FFA87DA87DA87DA87DA87DA87DFD05FF52A87DA87D
%A87DA87DA87DFD0EFF7D7DA87DA87DA87DA87D7DFD1DFFFF
%%EndData
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%ADOBeginClientInjection: DocumentProlog Start "AI10"
%ADOEndClientInjection: DocumentProlog Start "AI10"
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2000 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Utils 60 dict dup begin put
/bdf
{
	bind def
} bind def
/nd{
	null def
}bdf
/xdf
{
	exch def
}bdf
/ldf 
{
	load def
}bdf
/ddf
{
	put
}bdf	
/xddf
{
	3 -1 roll put
}bdf	
/xpt
{
	exch put
}bdf
/ndf
{ 
	
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/bdict
{
	mark
}bdf
/edict
{
	counttomark 2 idiv dup dict begin {def} repeat pop currentdict end
}def
	
/ps_level
	/languagelevel where{
		pop systemdict /languagelevel get exec
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr} stopped {
		-1
	}if
def
/makereadonlyarray
{
	/packedarray where{
		pop packedarray
	}{
		array astore readonly
	}ifelse
}bdf
/map_reserved_ink_name
{
	dup type /stringtype eq{
		dup /Red eq{
			pop (_Red_)
		}{
			dup /Green eq{
				pop (_Green_)
			}{
				dup /Blue eq{
					pop (_Blue_)
				}{
					dup /Cyan eq{
						pop (_Cyan_)
					}{
						dup /Magenta eq{
							pop (_Magenta_)
						}{
							dup /Yellow eq{
								pop (_Yellow_)
							}{
								dup /Black eq{
									pop (_Black_)
								}{
									dup () cvn eq{
										pop (Process)
									}if
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf
		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	
	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne
			{
			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark
			} if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		} ifelse
	
	AGMUTIL_GSTATE_flt setflat
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/rdline
{
	currentfile AGMUTIL_str256 readline pop
} bdf
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%) anchorsearch {pop} if
} bdf
/filter_cmyk
{	
	dup type /filetype ne{
		0 () /SubFileDecode filter
	}if
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length /AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	] cvx
} bdf
/AGMUTIL_imagefile nd
/AGMUTIL_imbuf nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	dup /DataSource {AGMUTIL_imagefile AGMUTIL_imbuf readstring pop} put
	exch
	load exec
}def
/write_image_file
{
	begin
	{ (AGMUTIL_imagefile) (w+) file } stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		Adobe_AGM_Utils/AGMUTIL_imbuf Width BitsPerComponent mul 7 add 8 idiv string ddf
		1 1 Height { 
			pop
			DataSource dup type /filetype eq{
				AGMUTIL_imbuf readstring pop
			}{
				exec
			} ifelse
			AGMUTIL_imagefile exch writestring
		}for
		true
	}ifelse
	end
}def
/close_image_file
{
	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile
}def
/consumeimagedata
{
	begin
	currentdict /MultipleDataSources known not
		{/MultipleDataSources false def} if
	MultipleDataSources
		{
		1 dict begin
		/flushbuffer Width cvi string def
		1 1 Height cvi
			{
			pop
			0 1 DataSource length 1 sub
				{
				DataSource exch get
				dup type dup 
				/filetype eq
					{
					exch flushbuffer readstring pop pop
					}if
				/arraytype eq
					{
					exec pop
					}if
				}for
			}for
		end
		}
		{
		/DataSource load type dup 
		/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 div mul cvi string def
			1 1 Height { pop DataSource flushbuffer readstring pop pop} for
			end
			}if
		/arraytype eq
			{
			1 1 Height { pop DataSource pop } for
			}if
		}ifelse
	end
}bdf
/addprocs
{
     2{/exec load}repeat
     3 1 roll
     [ 5 1 roll ] bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
    currentdict 2 index known{
    	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
	    addprocs /TransferFunction xdf 
	    currentdict end def
		currentdict end sethalftone
	}{ 
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs /TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/doc_setup{
	Adobe_AGM_Utils begin
}bdf
/doc_trailer{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright (C) 1997-1999 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Core 205 dict dup begin put
/nd{
	null def
}bind def
/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_src256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen [currentscreen] cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_will_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSA_cache 0 dict def
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_pattern_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_ovp nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/knockout_unitsq nd
/AGMCORE_CRD_cache where{
	pop
}{
	/AGMCORE_CRD_cache 0 dict def
}ifelse
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer {readline} stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type /dicttype eq{
		dup /HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup /HalftoneType get 2 eq{
				/GraySpotFunction get
			}{ 
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
} def
/clp_npth
{
	clip newpath
} def
/eoclp_npth
{
	eoclip newpath
} def
/stkpath_clp_npth
{
	strokepath clip newpath
} def
/stk_n_clp_npth
{
	gsave stroke grestore clip newpath
} def
/npth_clp
{
	newpath clip
} def
/graphic_setup
{
	/AGMCORE_graphicsave save def
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[] 0 setdash
	10 setmiterlimit
	newpath
	false setoverprint
	false setstrokeadjust
	Adobe_AGM_Core/spot_alias get exec
	/Adobe_AGM_Image where {
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			get exec
		}{
			pop pop
		}ifelse
	} if
	100 dict begin
	/showpage {} def
	mark
} def
/graphic_cleanup
{
	cleartomark
	end
	AGMCORE_graphicsave restore
} def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
			
	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
		
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				} if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show
			
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}
			{
				AGMCORE_str256 exch AGMCORE_tmp exch put
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			} ifelse
		} forall
} bdf
/doc_setup{
	Adobe_AGM_Core begin
	
	/AGMCORE_will_host_separate xdf
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	
	errordict /AGM_handleerror known not{
		errordict /AGM_handleerror errordict /handleerror get put
		errordict /handleerror {
			Adobe_AGM_Core begin
			$error /newerror get AGMCORE_cur_err null ne and{
				$error /newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error /newerror true put
			end
			errordict /AGM_handleerror get exec
			} bind put
		}if
		
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if
	
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	level2 not{
		/xput{
			dup load dup length exch maxlength eq{
				dup dup load dup
				length dup 0 eq {pop 1} if 2 mul dict copy def
			}if
			load begin
				def
 			end
		}def
	}{
		/xput{
			load 3 1 roll put
		}def
	}ifelse
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 8 def
											
		/AGMCORE_&gsave /gsave ldf
		/AGMCORE_&grestore /grestore ldf
		/AGMCORE_&grestoreall /grestoreall ldf
		/AGMCORE_&save /save ldf
		/AGMCORE_gdictcopy {
			begin
			{ def } forall
			end
		}def
		/AGMCORE_gput {
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget {
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave {
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore {
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt {1 add} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
		}def
		/grestoreall {
			AGMCORE_&grestoreall
			Adobe_AGM_Core
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 
		}def
		/save {
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core begin
				/AGMCORE_gstackptr exch def
				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def
			end
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		0 1 AGMCORE_gstack length 1 sub {
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		} for
	}if
	/currentcmykcolor [0 0 0 0] AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace [/DeviceGray] AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent () AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	end
}def
/page_setup
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3 {
			3 index add neg dup 0 lt {
				pop 0
			} if
			3 1 roll
		} repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{
		pop
	}ndf
	/currentoverprint
	{
		false
	}ndf
	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{ 
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/LeaveColorUnchanged eq
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where {pop}{
		/convert_spot_to_process
		{
			dup dup (None) eq exch (All) eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor
						currentgray 0 eq
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						Adobe_AGM_Core/AGMCORE_name xddf
						false
						currentpagedevice/OverrideSeparations known
							{
							currentpagedevice/OverrideSeparations get
								{
								/HqnSpots /ProcSet resourcestatus
									{
									pop pop pop true
									}if
								}if
							}if					
							{
							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not
							}{
							gsave
							[/Separation AGMCORE_name /DeviceGray {}]setcolorspace
							false
							currentpagedevice/SeparationColorNames 2 copy known
							{
								get
								{ AGMCORE_name eq or}forall
							not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		}def
	}ifelse
	/convert_to_process where {pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
				true exch
					{
					convert_spot_to_process and
					}
				forall
				}{
				false exch
					{
					convert_spot_to_process or
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	AGMCORE_host_sep AGMCORE_will_host_separate not and {
		/AGMCORE_cur_err /AGMCORE_color_space_onhost_seps def
		AGMCORE_color_space_onhost_seps
	}if
	/AGMCORE_avoid_L2_sep_space  
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	AGMCORE_host_sep{
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			  	AGMCORE_magenta_plate{
			  		{4 3 roll pop pop pop}
			  	}{
			  		AGMCORE_yellow_plate{
			  			{4 2 roll pop pop pop}
			  		}{
			  			{4 1 roll pop pop pop}
			  		}ifelse
			  	}ifelse
			}ifelse
		def
		/clip AGMCORE_key_known not{
			Adobe_AGM_Core/AGMCORE_&clip /clip load put
			/clip
			{
				current_spot_alias{
					currentdict/InksUsed known{
						[
						InksUsed{
							dup map_alias{
								/Name get exch pop
							}if
						}forall
						]
						/InksUsed xdf
					}if
				}if
				AGMCORE_&clip
			}def
		}if
		/eoclip AGMCORE_key_known not{
			Adobe_AGM_Core/AGMCORE_&eoclip /eoclip load put
			/eoclip
			{
				current_spot_alias{
					currentdict/InksUsed known{
						[
						InksUsed{
							dup map_alias{
								/Name get exch pop
							}if
						}forall
						]
						/InksUsed xdf
					}if
				}if
				AGMCORE_&eoclip
			}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{ 
				4 {4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{ 
				Adobe_AGM_Core begin
					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf
				end
				[/Separation 4 -1 roll /DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation (All) /DeviceGray {}] setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4 {4 index mul 4 1 roll} repeat
		setcmykcolor pop
	}ndf
	
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	
	/map_index
	{
		1 index mul exch getinterval {255 div} forall
	}def
	
	level2{
		/mo /moveto ldf
		/li /lineto ldf
		/cv /curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		/level2ScreenFreq{
			begin
			60
			HalftoneType 1 eq{
				pop Frequency
			}if
			HalftoneType 2 eq{
				pop GrayFrequency
			}if
			HalftoneType 5 eq{
				pop Default level2ScreenFreq
			}if
			 end
		}def
		/currentScreenFreq{
			currenthalftone level2ScreenFreq
		}def
		level2 /setcolorspace AGMCORE_key_known not and{
		
			/AGMCORE_&&&setcolorspace /setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get dup /Separation eq
					{
						pop
						dup length array copy
						dup dup 1 get
						current_spot_alias
						{
							dup map_alias
							{
								begin
								/sep_colorspace_dict currentdict AGMCORE_gput
								pop pop	pop
									
								[ 
									/Separation Name 
									CSA map_csa
									dup /MappedCSA xdf 
									/sep_colorspace_proc load
								]
								dup Name
								end
							}if
						}if
						map_reserved_ink_name 1 exch put
					}{
						/DeviceN eq 
						{
							dup length array copy
							dup dup 1 get [ 
								exch {
									current_spot_alias{
										dup map_alias{
											/Name get exch pop
										}if
									}if
									map_reserved_ink_name
								} forall 
							] 1 exch put
						}if
					}ifelse
				}if
			}def
			/setcolorspace
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get /Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				AGMCORE_&&&setcolorspace
			}def
		}if	
	}{
		
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/currentScreenFreq{
			currentscreen pop pop
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		} def
		
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		} def
		
		/n_color_components
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop 1
			}{
				/DeviceCMYK eq{
					4
				}{
					3
				}ifelse
			}ifelse
		} def
		
		/setcolor_devicecolor
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
	
		/setcolor
		{
			currentcolorspace 0 get
			dup /DeviceGray ne{
				dup /DeviceCMYK ne{
					dup /DeviceRGB ne{
						dup /Separation eq{
							pop
							currentcolorspace 3 get exec
							currentcolorspace 2 get
						}{
							dup /Indexed eq{
								pop
								currentcolorspace 3 get dup type /stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err /AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		} def
	}ifelse
	
	/sop /setoverprint ldf
	/lw /setlinewidth ldf
	/lc /setlinecap ldf
	/lj /setlinejoin ldf
	/ml /setmiterlimit ldf
	/dsh /setdash ldf
	/sadj /setstrokeadjust ldf
	/gry /setgray ldf
	/rgb /setrgbcolor ldf
	/cmyk /setcmykcolor ldf
	/sep /setsepcolor ldf
	/idx /setindexedcolor ldf
	/colr /setcolor ldf
	/csacrd /set_csa_crd ldf
	/sepcs /setsepcolorspace ldf
	/idxcs /setindexedcolorspace ldf
	/cp /closepath ldf
	/clp /clp_npth ldf
	/eclp /eoclp_npth ldf
	/spclp /stkpath_clp_npth ldf
	/f /fill ldf
	/ef /eofill ldf
	/s /stroke ldf
	/sclp /stk_n_clp_npth ldf
	/nclp /npth_clp ldf
	/gset /graphic_setup ldf
	/gcln /graphic_cleanup ldf
	
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/doc_trailer{
}def
systemdict /findcolorrendering known{
	/findcolorrendering systemdict /findcolorrendering get def
}if
systemdict /setcolorrendering known{
	/setcolorrendering systemdict /setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/current_ink
{
	dup length 0 eq{
		pop true
	}{
		Adobe_AGM_Core/ink_result false put
		{
			dup /ProcessCyan eq{
				AGMCORE_cyan_plate ink_result or Adobe_AGM_Core/ink_result xddf
			}{
				dup /ProcessMagenta eq{
					AGMCORE_magenta_plate ink_result or Adobe_AGM_Core/ink_result xddf
				}{
					dup /ProcessYellow eq{
						AGMCORE_yellow_plate ink_result or Adobe_AGM_Core/ink_result xddf
					}{
						dup /ProcessBlack eq{
							AGMCORE_black_plate ink_result or Adobe_AGM_Core/ink_result xddf
						}{
							dup /sep_colorspace_dict AGMCORE_gget dup null eq{
								pop false ink_result or Adobe_AGM_Core/ink_result xddf
							}{
								/Name get eq{
									1 setsepcolor
									currentgray 1 ne ink_result or Adobe_AGM_Core/ink_result xddf
								}{
									false ink_result or Adobe_AGM_Core/ink_result xddf
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			pop 
		} forall
		ink_result
	}ifelse
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA map_csa setcolorspace_opt
		set_crd
	end
}
def
/setsepcolor
{ 
	
	/sep_colorspace_dict AGMCORE_gget begin
		dup /sep_tint exch AGMCORE_gput
		TintProc
	end
} def
/sep_colorspace_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2 {AGMCORE_tmp mul NComponents 1 roll} repeat
			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll
				} repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
} def
/sep_colorspace_gray_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
} def
/sep_proc_name
{
	dup 0 get 
	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{
		pop [/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
} def
/setsepcolorspace
{ 
	
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup /sep_colorspace_dict exch AGMCORE_gput
	begin
	/MappedCSA CSA map_csa def
	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf
	
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 
		] setcolorspace_opt
		/TintProc {
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get /DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc [
				Components aload pop Name findcmykcustomcolor 
				/exch cvx /setcustomcolor cvx
			] cvx bdf
		}{
 			AGMCORE_host_sep Name (All) eq and{
 				/TintProc { 
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name () eq and{
					/TintProc [
						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{
							cvx /setcmykcolor cvx
						}{
							cvx /setgray cvx
						}ifelse
					] cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc [
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get /DeviceGray eq{
								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx
							}if
							/Name cvx /findcmykcustomcolor cvx /exch cvx
							
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
							}{
								Name inRip_spot_has_ink not
							}ifelse
							{
		 						/pop cvx 1
							}if
							/setcustomcolor cvx
						] cvx bdf
 					}{ 
						/TintProc /setcolor ldf
						
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
} def
/setindexedcolorspace
{
	dup /indexed_colorspace_dict exch AGMCORE_gput
	begin
		/MappedCSA CSA map_csa def
		AGMCORE_host_sep level2 not and{
			0 0 0 0 setcmykcolor
		}{
			[/Indexed MappedCSA 
			level2 not has_color not and{
				dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{
					pop [/DeviceGray]
				}if
				HiVal GrayLookup
			}{
				HiVal 
				currentdict/RangeArray known{
					{ 
						/indexed_colorspace_dict AGMCORE_gget begin
						Lookup exch 
						dup HiVal gt{
							pop HiVal
						}if
						NComponents mul NComponents getinterval {} forall
						NComponents 1 sub -1 0{
							RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
							NComponents 1 roll
						}for
						end
					} bind
				}{
					Lookup
				}ifelse
			}ifelse
			] setcolorspace_opt
			
			set_crd
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget/Lookup get 4 3 -1 roll map_index setcmykcolor
	}{
		setcolor
	}ifelse
} def
/ignoreimagedata
{
	currentoverprint not{
		gsave 
		dup begin
		1 setgray
		0 0 ImageMatrix itransform 
		Width Height ImageMatrix idtransform rectfill 
		end
		grestore
		}if
	consumeimagedata
}def
/add_csa
{
	Adobe_AGM_Core begin
			/AGMCORE_CSA_cache xput
	end
}def
/map_csa
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get
	}if
}def
/add_csd
{
	Adobe_AGM_Core begin
		/AGMCORE_CSD_cache xput
	end
}def
/get_csd
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get
	}if
}def
/get_csd_by_name
{
	dup type dup /nametype eq exch /stringtype eq or{
		Adobe_AGM_Core begin
		/AGMCORE_CSD_Name xdf
		AGMCORE_CSD_cache
		{
			dup /Name get AGMCORE_CSD_Name eq
			{
				exch pop exit
			}{
				pop
			}ifelse
			pop
		}forall
		end
	}if
}def
/cachepattern_level2
{
	4 dict begin
	/comparebuffer exch def
	/holdbuffer exch def
	/readbuffer 1024 string def
	/LZWFilter holdbuffer /LZWEncode filter def
	{
		currentfile readbuffer readline not
			{pop exit}
		if
		dup LZWFilter exch writestring
		LZWFilter (\n) writestring
		comparebuffer eq
			{exit}
		if
	}loop
	LZWFilter closefile
	end
}def
/cachepattern_level3
{
	3 dict begin
	/comparebuffer exch def
	/readbuffer 1024 string def
	/DoEOL false def
	{ 
		DoEOL
			{
			(\n)
			/DoEOL false def
			}
			{
			currentfile readbuffer readline not
				{pop ()}
				{
				dup length 0 eq
					{ pop(\n)}
					{
					dup comparebuffer eq
						{pop ()}
						{/DoEOL true def}
					ifelse
					}
				ifelse
				}
			ifelse
			}
		ifelse
	} /ReusableStreamDecode filter
	end
}def
/add_pattern
{
	Adobe_AGM_Core begin
		/AGMCORE_pattern_cache xput
	end
}def
/get_pattern
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get
	}if
}def
/make_pattern
{
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
	makepattern
}def
/set_pattern
{
	dup /PatternType get 1 eq{
		dup /PaintType get 1 eq{
			false sop [/DeviceGray] setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{
		pop
	}{
		setcolorspace
	}ifelse
}def
/updatecolorrendering
{
	
	currentcolorrendering/Intent known{
		currentcolorrendering/Intent get
	}{
		null
	}ifelse
	
	Intent ne{
		false  
		Intent
		AGMCORE_CRD_cache {
			exch pop 
			begin
				dup Intent eq{
					currentdict setcolorrendering_opt
					end 
					exch pop true exch	
					exit
				}if
			end
		} forall
		pop
		not{
			systemdict /findcolorrendering known{
				Intent findcolorrendering pop
				/ColorRendering findresource 
				dup length dict copy
				setcolorrendering_opt
			}if
		}if
	}if
} def
/add_crd
{
	AGMCORE_CRD_cache 3 1 roll put
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/CRD known{
			AGMCORE_CRD_cache CRD get dup null ne{
				setcolorrendering_opt
			}{
				pop
			}ifelse
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
	}if
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp) flushinput
	}if
}def
/cpaint_gsep
{
	Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep) flushinput
	}if
}def
/cpaint_gend
{
	newpath
}def
/AGMCORE_ctm_stack bdict
	/push_ctm {
		stack length size le{
			stack dup length 2 mul array 
			dup /stack exch def
			copy pop
		}if
		stack size 3 -1 roll put
		/size size 1 add def
	}
	/pop_ctm {
		/size size 1 sub def
		size 0 lt{ 
			/size 0 def
		}if
		stack size get
	}
	/stack 1 array
	/size 0 
edict 
def
/save_ctm
{
	matrix currentmatrix AGMCORE_ctm_stack begin 
		push_ctm 
	end
}def
/restore_ctm
{
	AGMCORE_ctm_stack begin
		pop_ctm 
	end
	setmatrix
}def
/path_rez
{
	dup 0 ne{
		AGMCORE_deviceDPI exch div 
		dup 1 lt{
			pop 1
		}if
		setflat
	}{
		pop
	}ifelse 	
}def
/rdcmntline {
	currentfile AGMCORE_str256 readline pop
	(%) anchorsearch {pop} if
} def
/set_spot_alias_ary
{
	/AGMCORE_SpotAliasAry where{
		pop pop
	}{
		Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
		true set_spot_alias
	}ifelse
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry{
				dup/Name get AGMCORE_name eq{
					save exch
					/Adobe_AGM_Core currentdict def
					/CSD get get_csd
					exch restore
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	
	/AGMCORE_&setcustomcolor AGMCORE_key_known not {
		Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put
	} if
	/customcolor_tint 1 AGMCORE_gput
	
	Adobe_AGM_Core begin
	/setcustomcolor
	{
		
		dup /customcolor_tint exch AGMCORE_gput
		
		current_spot_alias{
			1 index 4 get map_alias{
				mark 3 1 roll
				setsepcolorspace
				counttomark 0 ne{
					setsepcolor
				}if
				pop
				pop
			}{
				AGMCORE_&setcustomcolor
			}ifelse
		}{
			AGMCORE_&setcustomcolor
		}ifelse
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd /setpagedevice load def
	/setpagedevice { get_gstate spd set_gstate } def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known{
			currentpagedevice/NegativePrint get Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						bdict /NegativePrint Adobe_AGM_Core/AGMCORE_inverting get edict setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 
		fill grestore
	}if
	end
}def
/lw_save_restore_override {
	/md where {
		pop
		md begin
		/pmSVsetup{} def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage /showpage load def}
		ifelse
		/showpage {orig_showpage gR} def
		end
	}if
}def
/pscript_showpage_override {
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage /restore load def
		/restore {exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where {
		pop
		md /initializepage known {
			md /initializepage {} put
		} if
		md /rC known {
			md /rC {4{pop}repeat} put
		} if
	}if
	
	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put
}def
/driver_check_media_override
{
	Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne
	{
		Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix
	}if
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def
	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def
	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) def
end
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.12 0
%%Copyright: Copyright 1997-2001 Adobe Systems Incorporated.  All Rights Reserved.
%%Version: 2.12 0
userdict/Adobe_CoolType_Core 60 dict dup begin put/Level2? systemdict
/languagelevel known dup{pop systemdict/languagelevel get 2 ge}if def Level2?
not{/currentglobal false def/setglobal/pop load def/gcheck{pop false}bind def
/currentpacking false def/setpacking/pop load def/SharedFontDirectory 0 dict
def}if currentpacking true setpacking/@_SaveStackLevels{Adobe_CoolType_Data
begin @opStackCountByLevel @opStackLevel 2 copy known not{2 copy 3 dict dup
/args 7 index 5 add array put put get}{get dup/args get dup length 3 index lt{
dup length 5 add array exch 1 index exch 0 exch putinterval 1 index exch/args
exch put}{pop}ifelse}ifelse begin count 2 sub 1 index lt{pop count 1 sub}if
dup/argCount exch def dup 0 gt{exch 1 index 2 add 1 roll args exch 0 exch
getinterval astore pop}{pop}ifelse count 1 sub/restCount exch def end
/@opStackLevel @opStackLevel 1 add def countdictstack 1 sub
@dictStackCountByLevel exch @dictStackLevel exch put/@dictStackLevel
@dictStackLevel 1 add def end}bind def/@_RestoreStackLevels{
Adobe_CoolType_Data begin/@opStackLevel @opStackLevel 1 sub def
@opStackCountByLevel @opStackLevel get begin count restCount sub dup 0 gt{{pop
}repeat}{pop}ifelse args 0 argCount getinterval{}forall end/@dictStackLevel
@dictStackLevel 1 sub def @dictStackCountByLevel @dictStackLevel get end
countdictstack exch sub dup 0 gt{{end}repeat}{pop}ifelse}bind def
/@_PopStackLevels{Adobe_CoolType_Data begin/@opStackLevel @opStackLevel 1 sub
def/@dictStackLevel @dictStackLevel 1 sub def end}bind def/@Raise{exch cvx
exch errordict exch get exec stop}bind def/@ReRaise{cvx $error/errorname get
errordict exch get exec stop}bind def/@Stopped{0 @#Stopped}bind def/@#Stopped{
@_SaveStackLevels stopped{@_RestoreStackLevels true}{@_PopStackLevels false}
ifelse}bind def/@Arg{Adobe_CoolType_Data begin @opStackCountByLevel
@opStackLevel 1 sub get/args get exch get end}bind def/doc_setup{
Adobe_CoolType_Core begin/mov/moveto load def/nfnt/newencodedfont load def
/mfnt/makefont load def/sfnt/setfont load def/ufnt/undefinefont load def/chp
/charpath load def/awsh/awidthshow load def/wsh/widthshow load def/ash/ashow
load def/sh/show load def end userdict/Adobe_CoolType_Data 6 dict dup begin
/AddWidths? false def/CC 0 def/charcode 2 string def/@opStackCountByLevel 32
dict def/@opStackLevel 0 def/@dictStackCountByLevel 32 dict def
/@dictStackLevel 0 def end put}bind def/doc_trailer{currentdict
Adobe_CoolType_Core eq{end}if}bind def/page_setup{Adobe_CoolType_Core begin}
bind def/page_trailer{end}bind def/unload{systemdict/languagelevel known{
systemdict/languagelevel get 2 ge{userdict/Adobe_CoolType_Core 2 copy known{
undef}{pop pop}ifelse}if}if}bind def/ndf{1 index where{pop pop pop}{dup xcheck
{bind}if def}ifelse}def/findfont dup systemdict begin userdict begin
/globaldict where{/globaldict get begin}if dup where pop exch get/globaldict
where{pop end}if end end def/systemfindfont/findfont load def/undefinefont{pop
}ndf/copyfont{currentglobal 3 1 roll 1 index gcheck setglobal dup null eq{0}{
dup length}ifelse 2 index length add 1 add dict begin exch{1 index/FID eq{pop
pop}{def}ifelse}forall dup null eq{pop}{{def}forall}ifelse currentdict end
exch setglobal}bind def/copyarray{currentglobal exch dup gcheck setglobal dup
length array copy exch setglobal}bind def/newencodedfont{currentglobal{
SharedFontDirectory 3 index known{SharedFontDirectory 3 index get
/FontReferenced known}{false}ifelse}{FontDirectory 3 index known{FontDirectory
3 index get/FontReferenced known}{SharedFontDirectory 3 index known{
SharedFontDirectory 3 index get/FontReferenced known}{false}ifelse}ifelse}
ifelse dup{3 index findfont/FontReferenced get 2 index findfont ne{pop false}
if}if{pop 1 index findfont/Encoding get exch 0 1 255{2 copy get 3 index 3 1
roll put}for pop pop pop}{findfont dup dup maxlength 2 add dict begin exch{1
index/FID ne{def}{pop pop}ifelse}forall/FontReferenced exch def/Encoding exch
dup length array copy def/FontName 1 index dup type/stringtype eq{cvn}if def
currentdict end definefont pop}ifelse}bind def/SetSubstituteStrategy{
$SubstituteFont begin dup type/dicttype ne{0 dict}if currentdict/$Strategies
known{exch $Strategies exch 2 copy known{get 2 copy maxlength exch maxlength
add dict begin{def}forall{def}forall currentdict dup/$Init known{dup/$Init get
exec}if end/$Strategy exch def}{pop pop pop}ifelse}{pop pop}ifelse end}bind
def/scff{$SubstituteFont begin dup type/stringtype eq{dup length exch}{null}
ifelse/$sname exch def/$slen exch def end{findfont}@Stopped{dup length dup 21
add string dup 4 3 roll 0 exch 128 string cvs putinterval exch 1 index exch
(_was-malformed-so-was)putinterval cvn{findfont}@Stopped{pop/Courier findfont}
if}if $SubstituteFont begin/$sname null def/$slen 0 def end}bind def
/isWidthsOnlyFont{dup/WidthsOnly known{pop pop true}{dup/FDepVector known{
/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}{dup/FDArray known{
/FDArray get{isWidthsOnlyFont dup{exit}if}forall}{pop}ifelse}ifelse}ifelse}
bind def/?set{$SubstituteFont begin/$substituteFound false def/$fontname 4
index def/$doSmartSub false def end 3 index findfont $SubstituteFont begin
$substituteFound{false}{dup/FontName known{dup/FontName get $fontname eq 1
index/DistillerFauxFont known not and/currentdistillerparams where{pop false 2
index isWidthsOnlyFont not and}if}{false}ifelse}ifelse exch pop/$doSmartSub
true def end{exch pop exch pop exch 2 dict dup/Found 3 index put exch findfont
exch}{exch exec exch findfont 2 dict dup/Downloaded 6 5 roll put}ifelse dup
/FontName 4 index put copyfont definefont pop}bind def/?str1 256 string def
/?str2 256 string def/?add{1 index type/integertype eq{exch true 4 2}{false 3
1}ifelse roll 1 index findfont dup/Widths known{Adobe_CoolType_Data/AddWidths?
true put gsave dup 1000 scalefont setfont}if/Downloaded known{exec exch{exch
?str2 cvs exch findfont/Downloaded get 1 dict begin/Downloaded 1 index def
?str1 cvs length ?str1 1 index 1 add 3 index putinterval exch length 1 add 1
index add ?str1 2 index(*)putinterval ?str1 0 2 index getinterval cvn findfont
?str1 3 index(+)putinterval 2 dict dup/FontName ?str1 0 6 index getinterval
cvn put dup/Downloaded Downloaded put end copyfont dup/FontName get exch
definefont pop pop pop}{pop}ifelse}{pop exch{findfont dup/Found get dup length
exch ?str1 cvs pop ?str1 1 index(+)putinterval ?str1 1 index 1 add 4 index
?str2 cvs putinterval ?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add
getinterval cvn 1 dict exch 1 index exch/FontName exch put copyfont dup
/FontName get exch definefont pop}{pop}ifelse}ifelse Adobe_CoolType_Data
/AddWidths? get{grestore Adobe_CoolType_Data/AddWidths? false put}if}bind def
/?sh{currentfont/Downloaded known{exch}if pop}bind def/?chp{currentfont
/Downloaded known{pop}{false chp}ifelse}bind def/?mv{currentfont/Downloaded
known{moveto pop pop}{pop pop moveto}ifelse}bind def setpacking userdict
/$SubstituteFont 25 dict put 1 dict begin/SubstituteFont dup $error exch 2
copy known{get}{pop pop{pop/Courier}bind}ifelse def/currentdistillerparams
where dup{pop pop currentdistillerparams/CannotEmbedFontPolicy 2 copy known{
get/Error eq}{pop pop false}ifelse}if not{countdictstack array dictstack 0 get
begin userdict begin $SubstituteFont begin/$str 128 string def/$fontpat 128
string def/$slen 0 def/$sname null def/$match false def/$fontname null def
/$substituteFound false def/$doSmartSub true def/$depth 0 def/$fontname null
def/$italicangle 26.5 def/$dstack null def/$Strategies 10 dict dup begin
/$Type3Underprint{currentglobal exch false setglobal 11 dict begin/UseFont
exch $WMode 0 ne{dup length dict copy dup/WMode $WMode put/UseFont exch
definefont}if def/FontName $fontname dup type/stringtype eq{cvn}if def
/FontType 3 def/FontMatrix[.001 0 0 .001 0 0]def/Encoding 256 array dup 0 1
255{/.notdef put dup}for pop def/FontBBox[0 0 0 0]def/CCInfo 7 dict dup begin
/cc null def/x 0 def/y 0 def end def/BuildChar{exch begin CCInfo begin 1
string dup 0 3 index put exch pop/cc exch def UseFont 1000 scalefont setfont
cc stringwidth/y exch def/x exch def x y setcharwidth $SubstituteFont
/$Strategy get/$Underprint get exec 0 0 moveto cc show x y moveto end end}bind
def currentdict end exch setglobal}bind def/$GetaTint 2 dict dup begin
/$BuildFont{dup/WMode known{dup/WMode get}{0}ifelse/$WMode exch def $fontname
exch dup/FontName known{dup/FontName get dup type/stringtype eq{cvn}if}{
/unnamedfont}ifelse exch $deepcopyfont exch 1 index exch/FontBasedOn exch put
dup/FontName $fontname dup type/stringtype eq{cvn}if put definefont}bind def
/$Underprint{gsave x abs y abs gt{/y 1000 def}{/x -1000 def 500 120 translate}
ifelse Level2?{[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]setcolorspace}{0
setgray}ifelse 10 setlinewidth x .8 mul[7 3]{y mul 8 div 120 sub x 10 div exch
moveto 0 y 4 div neg rlineto dup 0 rlineto 0 y 4 div rlineto closepath gsave
Level2?{.2 setcolor}{.8 setgray}ifelse fill grestore stroke}forall pop
grestore}bind def end def/$Oblique 1 dict dup begin/$BuildFont{currentglobal
exch dup gcheck setglobal null copyfont begin/FontBasedOn currentdict/FontName
known{FontName dup type/stringtype eq{cvn}if}{/unnamedfont}ifelse def/FontName
$fontname dup type/stringtype eq{cvn}if def/currentdistillerparams where{pop}{
/FontInfo currentdict/FontInfo known{FontInfo null copyfont}{2 dict}ifelse dup
begin/ItalicAngle $italicangle def/FontMatrix FontMatrix[1 0 ItalicAngle dup
sin exch cos div 1 0 0]matrix concatmatrix readonly end 4 2 roll def def}
ifelse FontName currentdict end definefont exch setglobal}bind def end def
/$None 1 dict dup begin/$BuildFont{}bind def end def end def/$Oblique
SetSubstituteStrategy/$findfontByEnum{dup type/stringtype eq{cvn}if dup
/$fontname exch def $sname null eq{$str cvs dup length $slen sub $slen
getinterval}{pop $sname}ifelse $fontpat dup 0(fonts/*)putinterval exch 7 exch
putinterval/$match false def $SubstituteFont/$dstack countdictstack array
dictstack put mark{$fontpat 0 $slen 7 add getinterval{/$match exch def exit}
$str filenameforall}stopped{cleardictstack currentdict true $SubstituteFont
/$dstack get{exch{1 index eq{pop false}{true}ifelse}{begin false}ifelse}forall
pop}if cleartomark/$slen 0 def $match false ne{$match(fonts/)anchorsearch pop
pop cvn}{/Courier}ifelse}bind def/$ROS 1 dict dup begin/Adobe 4 dict dup begin
/Japan1[/Ryumin-Light/HeiseiMin-W3/GothicBBB-Medium/HeiseiKakuGo-W5
/HeiseiMaruGo-W4/Jun101-Light]def/Korea1[/HYSMyeongJo-Medium/HYGoThic-Medium]
def/GB1[/STSong-Light/STHeiti-Regular]def/CNS1[/MKai-Medium/MHei-Medium]def
end def end def/$cmapname null def/$deepcopyfont{dup/FontType get 0 eq{1 dict
dup/FontName/copied put copyfont begin/FDepVector FDepVector copyarray 0 1 2
index length 1 sub{2 copy get $deepcopyfont dup/FontName/copied put/copied
exch definefont 3 copy put pop pop}for def currentdict end}{$Strategies
/$Type3Underprint get exec}ifelse}bind def/$buildfontname{length $str 1 index
(-)putinterval 1 add $str 1 index $cmapname $fontpat cvs putinterval $cmapname
length add $str exch 0 exch getinterval cvn}bind def/$findfontByROS{/$fontname
exch def $ROS Registry 2 copy known{get Ordering 2 copy known{get}{pop pop[]}
ifelse}{pop pop[]}ifelse false exch{dup/CIDFont resourcestatus{pop pop save 1
index/CIDFont findresource dup/WidthsOnly known{dup/WidthsOnly get}{false}
ifelse exch pop exch restore{pop}{exch pop true exit}ifelse}{pop}ifelse}forall
{$str cvs $buildfontname}{false(*){save exch dup/CIDFont findresource dup
/WidthsOnly known{dup/WidthsOnly get not}{true}ifelse exch/CIDSystemInfo get
dup/Registry get Registry eq exch/Ordering get Ordering eq and and{exch
restore exch pop true exit}{pop restore}ifelse}$str/CIDFont resourceforall{
$buildfontname}{$fontname $findfontByEnum}ifelse}ifelse}bind def end end
currentdict/$error known currentdict/languagelevel known and dup{pop $error
/SubstituteFont known}if dup{$error}{Adobe_CoolType_Core}ifelse begin{
/SubstituteFont/CMap/Category resourcestatus{pop pop{$SubstituteFont begin
/$substituteFound true def dup length $slen gt $sname null ne or $slen 0 gt
and{$sname null eq{dup $str cvs dup length $slen sub $slen getinterval cvn}{
$sname}ifelse dup/CMap resourcestatus{pop pop dup/$cmapname exch def/CMap
findresource/CIDSystemInfo get{def}forall $findfontByROS}{128 string cvs dup
(-)search{3 1 roll search{3 1 roll pop{dup cvi}stopped{pop pop pop pop pop
$findfontByEnum}{4 2 roll pop pop exch length exch 2 index length 2 index sub
exch 1 sub -1 0{$str cvs dup length 4 index 0 4 index 4 3 roll add getinterval
exch 1 index exch 3 index exch putinterval dup/CMap resourcestatus{pop pop 4 1
roll pop pop pop dup/$cmapname exch def/CMap findresource/CIDSystemInfo get{
def}forall $findfontByROS true exit}{pop}ifelse}for dup type/booleantype eq{
pop}{pop pop $findfontByEnum}ifelse}ifelse}{pop pop pop $findfontByEnum}ifelse
}{pop pop $findfontByEnum}ifelse}ifelse}{//SubstituteFont exec}ifelse/$slen 0
def end}}{{$SubstituteFont begin/$substituteFound true def dup length $slen gt
$sname null ne or $slen 0 gt and{$findfontByEnum}{//SubstituteFont exec}ifelse
end}}ifelse bind readonly def Adobe_CoolType_Core/scfindfont/systemfindfont
load put}{/scfindfont{$SubstituteFont begin dup systemfindfont dup/FontName
known{dup/FontName get dup 3 index ne}{/noname true}ifelse dup{
/$origfontnamefound 2 index def/$origfontname 4 index def/$substituteFound
true def}if exch pop{$slen 0 gt $sname null ne 3 index length $slen gt or and{
pop dup $findfontByEnum findfont dup maxlength 1 add dict begin{1 index/FID eq
{pop pop}{def}ifelse}forall currentdict end definefont dup/FontName known{dup
/FontName get}{null}ifelse $origfontnamefound ne{$origfontname $str cvs print
( substitution revised, using )print dup/FontName known{dup/FontName get}{
(unspecified font)}ifelse $str cvs print(.
)print}if}{exch pop}ifelse}{exch pop}ifelse end}bind def}ifelse end end
Adobe_CoolType_Core/findfont{$SubstituteFont begin $depth 0 eq{/$fontname 1
index dup type/stringtype ne{$str cvs}if def/$substituteFound false def}if
/$depth $depth 1 add def end scfindfont $SubstituteFont begin/$depth $depth 1
sub def $substituteFound $depth 0 eq and $doSmartSub and{currentdict/$Strategy
known{$Strategy/$BuildFont get exec}if}if end}bind put}if end end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.13 0
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated.
%%Version: 1.13 0
systemdict/languagelevel known dup{currentglobal false setglobal}{false}ifelse
exch userdict/Adobe_CoolType_Utility 2 copy known{2 copy get dup maxlength 25
add dict copy}{25 dict}ifelse put Adobe_CoolType_Utility begin/ct_Level2? exch
def/ct_Clone? 1183615869 internaldict dup/CCRun known not exch/eCCRun known
not ct_Level2? and or def/ct_UseNativeCapability? systemdict/composefont known
def/ct_MakeOCF 35 dict def/ct_Vars 25 dict def/ct_GlyphDirProcs 6 dict def
/ct_BuildCharDict 15 dict dup begin/charcode 2 string def/dst_string 1500
string def/nullstring()def/usewidths? true def end def ct_Level2?{setglobal}{
pop}ifelse ct_GlyphDirProcs begin/GetGlyphDirectory{systemdict/languagelevel
known{pop/CIDFont findresource/GlyphDirectory get}{1 index/CIDFont
findresource/GlyphDirectory get dup type/dicttype eq{dup dup maxlength exch
length sub 2 index lt{dup length 2 index add dict copy 2 index/CIDFont
findresource/GlyphDirectory 2 index put}if}if exch pop exch pop}ifelse +}def/+
{systemdict/languagelevel known{currentglobal false setglobal 3 dict begin/vm
exch def}{1 dict begin}ifelse/$ exch def systemdict/languagelevel known{vm
setglobal/gvm currentglobal def $ gcheck setglobal}if ?{$ begin}if}def/?{$
type/dicttype eq}def/|{userdict/Adobe_CoolType_Data known{Adobe_CoolType_Data
/AddWidths? known{currentdict Adobe_CoolType_Data begin begin AddWidths?{
Adobe_CoolType_Data/CC 3 index put ?{def}{$ 3 1 roll put}ifelse CC charcode
exch 1 index 0 2 index 256 idiv put 1 index exch 1 exch 256 mod put
stringwidth 2 array astore currentfont/Widths get exch CC exch put}{?{def}{$ 3
1 roll put}ifelse}ifelse end end}{?{def}{$ 3 1 roll put}ifelse}ifelse}{?{def}{
$ 3 1 roll put}ifelse}ifelse}def/!{?{end}if systemdict/languagelevel known{gvm
setglobal}if end}def/:{string currentfile exch readstring pop}executeonly def
end ct_MakeOCF begin/ct_cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09
/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C
/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F
/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42
/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55
/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68
/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B
/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E
/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1
/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4
/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7
/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA
/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED
/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_CID_STR_SIZE 8000 def/ct_mkocfStr100 100 string def/ct_defaultFontMtx[.001
0 0 .001 0 0]def/ct_1000Mtx[1000 0 0 1000 0 0]def/ct_raise{exch cvx exch
errordict exch get exec stop}bind def/ct_reraise{cvx $error/errorname get
(Error: )print dup(                    )cvs print errordict exch get exec stop
}bind def/ct_cvnsi{1 index add 1 sub 1 exch 0 4 1 roll{2 index exch get exch 8
bitshift add}for exch pop}bind def/ct_GetInterval{Adobe_CoolType_Utility
/ct_BuildCharDict get begin/dst_index 0 def dup dst_string length gt{dup
string/dst_string exch def}if 1 index ct_CID_STR_SIZE idiv/arrayIndex exch def
2 index arrayIndex get 2 index arrayIndex ct_CID_STR_SIZE mul sub{dup 3 index
add 2 index length le{2 index getinterval dst_string dst_index 2 index
putinterval length dst_index add/dst_index exch def exit}{1 index length 1
index sub dup 4 1 roll getinterval dst_string dst_index 2 index putinterval
pop dup dst_index add/dst_index exch def sub/arrayIndex arrayIndex 1 add def 2
index dup length arrayIndex gt{arrayIndex get}{pop exit}ifelse 0}ifelse}loop
pop pop pop dst_string 0 dst_index getinterval end}bind def ct_Level2?{
/ct_resourcestatus currentglobal mark true setglobal{/unknowninstancename
/Category resourcestatus}stopped{cleartomark setglobal true}{cleartomark
currentglobal not exch setglobal}ifelse{{mark 3 1 roll/Category findresource
begin ct_Vars/vm currentglobal put({ResourceStatus} stopped)0()/SubFileDecode
filter cvx exec{cleartomark false}{{3 2 roll pop true}{cleartomark false}
ifelse}ifelse ct_Vars/vm get setglobal end}}{{resourcestatus}}ifelse bind def
/CIDFont/Category ct_resourcestatus{pop pop}{currentglobal true setglobal
/Generic/Category findresource dup length dict copy dup/InstanceType/dicttype
put/CIDFont exch/Category defineresource pop setglobal}ifelse
ct_UseNativeCapability?{/CIDInit/ProcSet findresource begin 12 dict begin
begincmap/CIDSystemInfo 3 dict dup begin/Registry(Adobe)def/Ordering(Identity)
def/Supplement 0 def end def/CMapName/Identity-H def/CMapVersion 1 def
/CMapType 1 def 1 begincodespacerange<0000><ffff>endcodespacerange 1
begincidrange<0000><ffff>0 endcidrange endcmap CMapName currentdict/CMap
defineresource pop end end}if}{/ct_Category 2 dict begin/CIDFont 10 dict def
/ProcSet 2 dict def currentdict end def/defineresource{ct_Category 1 index 2
copy known{get dup dup maxlength exch length eq{dup length 10 add dict copy
ct_Category 2 index 2 index put}if 3 index 3 index put pop exch pop}{pop pop
/defineresource/undefined ct_raise}ifelse}bind def/findresource{ct_Category 1
index 2 copy known{get 2 index 2 copy known{get 3 1 roll pop pop}{pop pop
/findresource/undefinedresource ct_raise}ifelse}{pop pop/findresource
/undefined ct_raise}ifelse}bind def/resourcestatus{ct_Category 1 index 2 copy
known{get 2 index known exch pop exch pop{0 -1 true}{false}ifelse}{pop pop
/findresource/undefined ct_raise}ifelse}bind def/ct_resourcestatus
/resourcestatus load def}ifelse/ct_CIDInit 2 dict begin/ct_cidfont_stream_init
{{dup(Binary)eq{pop null currentfile ct_Level2?{{cid_BYTE_COUNT()
/SubFileDecode filter}stopped{pop pop pop}if}if/readstring load exit}if dup
(Hex)eq{pop currentfile ct_Level2?{{null exch/ASCIIHexDecode filter/readstring
}stopped{pop exch pop(>)exch/readhexstring}if}{(>)exch/readhexstring}ifelse
load exit}if/StartData/typecheck ct_raise}loop cid_BYTE_COUNT ct_CID_STR_SIZE
le{2 copy cid_BYTE_COUNT string exch exec pop 1 array dup 3 -1 roll 0 exch put
}{cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi dup array exch 2 sub 0 exch 1
exch{2 copy 5 index ct_CID_STR_SIZE string 6 index exec pop put pop}for 2
index cid_BYTE_COUNT ct_CID_STR_SIZE mod string 3 index exec pop 1 index exch
1 index length 1 sub exch put}ifelse cid_CIDFONT exch/GlyphData exch put 2
index null eq{pop pop pop}{pop/readstring load 1 string exch{3 copy exec pop
dup length 0 eq{pop pop pop pop pop true exit}if 4 index eq{pop pop pop pop
false exit}if}loop pop}ifelse}bind def/StartData{mark{currentdict dup/FDArray
get 0 get/FontMatrix get 0 get .001 eq{dup/CDevProc known not{/CDevProc
1183615869 internaldict/stdCDevProc 2 copy known{get}{pop pop{pop pop pop pop
pop 0 -1000 7 index 2 div 880}}ifelse def}if}{/CDevProc{pop pop pop pop pop 0
1 cid_temp/cid_CIDFONT get/FDArray get 0 get/FontMatrix get 0 get div 7 index
2 div 1 index .88 mul}def}ifelse/cid_temp 15 dict def cid_temp begin
/cid_CIDFONT exch def 3 copy pop dup/cid_BYTE_COUNT exch def 0 gt{
ct_cidfont_stream_init FDArray{/Private get dup/SubrMapOffset known{begin
/Subrs SubrCount array def Subrs SubrMapOffset SubrCount SDBytes ct_Level2?{
currentdict dup/SubrMapOffset undef dup/SubrCount undef/SDBytes undef}if end
/cid_SD_BYTES exch def/cid_SUBR_COUNT exch def/cid_SUBR_MAP_OFFSET exch def
/cid_SUBRS exch def cid_SUBR_COUNT 0 gt{GlyphData cid_SUBR_MAP_OFFSET
cid_SD_BYTES ct_GetInterval 0 cid_SD_BYTES ct_cvnsi 0 1 cid_SUBR_COUNT 1 sub{
exch 1 index 1 add cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add GlyphData exch
cid_SD_BYTES ct_GetInterval 0 cid_SD_BYTES ct_cvnsi cid_SUBRS 4 2 roll
GlyphData exch 4 index 1 index sub ct_GetInterval dup length string copy put}
for pop}if}{pop}ifelse}forall}if cleartomark pop pop end CIDFontName
currentdict/CIDFont defineresource pop end end}stopped{cleartomark/StartData
ct_reraise}if}bind def currentdict end def/ct_saveCIDInit{/CIDInit/ProcSet
ct_resourcestatus{true}{/CIDInitC/ProcSet ct_resourcestatus}ifelse{pop pop
/CIDInit/ProcSet findresource ct_UseNativeCapability?{pop null}{/CIDInit
ct_CIDInit/ProcSet defineresource pop}ifelse}{/CIDInit ct_CIDInit/ProcSet
defineresource pop null}ifelse ct_Vars exch/ct_oldCIDInit exch put}bind def
/ct_restoreCIDInit{ct_Vars/ct_oldCIDInit get dup null ne{/CIDInit exch/ProcSet
defineresource pop}{pop}ifelse}bind def/ct_BuildCharSetUp{1 index begin
CIDFont begin Adobe_CoolType_Utility/ct_BuildCharDict get begin/ct_dfCharCode
exch def/ct_dfDict exch def CIDFirstByte ct_dfCharCode add dup CIDCount ge{pop
0}if/cid exch def{GlyphDirectory cid 2 copy known{get}{pop pop nullstring}
ifelse dup length FDBytes sub 0 gt{dup FDBytes 0 ne{0 FDBytes ct_cvnsi}{pop 0}
ifelse/fdIndex exch def dup length FDBytes sub FDBytes exch getinterval
/charstring exch def exit}{pop cid 0 eq{/charstring nullstring def exit}if/cid
0 def}ifelse}loop}def/ct_SetCacheDevice{0 0 moveto dup stringwidth 3 -1 roll
true charpath pathbbox 0 -1000 7 index 2 div 880 setcachedevice2 0 0 moveto}
def/ct_CloneSetCacheProc{1 eq{stringwidth pop -2 div -880 0 -1000 setcharwidth
moveto}{usewidths?{currentfont/Widths get cid 2 copy known{get exch pop aload
pop}{pop pop stringwidth}ifelse}{stringwidth}ifelse setcharwidth 0 0 moveto}
ifelse}def/ct_Type3ShowCharString{ct_FDDict fdIndex 2 copy known{get}{
currentglobal 3 1 roll 1 index gcheck setglobal ct_Type1FontTemplate dup
maxlength dict copy begin FDArray fdIndex get dup/FontMatrix 2 copy known{get}
{pop pop ct_defaultFontMtx}ifelse/FontMatrix exch dup length array copy def
/Private get/Private exch def/Widths rootfont/Widths get def/CharStrings 1
dict dup/.notdef<d841272cf18f54fc13>dup length string copy put def currentdict
end/ct_Type1Font exch definefont dup 5 1 roll put setglobal}ifelse dup
/CharStrings get 1 index/Encoding get ct_dfCharCode get charstring put
rootfont/WMode 2 copy known{get}{pop pop 0}ifelse exch 1000 scalefont setfont
ct_str1 0 ct_dfCharCode put ct_str1 exch ct_dfSetCacheProc ct_SyntheticBold{
currentpoint ct_str1 show newpath moveto ct_str1 true charpath ct_StrokeWidth
setlinewidth stroke}{ct_str1 show}ifelse}def/ct_Type4ShowCharString{ct_dfDict
ct_dfCharCode charstring FDArray fdIndex get dup/FontMatrix get dup
ct_defaultFontMtx ct_matrixeq not{ct_1000Mtx matrix concatmatrix concat}{pop}
ifelse/Private get Adobe_CoolType_Utility/ct_Level2? get not{ct_dfDict/Private
3 -1 roll{put}1183615869 internaldict/superexec get exec}if 1183615869
internaldict Adobe_CoolType_Utility/ct_Level2? get{1 index}{3 index/Private
get mark 6 1 roll}ifelse dup/RunInt known{/RunInt get}{pop/CCRun}ifelse get
exec Adobe_CoolType_Utility/ct_Level2? get not{cleartomark}if}bind def
/ct_BuildCharIncremental{{Adobe_CoolType_Utility/ct_MakeOCF get begin
ct_BuildCharSetUp ct_ShowCharString}stopped{stop}if end end end end}bind def
/BaseFontNameStr(BF00)def/ct_Type1FontTemplate 14 dict begin/FontType 1 def
/FontMatrix[.001 0 0 .001 0 0]def/FontBBox[-250 -250 1250 1250]def/Encoding
ct_cHexEncoding def/PaintType 0 def currentdict end def/BaseFontTemplate 11
dict begin/FontMatrix[.001 0 0 .001 0 0]def/FontBBox[-250 -250 1250 1250]def
/Encoding ct_cHexEncoding def/BuildChar/ct_BuildCharIncremental load def
ct_Clone?{/FontType 3 def/ct_ShowCharString/ct_Type3ShowCharString load def
/ct_dfSetCacheProc/ct_CloneSetCacheProc load def/ct_SyntheticBold false def
/ct_StrokeWidth 1 def}{/FontType 4 def/Private 1 dict dup/lenIV 4 put def
/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def/PaintType 0 def
/ct_ShowCharString/ct_Type4ShowCharString load def}ifelse/ct_str1 1 string def
currentdict end def/BaseFontDictSize BaseFontTemplate length 5 add def
/ct_matrixeq{true 0 1 5{dup 4 index exch get exch 3 index exch get eq and dup
not{exit}if}for exch pop exch pop}bind def/ct_makeocf{15 dict begin exch/WMode
exch def exch/FontName exch def/FontType 0 def/FMapType 2 def/FontMatrix
matrix def/bfCount 1 index/CIDCount get 256 idiv 1 add dup 256 gt{pop 256}if
def/Encoding 256 array 0 1 bfCount 1 sub{2 copy dup put pop}for bfCount 1 255{
2 copy bfCount put pop}for def/FDepVector bfCount dup 256 lt{1 add}if array
def BaseFontTemplate BaseFontDictSize dict copy begin/CIDFont exch def CIDFont
/FontBBox known{CIDFont/FontBBox get/FontBBox exch def}if CIDFont/CDevProc
known{CIDFont/CDevProc get/CDevProc exch def}if currentdict end
BaseFontNameStr 3(0)putinterval 0 1 bfCount dup 256 eq{1 sub}if{FDepVector
exch 2 index BaseFontDictSize dict copy begin dup/CIDFirstByte exch 256 mul
def FontType 3 eq{/ct_FDDict 2 dict def}if currentdict end 1 index 16
BaseFontNameStr 2 2 getinterval cvrs pop BaseFontNameStr exch definefont put}
for ct_Clone?{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
if FontName currentdict end definefont ct_Clone?{gsave dup 1000 scalefont
setfont ct_BuildCharDict begin/usewidths? false def currentfont/Widths get
begin exch/CIDFont get/GlyphDirectory get{pop dup charcode exch 1 index 0 2
index 256 idiv put 1 index exch 1 exch 256 mod put stringwidth 2 array astore
def}forall end/usewidths? true def end grestore}{exch pop}ifelse}bind def
/ct_ComposeFont{ct_UseNativeCapability?{2 index/CMap ct_resourcestatus{pop pop
exch pop}{/CIDInit/ProcSet findresource begin 12 dict begin begincmap/CMapName
3 index def/CMapVersion 1 def/CMapType 1 def exch/WMode exch def/CIDSystemInfo
3 dict dup begin/Registry(Adobe)def/Ordering CMapName ct_mkocfStr100 cvs
(Adobe-)search{pop pop(-)search{dup length string copy exch pop exch pop}{pop
(Identity)}ifelse}{pop(Identity)}ifelse def/Supplement 0 def end def 1
begincodespacerange<0000><ffff>endcodespacerange 1 begincidrange<0000><ffff>0
endcidrange endcmap CMapName currentdict/CMap defineresource pop end end}
ifelse composefont}{3 2 roll pop 0 get/CIDFont findresource ct_makeocf}ifelse}
bind def/ct_MakeIdentity{ct_UseNativeCapability?{1 index/CMap
ct_resourcestatus{pop pop}{/CIDInit/ProcSet findresource begin 12 dict begin
begincmap/CMapName 2 index def/CMapVersion 1 def/CMapType 1 def/CIDSystemInfo
3 dict dup begin/Registry(Adobe)def/Ordering CMapName ct_mkocfStr100 cvs
(Adobe-)search{pop pop(-)search{dup length string copy exch pop exch pop}{pop
(Identity)}ifelse}{pop(Identity)}ifelse def/Supplement 0 def end def 1
begincodespacerange<0000><ffff>endcodespacerange 1 begincidrange<0000><ffff>0
endcidrange endcmap CMapName currentdict/CMap defineresource pop end end}
ifelse composefont}{exch pop 0 get/CIDFont findresource ct_makeocf}ifelse}bind
def currentdict readonly pop end end
%%EndResource
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2000 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Image 65 dict dup begin put
/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
%%don't initialize AGMIMG_&customcolorimage, it wrecks havoc in a nested environment
%%AGMIMG_ccimage_exists not {/AGMIMG_&customcolorimage nd} if 
/AGMIMG_&imagemask nd
/AGMIMG_mbuf () def
/AGMIMG_ybuf () def
/AGMIMG_kbuf () def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/idximg nd
/doc_setup
{ 
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage /colorimage ldf
	}if
	end
	end
}def
/page_setup
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists {/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				 }ifelse
			 }ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode [ Decode 1 get Decode 0 get] def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode [1 1] def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub} currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{ pop 1 } currenttransfer addprocs settransfer
		}def
	}ifelse
	/img /imageormask ldf
	/sepimg /sep_imageormask ldf
	/idximg /indexed_imageormask ldf
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/doc_trailer
{
}def
/imageormask_sys
{
	begin
		save mark
		level2{
			currentdict
			Operator /imagemask eq{
				AGMIMG_&imagemask
			}{
				AGMIMG_&image
			}ifelse
		}{
			Width Height
			Operator /imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix /DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix /DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get
		dup /DeviceGray eq{
			pop AGMCORE_black_plate not
		}{
			/DeviceCMYK eq{
				AGMCORE_is_cmyk_sep not
			}if
		}ifelse
	}{
		false
	}ifelse
}def
/imageormask
{
	begin
		SkipImageProc not{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator /imagemask eq{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{
						[/Separation /Black /DeviceGray {}] setcolorspace
						/Decode [ Decode 1 get Decode 0 get ] def
					}if
					image
				}ifelse
			}{
				Width Height
				Operator /imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix /DataSource load
					AGMCORE_host_sep{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
  	 						currentoverprint not{
  			 					1 AGMCORE_&setgray
  	 							knockout_image_samples
  			 					currentdict imageormask_sys
  			 				}{
  			 					currentdict ignoreimagedata
  			 				}ifelse
				 		}ifelse
					}{
						imagemask
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator /colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								MultipleDataSources{
									4 {pop} repeat
									/DataSource [
										DataSource 0 get /exec cvx
										DataSource 1 get /exec cvx
										DataSource 2 get /exec cvx
										DataSource 3 get /exec cvx
										/AGMCORE_get_ink_data cvx
									] cvx def
								}{
									/DataSource /DataSource load filter_cmyk 0 () /SubFileDecode filter def
								}ifelse
	
								/Decode [ Decode 0 get Decode 1 get ] def
								/MultipleDataSources false def
								/NComponents 1 def
								/Operator /image def
								AGMCORE_is_cmyk_sep{
									currentoverprint InksUsed current_ink not and{
										currentdict consumeimagedata
									}{
										invert_image_samples
						 				1 AGMCORE_&setgray
										currentdict imageormask_sys
									}ifelse
								}{
										currentdict ignoreimagedata
								}ifelse
							}{
									
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator /image eq{
							AGMCORE_host_sep{
								/DoImage true def
								HostSepColorImage{
									invert_image_samples
								}{
									AGMCORE_black_plate not{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}ifelse
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys} if
							}{
								image
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentoverprint InksUsed current_ink not and{
								}{
									currentcolorspace overprint_plate not{
										knockout_unitsq
									}if
								}ifelse
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	/MappedCSA CSA map_csa def
	begin
	SkipImageProc not{
		save mark 
	
		AGMCORE_avoid_L2_sep_space{
			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get /DeviceCMYK eq and
		currentdict/Components known and 
		Name () ne and 
		Name (All) ne and 
		Operator /image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load /exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			} /exec cvx
			] cvx bind
			MappedCSA 0 get /DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{ 
					currentdict
					Operator /imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentoverprint InksUsed current_ink not and{
						}{
							currentdict/ImageMatrix get concat
							knockout_unitsq
						}ifelse
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name (All) ne and{
 								level2{
	 								[ /Separation Name [/DeviceGray]
	 								{ 
	 									sep_colorspace_proc AGMCORE_get_ink_data
										1 exch sub
	 								} bind
									] AGMCORE_&setcolorspace
									/sep_tint AGMCORE_gget AGMCORE_&setcolor
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator /imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
							currentdict consumeimagedata 
 							currentoverprint not Name (All) eq or{
								gsave 
								knockout_unitsq
								grestore
		 					}if
 						}ifelse
		 			}ifelse
 				}{
					currentcolorspace 0 get /Separation ne{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentoverprint 
					MappedCSA 0 get /DeviceCMYK eq and 
					Name inRip_spot_has_ink not and 
					Name (All) ne and {
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}if
	end
	end
}def
/imageormask_l2_overprint
{
	
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{ 			
			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN [
				AGMIMG_c 0 ne {/Cyan} if
				AGMIMG_m 0 ne {/Magenta} if
				AGMIMG_y 0 ne {/Yellow} if
				AGMIMG_k 0 ne {/Black} if
				] /DeviceCMYK {}] setcolorspace
				
				AGMIMG_c 0 ne {AGMIMG_c} if
				AGMIMG_m 0 ne {AGMIMG_m} if
				AGMIMG_y 0 ne {AGMIMG_y} if
				AGMIMG_k 0 ne {AGMIMG_k} if
				setcolor			
			}{	
				/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
				[/Indexed 				
					[
						/DeviceN [
							AGMIMG_c 0 ne {/Cyan} if
							AGMIMG_m 0 ne {/Magenta} if
							AGMIMG_y 0 ne {/Yellow} if
							AGMIMG_k 0 ne {/Black} if
						] 
						/DeviceCMYK {
							AGMIMG_k 0 eq {0} if
							AGMIMG_y 0 eq {0 exch} if
							AGMIMG_m 0 eq {0 3 1 roll} if
							AGMIMG_c 0 eq {0 4 1 roll} if						
						}
					]
					255
					{
						255 div 
		
						mark exch
						dup	dup dup
		
						
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
							
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
		
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
							
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				] setcolorspace
			}ifelse
			
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation /Black /DeviceGray {}] setcolorspace
			gsave
			/Black
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Yellow /DeviceGray {}] setcolorspace
			gsave
			/Yellow
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Magenta /DeviceGray {}] setcolorspace
			gsave
			/Magenta
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Cyan /DeviceGray {}] setcolorspace
			gsave
			/Cyan 
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		} if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
} def
/indexed_imageormask
{
	begin
		save mark 
	
 		currentdict
 		AGMCORE_host_sep{
 			
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget /CSA get map_csa overprint_plate not{
					knockout_unitsq
				}if
			}{
	 			AGMCORE_is_cmyk_sep{
					Operator /imagemask eq{
						imageormask_sys
					}{
						level2{
							indexed_image_lev2_sep
						}{
							indexed_image_lev1_sep
						}ifelse
					}ifelse
				}{
					currentoverprint not{
						knockout_image_samples
		 				imageormask_sys
		 			}{
		 				currentdict consumeimagedata
		 			}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				imageormask
			}{ 
				Operator /imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		
		currentcolorspace 
		dup 1 /DeviceGray put
		dup 3 [
			currentcolorspace 3 get 
			{
				exch 4 mul 4 getinterval {} forall
				AGMCORE_get_ink_data 255 div 1 exch sub
			} /exec cvx
		] cvx put
		setcolorspace
		
		currentdict 
		Operator /imagemask eq{
			AGMIMG_&imagemask
		}{
			AGMIMG_&image
		}ifelse
			
	end end
}def
/OPIimage
{
	dup type /dicttype ne{
		10 dict begin
			/DataSource xdf
			/ImageMatrix xdf
			/BitsPerComponent xdf
			/Height xdf
			/Width xdf
			/ImageType 1 def
			/Decode [0 1 def]
			currentdict
		end
	}if
	dup begin
		/NComponents 1 cdndf
		/MultipleDataSources false cdndf
		/SkipImageProc {false} cdndf
		/HostSepColorImage false cdndf
		/Decode [
				0 
				currentcolorspace 0 get /Indexed eq{
					2 BitsPerComponent exp 1 sub
				}{
					1
				}ifelse
		] cdndf
		/Operator /image cdndf
	end
	/sep_colorspace_dict AGMCORE_gget null eq{
		imageormask
	}{
		gsave
		dup begin invert_image_samples end
		sep_imageormask
		grestore
	}ifelse
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type /dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode [/customcolor_tint AGMCORE_gget 0] def
				/Operator /image def
				/HostSepColorImage false def
				/InksUsed [] def
				/SkipImageProc {false} def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		bdict
			/Name AGMIMG_colorAry 4 get
			/CSA [ /DeviceCMYK ] 
			/TintMethod /Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components [ AGMIMG_colorAry aload pop pop ] 
		edict
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		dup 4 get map_alias{
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					} if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage	
		end
	} def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				
				{
					255 mul round cvi GrayLookup exch get
				} currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get /DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
						
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer
						currentdict imageormask
					}{ 
						
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					
					MappedCSA 0 get /DeviceGray eq {
						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get /DeviceCMYK eq {
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{ 
							currentcolortransfer
							{pop 1} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
					
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{ 
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			
			currentdict imageormask_sys
				
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				
				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer
				imageormask
			}{
				
				MappedCSA 0 get /DeviceGray eq {
					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get /DeviceCMYK eq {
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{ 
						currentcolortransfer
						{pop 1} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 	   Lookup exch get HiVal div} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			
			currentdict imageormask_sys
				
		end end
	}def
}if
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%ADOBeginClientInjection: DocumentProlog End "AI10"
%ADOEndClientInjection: DocumentProlog End "AI10"
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
%ADOBeginClientInjection: DocumentSetup Start "AI10"
%ADOEndClientInjection: DocumentSetup Start "AI10"
Adobe_AGM_Utils begin
2 2010 true Adobe_AGM_Core/doc_setup get exec
Adobe_CoolType_Core/doc_setup get exec
Adobe_AGM_Image/doc_setup get exec
%ADOBeginClientInjection: DocumentSetup End "AI10"
%ADOEndClientInjection: DocumentSetup End "AI10"
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: aho.svg 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI10"
%ADOEndClientInjection: PageSetup Start "AI10"
Adobe_AGM_Utils begin
Adobe_AGM_Core/page_setup get exec
Adobe_CoolType_Core/page_setup get exec
Adobe_AGM_Image/page_setup get exec
%ADOBeginClientInjection: PageSetup End "AI10"
%ADOEndClientInjection: PageSetup End "AI10"
%%EndPageSetup
Adobe_AGM_Core/AGMCORE_save save ddf
1 -1 scale 0 -662.975 translate
[1 0 0 1 0 0 ]  concat
mark
/0 
[/DeviceGray] add_csa
/CSA /0 
/1 
[/DeviceCMYK] add_csa
/CSA /1 
/2 
[/DeviceRGB] add_csa
/CSA /2 
cleartomark
800 path_rez
% page clip
gsave
newpath
gsave % PSGState
0 0 mo
0 662.975 li
561.818 662.975 li
561.818 0 li
clp
[1 0 0 1 0 0 ] concat
%ADOBeginClientInjection: BeginPageContent "AI10"
%ADOEndClientInjection: BeginPageContent "AI10"
gsave % PSGState
0 0 mo
562 0 li
562 663 li
0 663 li
0 0 li
clp
6 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
108.748 296.703 mo
120.916 296.703 130.78 306.567 130.78 318.736 cv
130.78 330.904 120.916 340.769 108.748 340.769 cv
96.5791 340.769 86.7148 330.904 86.7148 318.736 cv
86.7148 306.567 96.5791 296.703 108.748 296.703 cv
false sop
0 0 0 rgb
s
171.747 140.703 mo
183.915 140.703 193.78 150.567 193.78 162.736 cv
193.78 174.903 183.915 184.769 171.747 184.769 cv
159.579 184.769 149.715 174.903 149.715 162.736 cv
149.715 150.567 159.579 140.703 171.747 140.703 cv
0 0 0 rgb
s
221.747 192.703 mo
233.915 192.703 243.78 202.567 243.78 214.736 cv
243.78 226.903 233.915 236.769 221.747 236.769 cv
209.579 236.769 199.715 226.903 199.715 214.736 cv
199.715 202.567 209.579 192.703 221.747 192.703 cv
0 0 0 rgb
s
446.747 244.703 mo
458.915 244.703 468.78 254.567 468.78 266.735 cv
468.78 278.903 458.915 288.769 446.747 288.769 cv
434.579 288.769 424.715 278.903 424.715 266.735 cv
424.715 254.567 434.579 244.703 446.747 244.703 cv
0 0 0 rgb
s
368.747 88.7031 mo
380.915 88.7031 390.78 98.5674 390.78 110.735 cv
390.78 122.903 380.915 132.769 368.747 132.769 cv
356.579 132.769 346.715 122.903 346.715 110.735 cv
346.715 98.5674 356.579 88.7031 368.747 88.7031 cv
0 0 0 rgb
s
334.441 444.703 mo
346.609 444.703 356.475 454.567 356.475 466.735 cv
356.475 478.903 346.609 488.769 334.441 488.769 cv
322.273 488.769 312.409 478.903 312.409 466.735 cv
312.409 454.567 322.273 444.703 334.441 444.703 cv
0 0 0 rgb
s
1 lw
99.6406 .495605 mo
114.575 .495605 126.681 8.56641 126.681 18.5225 cv
126.681 28.478 114.575 36.5488 99.6406 36.5488 cv
84.707 36.5488 72.6006 28.478 72.6006 18.5225 cv
72.6006 8.56641 84.707 .495605 99.6406 .495605 cv
0 0 0 rgb
s
0 0 0 rgb
%ADOBeginSubsetFont: TimesNewRomanPSMT Initial
11 dict begin
/FontName /TimesNewRomanPSMT def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1674 dict dup begin
/.notdef 
<10bf317005b8302fd45b0609d6bde5a48b0240d44d91aabd11b7ee50303a
812fda6ed97443c437b8d3bea589> ND 
/zero 
<10bf31705d64a97b20dbc4561ea81104c96d02e040b796018bde0586bcad
95676b124522d0c27422b5dfa0bc2ccb1721be737b8e218982a6c51bb309
d221437a412ad70c8e013d67f1a65a7fdb26ab4d68559ae94edf62d226ee
2788d9a25e35d76a982a9ce00f945b2003db52c99e6508ea9ec1d594cacc
c5569596c150879d227c7852387d8a43228bbbf5b713924c938436dc78fa
d90a58c4b5cad2f69e6ba85a2be55b7f> ND 
/bracketleft 
<10bf31702f739a8f5a83eb4267fe7fbfd550a9fb3a241de4d11a3e72ccae
ccd83074d3184c> ND 
/bracketright 
<10bf31704220e20f5dcf22203033fafd3657396072233e4f2b1017e06b8a
40a3a8d8d4> ND 
/i 
<10bf31705ac6fd959d25cdc7a9a3e9a496239b73578bd39bc85c0d669e22
6e691e09b0f32a97a0998434376a9ae157042bfa0f185e0e1869e77dcfcf
1555c1c8abd2efd30cc82f4c6c4ddf0f13b90a3c76a63f04f6deca3db44a
cc213f28bbe83758b298928dc74aa0666fbe3e63b2fac529d140e3b7039a
bc2bb148559fada7a9e275e919fc3f2cd6b953d39d41def61462d0b129f2
b21125b163636a99efd52186dc8496e41f> ND 
/x 
<10bf31706ae07dd17233d682c9e1d171e05c39e4c2e1f18748a48d85f7aa
7cc65889e1b9adc82d1a976279fe7993dae95f57dccb69a45885b73cea03
d21a96fa38c7939c2a96ece439bc9aa684358afdabeb04ef7d8ec3bb5b3c
abe7efc841c96493b46c90a45df4b325a723eff80649b127668ef3097078
a3aa469a18461e5d2dd1ff75b61f9703453844d7df91eb99a0ed3ff61a59
265671b958253b91d2e399cb7b2f436352e5fb24345fa1f70fd78f1ff451
7a30037eb3eb35f2e10ea2490fd5cc6e967836f42e303278ce23561832f8
8625704ea3dc> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/TimesNewRomanPSMT findfont /Encoding get
dup 48 /zero put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 105 /i put
dup 120 /x put
pop
%ADOEndSubsetFont
/TimesNewRomanPSMT*1 
[
48{/.notdef}repeat /zero 42{/.notdef}repeat /bracketleft /.notdef /bracketright 11{/.notdef}repeat /i 
14{/.notdef}repeat /x 135{/.notdef}repeat
] /TimesNewRomanPSMT nfnt
/TimesNewRomanPSMT*1 findfont [14.0207 0 0 -14.0207 0 0 ]mfnt sfnt
87.1777 23.5298 mov
(xi[0]) sh
72.6006 68.5967 mo
99.6406 80.6143 li
126.681 68.5967 li
126.681 47.5654 li
72.6006 47.5654 li
72.6006 68.5967 li
cp
0 0 0 rgb
s
0 0 0 rgb
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs

systemdict begin
/TimesNewRomanPSMT 
findfont dup
/Private get begin
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/d 
<10bf31705e925b80b46abd5c29fa2d468b9b5e4bad025ff66ae6421f2159
e410fae538e7f5a90755fc4aa0e1909acab87d2263fe2beb089d6b932597
f97955542fb23ee02ff075e0e2003bcd35a0dc8fcdeec3b05157e1f949f5
3c3859814e432358033eab4cbebb11cb313a2d4e01ccb1ec831eb024e2db
c3d579a8da35c14675626591ac2eca02995f016a332260c2ef3a214c5222
c09fc068d46227963e811f66f7af291aa81d7807ad4efe2098965b55e611
61084fbfd3c71fb1d7ddef324c18429080886cac73b35a7c57be7b> ND 
systemdict /gcheck known {setglobal} if end end
end
/TimesNewRomanPSMT findfont /Encoding get
dup 100 /d put
pop
%ADOEndSubsetFont
/TimesNewRomanPSMT*1 
[
48{/.notdef}repeat /zero 42{/.notdef}repeat /bracketleft /.notdef /bracketright 6{/.notdef}repeat /d 
4{/.notdef}repeat /i 14{/.notdef}repeat /x 135{/.notdef}repeat
] /TimesNewRomanPSMT nfnt
/TimesNewRomanPSMT*1 findfont [14.0207 0 0 -14.0207 0 0 ]mfnt sfnt
85.6201 67.5947 mov
(dx[0]) sh
99.6406 36.5488 mo
99.6406 36.5488 99.6406 36.5488 99.6406 37.5503 cv
0 0 0 rgb
s
103.646 37.5503 mo
99.6406 47.5654 li
96.6362 37.5503 li
103.646 37.5503 li
0 0 0 rgb
f
103.646 37.5503 mo
99.6406 47.5654 li
96.6362 37.5503 li
103.646 37.5503 li
cp
0 0 0 rgb
s
243.854 .495605 mo
258.788 .495605 270.894 8.56641 270.894 18.5225 cv
270.894 28.478 258.788 36.5488 243.854 36.5488 cv
228.92 36.5488 216.814 28.478 216.814 18.5225 cv
216.814 8.56641 228.92 .495605 243.854 .495605 cv
0 0 0 rgb
s
0 0 0 rgb
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs

systemdict begin
/TimesNewRomanPSMT 
findfont dup
/Private get begin
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/one 
<10bf317005ae401898a67a8f6de1f54e88dd29653934d8fb66d867e6b838
31e46aba7ec16ec2bf2610f48d513e9468def491a395c79c04ab97661388
486cef0a89ff7cb8841e12e5981f5cdc657a7ebfcdd8d206693275b7b903
ac4b583f7a5f7e19747edacf7fd79fb831> ND 
/underscore 
<10bf31707145ba3ab2633f84342e44b8534660b7e2b20828e0> ND 
systemdict /gcheck known {setglobal} if end end
end
/TimesNewRomanPSMT findfont /Encoding get
dup 49 /one put
dup 95 /underscore put
pop
%ADOEndSubsetFont
/TimesNewRomanPSMT*1 
[
48{/.notdef}repeat /zero /one 41{/.notdef}repeat /bracketleft /.notdef /bracketright /.notdef 
/underscore 4{/.notdef}repeat /d 4{/.notdef}repeat /i 14{/.notdef}repeat /x 135{/.notdef}repeat
] /TimesNewRomanPSMT nfnt
/TimesNewRomanPSMT*1 findfont [14.0207 0 0 -14.0207 0 0 ]mfnt sfnt
231.391 23.5298 mov
(xi_1) sh
249.863 68.5967 mo
276.903 80.6143 li
303.943 68.5967 li
303.943 47.5654 li
249.863 47.5654 li
249.863 68.5967 li
cp
0 0 0 rgb
s
0 0 0 rgb
/TimesNewRomanPSMT*1 findfont [14.0207 0 0 -14.0207 0 0 ]mfnt sfnt
262.882 67.5947 mov
(dx[1]) sh
255.872 34.5459 mo
256.874 35.5474 257.875 37.5503 259.878 39.5537 cv
0 0 0 rgb
s
262.882 37.5503 mo
265.887 47.5654 li
256.874 41.5566 li
262.882 37.5503 li
0 0 0 rgb
f
262.882 37.5503 mo
265.887 47.5654 li
256.874 41.5566 li
262.882 37.5503 li
cp
0 0 0 rgb
s
462.177 .495605 mo
477.111 .495605 489.217 8.56641 489.217 18.5225 cv
489.217 28.478 477.111 36.5488 462.177 36.5488 cv
447.243 36.5488 435.137 28.478 435.137 18.5225 cv
435.137 8.56641 447.243 .495605 462.177 .495605 cv
0 0 0 rgb
s
0 0 0 rgb
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs

systemdict begin
/TimesNewRomanPSMT 
findfont dup
/Private get begin
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/two 
<10bf31705245f700165abe0e8d91cddb6feb7811d3603825e66832849610
d7492bb7bb1bbe9b38b9effb001f6d173bafa44049a55f486a16d864a63a
0b8656d896563e3acf945ca9d464a5da6a162804f115d383572fc15c981c
15b63475fe68ef2e72a5ed63c6d92b271dfd5ca6b8185c6f94514ec3f8b2
9754c26f2e52febc00e73850ee3614b9e5b4860482acf7ce> ND 
systemdict /gcheck known {setglobal} if end end
end
/TimesNewRomanPSMT findfont /Encoding get
dup 50 /two put
pop
%ADOEndSubsetFont
/TimesNewRomanPSMT*1 
[
48{/.notdef}repeat /zero /one /two 40{/.notdef}repeat /bracketleft /.notdef /bracketright 
/.notdef /underscore 4{/.notdef}repeat /d 4{/.notdef}repeat /i 14{/.notdef}repeat /x 
135{/.notdef}repeat
] /TimesNewRomanPSMT nfnt
/TimesNewRomanPSMT*1 findfont [14.0207 0 0 -14.0207 0 0 ]mfnt sfnt
449.714 23.5298 mov
(xi[2]) sh
435.137 68.5967 mo
462.177 80.6143 li
489.217 68.5967 li
489.217 47.5654 li
435.137 47.5654 li
435.137 68.5967 li
cp
0 0 0 rgb
s
0 0 0 rgb
/TimesNewRomanPSMT*1 findfont [14.0207 0 0 -14.0207 0 0 ]mfnt sfnt
448.156 67.5947 mov
(dx[2]) sh
462.177 36.5488 mo
462.177 36.5488 462.177 36.5488 462.177 37.5503 cv
0 0 0 rgb
s
466.183 37.5503 mo
462.177 47.5654 li
459.173 37.5503 li
466.183 37.5503 li
0 0 0 rgb
f
466.183 37.5503 mo
462.177 47.5654 li
459.173 37.5503 li
466.183 37.5503 li
cp
0 0 0 rgb
s
389.069 .495605 mo
404.556 .495605 417.11 8.56641 417.11 18.5225 cv
417.11 28.478 404.556 36.5488 389.069 36.5488 cv
373.582 36.5488 361.027 28.478 361.027 18.5225 cv
361.027 8.56641 373.582 .495605 389.069 .495605 cv
0 0 0 rgb
s
0 0 0 rgb
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs

systemdict begin
/TimesNewRomanPSMT 
findfont dup
/Private get begin
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/e 
<10bf3170422f4b41885a9676842055648b7ac91c5a5b75b50afc4ad63a16
3403789c9c8ba615f8e38a9fce64aceadaad23d4e3dbfa43e075f8b5608d
92b54d863453827f92409bc9183300c8f2b193237fd39a67d028e7efccd3
224f7d467520735ecf6bf2ce731119ee6085c9e4a87b9d8af5aaaf671a24
b9d9d852fe88b0aa1a2fe53bd12da555ee08ba1ef1ee246f54193c816b> ND 
/p 
<10bf31707a065bb2d4fcdbff26dc7fc389a2b8b370b59f91b1e9fc0bef0c
327c88198d7b546dfc608b13f7fcb8bc64cff7af2c18f699da39e53fbe37
ec097fa9ed32bc909b431f94a38ef46b90c907c345fc0194b5122ed9dbb4
520a43693133d37a01aa7d03cfea7c465d1f39c417c97cf35752895b647b
f6eeb9e1860d65028ce948e26109d628005c88929ab2810711af73457538
140a230647d1a4449996d6a087aeef7aa11197b1a7d6644dda8a28e570b9
025110e75308275897df1500b8ee5bed886eab146b5949fd3e0cb2a624f1
82a3907dabdc7d67145f1487b4fdd05c5af52274c2933d164387a1> ND 
/s 
<10bf31704e7c764f163406da7dbbaf9d43c65b8fb757ade7829da62aa468
ae4baad8607e81147b16ed99a46ab38e424e5512c18fc36490fe0e0e3c97
dcaa7fe80721b43eb7737e0a60636624d7c3bb6047489980efa6d2c4807d
50aa67e7cf84be79d7d15a6b706fddbf727c9c6d9b0a699629abe5e444e5
0457164832d1875637e41249b15e9b27dc3430ba6cf1c3ab4c74334bddfb
8eb29c16da6b1ed80d7e90ec9c4540b3b77731da9497fdb30cff9013413f
000a5d34ea717ad1e71f37aca4fc003a6dde001ac4d2b8ee38552cfaec10
a42d8a25> ND 
systemdict /gcheck known {setglobal} if end end
end
/TimesNewRomanPSMT findfont /Encoding get
dup 101 /e put
dup 112 /p put
dup 115 /s put
pop
%ADOEndSubsetFont
/TimesNewRomanPSMT*1 
[
48{/.notdef}repeat /zero /one /two 40{/.notdef}repeat /bracketleft /.notdef /bracketright 
/.notdef /underscore 4{/.notdef}repeat /d /e 3{/.notdef}repeat /i 6{/.notdef}repeat 
/p 2{/.notdef}repeat /s 4{/.notdef}repeat /x 135{/.notdef}repeat
] /TimesNewRomanPSMT nfnt
/TimesNewRomanPSMT*1 findfont [14.0207 0 0 -14.0207 0 0 ]mfnt sfnt
374.271 23.5298 mov
(ieps2) sh
369.039 92.6318 mo
378.995 92.6318 387.066 100.703 387.066 110.659 cv
387.066 120.614 378.995 128.686 369.039 128.686 cv
359.083 128.686 351.013 120.614 351.013 110.659 cv
351.013 100.703 359.083 92.6318 369.039 92.6318 cv
0 0 0 rgb
s
369.039 88.626 mo
381.208 88.626 391.072 98.4902 391.072 110.659 cv
391.072 122.827 381.208 132.691 369.039 132.691 cv
356.871 132.691 347.007 122.827 347.007 110.659 cv
347.007 98.4902 356.871 88.626 369.039 88.626 cv
0 0 0 rgb
s
0 0 0 rgb
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs

systemdict begin
/TimesNewRomanPSMT 
findfont dup
/Private get begin
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/six 
<10bf3170448bf7f9a4e5f8472a5a2d45b7594de91351c6ec052ffd8b762a
bed41ed16809fa2365105c6627f46205709a8a1309c7141139fd941188bd
c8d9b0b55c47d641558ff36ded37dddb1b216d36df7ff3e4cecb5e93a247
22d0b6b5e65a4a2dcc56b02d7259d8fd5b7ec0999a61dac27e80da2f8676
34759b4e247227f13713c39238726a89a708bbed3b752173bdebcebaeea7
71ee266a3e95119dcfb78b31c6beeef7041756c5788d9d3d80a0bb3f669d
9ba6d8b1667d5d5aa89f4142cfd220ffe9eb070e> ND 
systemdict /gcheck known {setglobal} if end end
end
/TimesNewRomanPSMT findfont /Encoding get
dup 54 /six put
pop
%ADOEndSubsetFont
/TimesNewRomanPSMT*1 
[
48{/.notdef}repeat /zero /one /two 3{/.notdef}repeat /six 36{/.notdef}repeat /bracketleft 
/.notdef /bracketright /.notdef /underscore 4{/.notdef}repeat /d /e 3{/.notdef}repeat 
/i 6{/.notdef}repeat /p 2{/.notdef}repeat /s 4{/.notdef}repeat /x 135{/.notdef}repeat
] /TimesNewRomanPSMT nfnt
/TimesNewRomanPSMT*1 findfont [21 0 0 -21 0 0 ]mfnt sfnt
362.534 117.666 mov
(6) sh
385.063 36.5488 mo
383.061 48.5669 379.054 64.5903 376.05 78.6113 cv
0 0 0 rgb
s
379.054 79.6128 mo
374.047 88.626 li
373.045 78.6113 li
379.054 79.6128 li
0 0 0 rgb
f
379.054 79.6128 mo
374.047 88.626 li
373.045 78.6113 li
379.054 79.6128 li
cp
0 0 0 rgb
s
27.5342 .495605 mo
42.4678 .495605 54.5742 8.56641 54.5742 18.5225 cv
54.5742 28.478 42.4678 36.5488 27.5342 36.5488 cv
12.6001 36.5488 .494141 28.478 .494141 18.5225 cv
.494141 8.56641 12.6001 .495605 27.5342 .495605 cv
0 0 0 rgb
s
0 0 0 rgb
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs

systemdict begin
/TimesNewRomanPSMT 
findfont dup
/Private get begin
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/j 
<10bf3170ccea880dd3e5afadf08632e3e38e0db52107cf2e302ac4a87b56
e242e7e72991290dadfa92ecca6c6eb46958e2b5ca07907c84b818fa14b8
f98c013692d5e9e80139a1ade235bf193a6b2d9036ed1c7454ea7583e5a3
3647ccf0fda6d071be6e21984caffda59c37c8c81ee172321333023b416c
31feff49460f837eef90688a753cfe6ae339bbdbd2699e500b5046706362
f5ef06197531aa346fa291169331e154bdb13f1996182af3ab68707ea48f
af0fc9368880a20a7896ac6a7c367d54b55736927bd29c> ND 
systemdict /gcheck known {setglobal} if end end
end
/TimesNewRomanPSMT findfont /Encoding get
dup 106 /j put
pop
%ADOEndSubsetFont
/TimesNewRomanPSMT*1 
[
48{/.notdef}repeat /zero /one /two 3{/.notdef}repeat /six 36{/.notdef}repeat /bracketleft 
/.notdef /bracketright /.notdef /underscore 4{/.notdef}repeat /d /e 3{/.notdef}repeat 
/i /j 5{/.notdef}repeat /p 2{/.notdef}repeat /s 4{/.notdef}repeat /x 
135{/.notdef}repeat
] /TimesNewRomanPSMT nfnt
/TimesNewRomanPSMT*1 findfont [14.0207 0 0 -14.0207 0 0 ]mfnt sfnt
15.0708 23.5298 mov
(xj[0]) sh
47.564 30.54 mo
53.5728 33.5444 60.583 38.5518 66.5918 42.5581 cv
0 0 0 rgb
s
68.5947 39.5537 mo
75.6055 47.5654 li
65.5903 45.5625 li
68.5947 39.5537 li
0 0 0 rgb
f
68.5947 39.5537 mo
75.6055 47.5654 li
65.5903 45.5625 li
68.5947 39.5537 li
cp
0 0 0 rgb
s
315.961 .495605 mo
330.895 .495605 343.001 8.56641 343.001 18.5225 cv
343.001 28.478 330.895 36.5488 315.961 36.5488 cv
301.027 36.5488 288.921 28.478 288.921 18.5225 cv
288.921 8.56641 301.027 .495605 315.961 .495605 cv
0 0 0 rgb
s
0 0 0 rgb
/TimesNewRomanPSMT*1 findfont [14.0207 0 0 -14.0207 0 0 ]mfnt sfnt
303.497 23.5298 mov
(xj[1]) sh
301.94 34.5459 mo
299.938 36.5488 298.936 37.5503 296.933 39.5537 cv
0 0 0 rgb
s
298.936 42.5581 mo
289.923 47.5654 li
293.928 37.5503 li
298.936 42.5581 li
0 0 0 rgb
f
298.936 42.5581 mo
289.923 47.5654 li
293.928 37.5503 li
298.936 42.5581 li
cp
0 0 0 rgb
s
534.284 .495605 mo
549.218 .495605 561.324 8.56641 561.324 18.5225 cv
561.324 28.478 549.218 36.5488 534.284 36.5488 cv
519.35 36.5488 507.244 28.478 507.244 18.5225 cv
507.244 8.56641 519.35 .495605 534.284 .495605 cv
0 0 0 rgb
s
0 0 0 rgb
/TimesNewRomanPSMT*1 findfont [14.0207 0 0 -14.0207 0 0 ]mfnt sfnt
521.82 23.5298 mov
(xj[2]) sh
514.254 30.54 mo
508.245 33.5444 501.235 38.5518 495.226 42.5581 cv
0 0 0 rgb
s
496.228 45.5625 mo
486.213 47.5654 li
493.223 39.5537 li
496.228 45.5625 li
0 0 0 rgb
f
496.228 45.5625 mo
486.213 47.5654 li
493.223 39.5537 li
496.228 45.5625 li
cp
0 0 0 rgb
s
171.748 .495605 mo
186.681 .495605 198.788 8.56641 198.788 18.5225 cv
198.788 28.478 186.681 36.5488 171.748 36.5488 cv
156.813 36.5488 144.708 28.478 144.708 18.5225 cv
144.708 8.56641 156.813 .495605 171.748 .495605 cv
0 0 0 rgb
s
0 0 0 rgb
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs

systemdict begin
/TimesNewRomanPSMT 
findfont dup
/Private get begin
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/m 
<10bf3170612f50a32a221f92c62df6f217e624d0a9df1e121860640913cc
49c4b2d35b710b10afd4f958933cf36f77fa2631f24cbc39b6fb55164082
193c40e902d50b4dd0e9f5ae2867995b45675b905195bdfcc9b26d09519c
1e89df3994ea78cedeba6852e8b9c507c215033124b55ca65aeabe76ef04
57fa09d46563663ca74b6f95faf692e9ff2805a952be9ce73108295db01a
1994fa03645166fdecc81234fb6ed970d2a939579f06453bc00a9eb193c6
89afa32196c9bbfd4f2e113a0f0a380ead1a15279b212e2d6f74df100cc7
60a6d17274c6477145b98511b0f38377fb67ec75a8941a93686e94c1719c
fcfef92ae4ed1bb42acc6930c9fd7d14d03f2c5cc57e8f007a194fcdc380
4777a58ea7912850daff4d6c2854942dfb30e0675160b33e854bf7fed66f
47144c25d4528d081f2387910709746bda8159065734924af6aea3b40f49
1ba747b6dede483a966ee00175b89acc0a77eed79d9fdb> ND 
systemdict /gcheck known {setglobal} if end end
end
/TimesNewRomanPSMT findfont /Encoding get
dup 109 /m put
pop
%ADOEndSubsetFont
/TimesNewRomanPSMT*1 
[
48{/.notdef}repeat /zero /one /two 3{/.notdef}repeat /six 36{/.notdef}repeat /bracketleft 
/.notdef /bracketright /.notdef /underscore 4{/.notdef}repeat /d /e 3{/.notdef}repeat 
/i /j 2{/.notdef}repeat /m 2{/.notdef}repeat /p 2{/.notdef}repeat /s 
4{/.notdef}repeat /x 135{/.notdef}repeat
] /TimesNewRomanPSMT nfnt
/TimesNewRomanPSMT*1 findfont [14.0207 0 0 -14.0207 0 0 ]mfnt sfnt
164.347 23.5298 mov
(mj) sh
171.748 144.709 mo
181.703 144.709 189.774 152.78 189.774 162.736 cv
189.774 172.691 181.703 180.762 171.748 180.762 cv
161.792 180.762 153.721 172.691 153.721 162.736 cv
153.721 152.78 161.792 144.709 171.748 144.709 cv
0 0 0 rgb
s
171.748 140.703 mo
183.916 140.703 193.78 150.567 193.78 162.736 cv
193.78 174.904 183.916 184.768 171.748 184.768 cv
159.579 184.768 149.715 174.904 149.715 162.736 cv
149.715 150.567 159.579 140.703 171.748 140.703 cv
0 0 0 rgb
s
0 0 0 rgb
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs

systemdict begin
/TimesNewRomanPSMT 
findfont dup
/Private get begin
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three 
<10bf317046e83a12808b34aac7f1a2c51f931f10ca7f698d45f025e79cad
acddbcee06bad2c5cc1167c54f184f7ff6c5be54525dd336a18dac59abe3
51af65de3cb74e87680e210111fe3373cf78cdaaefde1102d8a669c7f56c
fd78df2fa64353b29ec63cee83be5507fab9efe5b0c0654ac5d0faf82f72
c7d0d0ece4b0777dfc4d4bfc7583f8632dc6c5fd99d182cc5583383cd380
38e183a0ee9157830157210c13c7cc41fe93378a95d46b9bf61021a1bc93
25b861a11afa297b545a525e2dd0f9091708f3c950db8d721b9ad5668e69
2c6e768a4c7c4da3341999d7214a> ND 
systemdict /gcheck known {setglobal} if end end
end
/TimesNewRomanPSMT findfont /Encoding get
dup 51 /three put
pop
%ADOEndSubsetFont
/TimesNewRomanPSMT*1 
[
48{/.notdef}repeat /zero /one /two /three 2{/.notdef}repeat /six 36{/.notdef}repeat 
/bracketleft /.notdef /bracketright /.notdef /underscore 4{/.notdef}repeat /d /e 
3{/.notdef}repeat /i /j 2{/.notdef}repeat /m 2{/.notdef}repeat /p 2{/.notdef}repeat 
/s 4{/.notdef}repeat /x 135{/.notdef}repeat
] /TimesNewRomanPSMT nfnt
/TimesNewRomanPSMT*1 findfont [21 0 0 -21 0 0 ]mfnt sfnt
161.737 169.743 mov
(23) sh
171.748 36.5488 mo
171.748 60.5845 171.748 101.646 171.748 130.688 cv
0 0 0 rgb
s
175.753 130.688 mo
171.748 140.703 li
168.743 130.688 li
175.753 130.688 li
0 0 0 rgb
f
175.753 130.688 mo
171.748 140.703 li
168.743 130.688 li
175.753 130.688 li
cp
0 0 0 rgb
s
187.771 641.443 mo
160.731 629.426 li
133.691 641.443 li
133.691 662.475 li
187.771 662.475 li
187.771 641.443 li
cp
0 0 0 rgb
s
0 0 0 rgb
/TimesNewRomanPSMT*1 findfont [14.0207 0 0 -14.0207 0 0 ]mfnt sfnt
147.487 652.46 mov
(sx[0]) sh
271.896 641.443 mo
244.855 629.426 li
217.815 641.443 li
217.815 662.475 li
271.896 662.475 li
271.896 641.443 li
cp
0 0 0 rgb
s
0 0 0 rgb
/TimesNewRomanPSMT*1 findfont [14.0207 0 0 -14.0207 0 0 ]mfnt sfnt
231.612 652.46 mov
(sx[1]) sh
403.09 641.443 mo
376.05 629.426 li
349.01 641.443 li
349.01 662.475 li
403.09 662.475 li
403.09 641.443 li
cp
0 0 0 rgb
s
0 0 0 rgb
/TimesNewRomanPSMT*1 findfont [14.0207 0 0 -14.0207 0 0 ]mfnt sfnt
362.806 652.46 mov
(sx[2]) sh
116.666 92.6318 mo
89.626 110.659 li
116.666 128.686 li
143.706 110.659 li
116.666 92.6318 li
cp
0 0 0 rgb
s
0 0 0 rgb
/TimesNewRomanPSMT*1 findfont [14.0207 0 0 -14.0207 0 0 ]mfnt sfnt
99.1401 115.666 mov
(dx2[0]) sh
99.6406 80.6143 mo
100.642 83.6187 101.644 86.623 102.645 89.6274 cv
0 0 0 rgb
s
105.65 87.6245 mo
106.651 98.6406 li
99.6406 90.6289 li
105.65 87.6245 li
0 0 0 rgb
f
105.65 87.6245 mo
106.651 98.6406 li
99.6406 90.6289 li
105.65 87.6245 li
cp
0 0 0 rgb
s
110.657 75.6069 mo
111.659 77.6099 113.662 80.6143 114.663 82.6172 cv
0 0 0 rgb
s
117.667 81.6157 mo
117.667 92.6318 li
111.659 83.6187 li
117.667 81.6157 li
0 0 0 rgb
f
117.667 81.6157 mo
117.667 92.6318 li
111.659 83.6187 li
117.667 81.6157 li
cp
0 0 0 rgb
s
108.654 300.94 mo
118.61 300.94 126.681 309.011 126.681 318.967 cv
126.681 328.923 118.61 336.993 108.654 336.993 cv
98.6982 336.993 90.6274 328.923 90.6274 318.967 cv
90.6274 309.011 98.6982 300.94 108.654 300.94 cv
0 0 0 rgb
s
0 0 0 rgb
/TimesNewRomanPSMT*1 findfont [21 0 0 -21 0 0 ]mfnt sfnt
98.6436 325.974 mov
(23) sh
88.6245 75.6069 mo
85.6201 79.6128 82.6157 84.6201 80.6128 88.626 cv
65.5903 119.672 61.5845 129.687 61.5845 162.736 cv
61.5845 162.736 61.5845 162.736 61.5845 214.813 cv
61.5845 242.854 76.6069 272.898 88.6245 291.927 cv
0 0 0 rgb
s
91.6289 290.925 mo
94.6333 300.94 li
86.6216 294.931 li
91.6289 290.925 li
0 0 0 rgb
f
91.6289 290.925 mo
94.6333 300.94 li
86.6216 294.931 li
91.6289 290.925 li
cp
0 0 0 rgb
s
276.903 92.6318 mo
249.863 110.659 li
276.903 128.686 li
303.943 110.659 li
276.903 92.6318 li
cp
0 0 0 rgb
s
0 0 0 rgb
/TimesNewRomanPSMT*1 findfont [14.0207 0 0 -14.0207 0 0 ]mfnt sfnt
259.377 115.666 mov
(dx2[1]) sh
270.894 77.6099 mo
270.894 80.6143 269.893 83.6187 269.893 86.623 cv
0 0 0 rgb
s
272.897 86.623 mo
270.894 96.6377 li
266.888 86.623 li
272.897 86.623 li
0 0 0 rgb
f
272.897 86.623 mo
270.894 96.6377 li
266.888 86.623 li
272.897 86.623 li
cp
0 0 0 rgb
s
282.912 77.6099 mo
282.912 80.6143 283.913 83.6187 283.913 86.623 cv
0 0 0 rgb
s
286.918 86.623 mo
282.912 96.6377 li
280.909 86.623 li
286.918 86.623 li
0 0 0 rgb
f
286.918 86.623 mo
282.912 96.6377 li
280.909 86.623 li
286.918 86.623 li
cp
0 0 0 rgb
s
221.821 196.786 mo
231.777 196.786 239.848 204.857 239.848 214.813 cv
239.848 224.769 231.777 232.839 221.821 232.839 cv
211.866 232.839 203.795 224.769 203.795 214.813 cv
203.795 204.857 211.866 196.786 221.821 196.786 cv
0 0 0 rgb
s
0 0 0 rgb
/TimesNewRomanPSMT*1 findfont [21 0 0 -21 0 0 ]mfnt sfnt
211.811 221.82 mov
(23) sh
257.875 71.6011 mo
250.864 75.6069 245.857 79.6128 240.85 88.626 cv
223.825 117.669 220.82 155.725 219.818 182.765 cv
0 0 0 rgb
s
223.825 182.765 mo
219.818 192.78 li
216.814 182.765 li
223.825 182.765 li
0 0 0 rgb
f
223.825 182.765 mo
219.818 192.78 li
216.814 182.765 li
223.825 182.765 li
cp
0 0 0 rgb
s
436.139 92.6318 mo
409.099 110.659 li
436.139 128.686 li
463.179 110.659 li
436.139 92.6318 li
cp
0 0 0 rgb
s
0 0 0 rgb
/TimesNewRomanPSMT*1 findfont [14.0207 0 0 -14.0207 0 0 ]mfnt sfnt
418.612 115.666 mov
(dx2[2]) sh
449.158 75.6069 mo
447.155 78.6113 445.152 81.6157 443.149 84.6201 cv
0 0 0 rgb
s
446.153 86.623 mo
438.142 93.6333 li
440.145 83.6187 li
446.153 86.623 li
0 0 0 rgb
f
446.153 86.623 mo
438.142 93.6333 li
440.145 83.6187 li
446.153 86.623 li
cp
0 0 0 rgb
s
459.173 79.6128 mo
457.17 83.6187 455.167 87.6245 453.164 91.6304 cv
0 0 0 rgb
s
456.168 93.6333 mo
447.155 99.6426 li
450.159 89.6274 li
456.168 93.6333 li
0 0 0 rgb
f
456.168 93.6333 mo
447.155 99.6426 li
450.159 89.6274 li
456.168 93.6333 li
cp
0 0 0 rgb
s
447.155 248.863 mo
457.11 248.863 465.182 256.934 465.182 266.89 cv
465.182 276.846 457.11 284.917 447.155 284.917 cv
437.199 284.917 429.128 276.846 429.128 266.89 cv
429.128 256.934 437.199 248.863 447.155 248.863 cv
0 0 0 rgb
s
447.155 244.857 mo
459.323 244.857 469.188 254.722 469.188 266.89 cv
469.188 279.058 459.323 288.922 447.155 288.922 cv
434.986 288.922 425.122 279.058 425.122 266.89 cv
425.122 254.722 434.986 244.857 447.155 244.857 cv
0 0 0 rgb
s
0 0 0 rgb
/TimesNewRomanPSMT*1 findfont [21 0 0 -21 0 0 ]mfnt sfnt
437.145 273.897 mov
(23) sh
469.188 77.6099 mo
470.189 81.6157 471.19 84.6201 472.192 88.626 cv
475.196 108.656 473.193 113.663 472.192 132.691 cv
468.186 168.745 460.174 208.804 454.165 235.844 cv
0 0 0 rgb
s
457.17 236.845 mo
452.162 245.858 li
451.161 235.844 li
457.17 236.845 li
0 0 0 rgb
f
457.17 236.845 mo
452.162 245.858 li
451.161 235.844 li
457.17 236.845 li
cp
0 0 0 rgb
s
260.879 180.762 mo
292.927 180.762 li
303.943 144.709 li
249.863 144.709 li
260.879 180.762 li
cp
0 0 0 rgb
s
0 0 0 rgb
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs

systemdict begin
/TimesNewRomanPSMT 
findfont dup
/Private get begin
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/y 
<10bf3170638bba13f480e5fde8996045de127a9c4618a2d4aa7c3941a65b
655e0c9abd29436b155308878db9c977a5fa9d8aabf88f01b9ed200087ec
a512549272155995d5ba8a658d1b9bd6631ff76a4e668a0f712e1ffb6536
2645509bc9da53c94714c8c3d06e835b3de8a617493a3b48a5cf09eb51a1
f8e94701f8b707ec6cac19b3b46b6af22d6b57b2906df634fd967798ff79
41b6c0c1662b9e4850b0745567e166dc15afd8d264bb362629824a3196ac
305d1be65193e27d2fd4c922aa9edd149d8aaacac7819d1067e8f92d1467
837fe3> ND 
systemdict /gcheck known {setglobal} if end end
end
/TimesNewRomanPSMT findfont /Encoding get
dup 121 /y put
pop
%ADOEndSubsetFont
/TimesNewRomanPSMT*1 
[
48{/.notdef}repeat /zero /one /two /three 2{/.notdef}repeat /six 36{/.notdef}repeat 
/bracketleft /.notdef /bracketright /.notdef /underscore 4{/.notdef}repeat /d /e 
3{/.notdef}repeat /i /j 2{/.notdef}repeat /m 2{/.notdef}repeat /p 2{/.notdef}repeat 
/s 4{/.notdef}repeat /x /y 134{/.notdef}repeat
] /TimesNewRomanPSMT nfnt
/TimesNewRomanPSMT*1 findfont [14.0207 0 0 -14.0207 0 0 ]mfnt sfnt
262.882 167.743 mov
(x2y2) sh
134.693 116.667 mo
160.731 125.681 210.805 141.705 242.853 151.719 cv
0 0 0 rgb
s
243.854 148.715 mo
252.868 154.724 li
241.851 154.724 li
243.854 148.715 li
0 0 0 rgb
f
243.854 148.715 mo
252.868 154.724 li
241.851 154.724 li
243.854 148.715 li
cp
0 0 0 rgb
s
276.903 128.686 mo
276.903 130.688 276.903 132.691 276.903 134.694 cv
0 0 0 rgb
s
280.909 134.694 mo
276.903 144.709 li
273.898 134.694 li
280.909 134.694 li
0 0 0 rgb
f
280.909 134.694 mo
276.903 144.709 li
273.898 134.694 li
280.909 134.694 li
cp
0 0 0 rgb
s
353.016 180.762 mo
385.063 180.762 li
396.079 144.709 li
341.999 144.709 li
353.016 180.762 li
cp
0 0 0 rgb
s
0 0 0 rgb
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs

systemdict begin
/TimesNewRomanPSMT 
findfont dup
/Private get begin
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/z 
<10bf31706d7b034b88b69b8745d3549483d633ef0d22afe4edf1d8b16d7d
8fcfd4b207cd72a6b23080b93a267d6450021d8dda1b2a7d1048bb787cdd
e4b3370d59c6ba81363a10949ee62624babf5dce2b9ed804c69a546bc5cf
6ad525f5bb> ND 
systemdict /gcheck known {setglobal} if end end
end
/TimesNewRomanPSMT findfont /Encoding get
dup 122 /z put
pop
%ADOEndSubsetFont
/TimesNewRomanPSMT*1 
[
48{/.notdef}repeat /zero /one /two /three 2{/.notdef}repeat /six 36{/.notdef}repeat 
/bracketleft /.notdef /bracketright /.notdef /underscore 4{/.notdef}repeat /d /e 
3{/.notdef}repeat /i /j 2{/.notdef}repeat /m 2{/.notdef}repeat /p 2{/.notdef}repeat 
/s 4{/.notdef}repeat /x /y /z 133{/.notdef}repeat
] /TimesNewRomanPSMT nfnt
/TimesNewRomanPSMT*1 findfont [14.0207 0 0 -14.0207 0 0 ]mfnt sfnt
355.806 167.743 mov
(z2e2) sh
423.119 120.673 mo
416.109 125.681 408.097 132.691 400.085 138.7 cv
0 0 0 rgb
s
402.088 141.705 mo
392.073 144.709 li
398.082 135.696 li
402.088 141.705 li
0 0 0 rgb
f
402.088 141.705 mo
392.073 144.709 li
398.082 135.696 li
402.088 141.705 li
cp
0 0 0 rgb
s
330.983 232.839 mo
363.03 232.839 li
374.047 196.786 li
319.967 196.786 li
330.983 232.839 li
cp
0 0 0 rgb
s
0 0 0 rgb
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs

systemdict begin
/TimesNewRomanPSMT 
findfont dup
/Private get begin
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/r 
<10bf317063846c0d04467b4514eeaf5ad995f8d8d5368dfec5aee1c6b68a
3c0ec443b5151d573544f035f9c8d56a8c86eff8bc45b9cb7e9f7b4d2809
af6f18097fb347def46731e8a3ca8727e68580e7e5a82ffd67834895aa8a
7069ddf865d0109c1727ed7e1906ae399964f53305401f293656e81d3f7f
a520bb51b43e002474ba474471779fe9f889b94891c2fcd98f80aeea2c61
083a35a481b1750c54fd90563aed2fa403c1bb4ae1b4> ND 
systemdict /gcheck known {setglobal} if end end
end
/TimesNewRomanPSMT findfont /Encoding get
dup 114 /r put
pop
%ADOEndSubsetFont
/TimesNewRomanPSMT*1 
[
48{/.notdef}repeat /zero /one /two /three 2{/.notdef}repeat /six 36{/.notdef}repeat 
/bracketleft /.notdef /bracketright /.notdef /underscore 4{/.notdef}repeat /d /e 
3{/.notdef}repeat /i /j 2{/.notdef}repeat /m 2{/.notdef}repeat /p /.notdef 
/r /s 4{/.notdef}repeat /x /y /z 133{/.notdef}repeat
] /TimesNewRomanPSMT nfnt
/TimesNewRomanPSMT*1 findfont [14.0207 0 0 -14.0207 0 0 ]mfnt sfnt
341.167 219.82 mov
(r2) sh
294.93 175.755 mo
300.938 179.761 306.947 184.768 313.958 190.777 cv
0 0 0 rgb
s
315.961 187.772 mo
321.97 196.786 li
311.955 193.782 li
315.961 187.772 li
0 0 0 rgb
f
315.961 187.772 mo
321.97 196.786 li
311.955 193.782 li
315.961 187.772 li
cp
0 0 0 rgb
s
361.027 180.762 mo
360.026 182.765 359.024 184.768 359.024 186.771 cv
0 0 0 rgb
s
362.029 188.774 mo
355.019 196.786 li
355.019 185.77 li
362.029 188.774 li
0 0 0 rgb
f
362.029 188.774 mo
355.019 196.786 li
355.019 185.77 li
362.029 188.774 li
cp
0 0 0 rgb
s
369.039 132.691 mo
369.039 133.693 369.039 133.693 369.039 134.694 cv
0 0 0 rgb
s
373.045 134.694 mo
369.039 144.709 li
366.035 134.694 li
373.045 134.694 li
0 0 0 rgb
f
373.045 134.694 mo
369.039 144.709 li
366.035 134.694 li
373.045 134.694 li
cp
0 0 0 rgb
s
347.007 284.917 mo
374.047 257.876 li
319.967 257.876 li
347.007 284.917 li
cp
0 0 0 rgb
s
0 0 0 rgb
/TimesNewRomanPSMT*1 findfont [14.0207 0 0 -14.0207 0 0 ]mfnt sfnt
341.167 271.897 mov
(r1) sh
347.007 232.839 mo
347.007 237.847 347.007 242.854 347.007 247.862 cv
0 0 0 rgb
s
351.013 247.862 mo
347.007 257.876 li
344.002 247.862 li
351.013 247.862 li
0 0 0 rgb
f
351.013 247.862 mo
347.007 257.876 li
344.002 247.862 li
351.013 247.862 li
cp
0 0 0 rgb
s
374.047 312.958 mo
347.007 297.936 li
319.967 312.958 li
329.981 335.992 li
364.032 335.992 li
374.047 312.958 li
cp
0 0 0 rgb
s
0 0 0 rgb
/TimesNewRomanPSMT*1 findfont [14.0207 0 0 -14.0207 0 0 ]mfnt sfnt
339.22 323.974 mov
(r1i) sh
347.007 353.017 mo
319.967 371.044 li
347.007 389.07 li
374.047 371.044 li
347.007 353.017 li
cp
0 0 0 rgb
s
0 0 0 rgb
/TimesNewRomanPSMT*1 findfont [14.0207 0 0 -14.0207 0 0 ]mfnt sfnt
339.22 376.052 mov
(r2i) sh
340.998 335.992 mo
340.998 338.997 339.996 343.003 339.996 347.009 cv
0 0 0 rgb
s
343.001 347.009 mo
340.998 357.022 li
336.992 347.009 li
343.001 347.009 li
0 0 0 rgb
f
343.001 347.009 mo
340.998 357.022 li
336.992 347.009 li
343.001 347.009 li
cp
0 0 0 rgb
s
353.016 335.992 mo
354.018 338.997 354.018 343.003 354.018 347.009 cv
0 0 0 rgb
s
357.021 347.009 mo
353.016 357.022 li
351.013 347.009 li
357.021 347.009 li
0 0 0 rgb
f
357.021 347.009 mo
353.016 357.022 li
351.013 347.009 li
357.021 347.009 li
cp
0 0 0 rgb
s
279.907 353.017 mo
289.863 353.017 297.935 361.088 297.935 371.044 cv
297.935 380.999 289.863 389.07 279.907 389.07 cv
269.952 389.07 261.881 380.999 261.881 371.044 cv
261.881 361.088 269.952 353.017 279.907 353.017 cv
0 0 0 rgb
s
279.907 349.011 mo
292.075 349.011 301.94 358.876 301.94 371.044 cv
301.94 383.212 292.075 393.077 279.907 393.077 cv
267.739 393.077 257.875 383.212 257.875 371.044 cv
257.875 358.876 267.739 349.011 279.907 349.011 cv
0 0 0 rgb
s
0 0 0 rgb
/TimesNewRomanPSMT*1 findfont [21 0 0 -21 0 0 ]mfnt sfnt
275.402 378.052 mov
(2) sh
328.98 332.987 mo
321.97 338.997 313.958 345.005 305.946 351.015 cv
0 0 0 rgb
s
307.949 354.019 mo
297.935 357.022 li
303.943 348.01 li
307.949 354.019 li
0 0 0 rgb
f
307.949 354.019 mo
297.935 357.022 li
303.943 348.01 li
307.949 354.019 li
cp
0 0 0 rgb
s
282.912 401.089 mo
255.872 419.115 li
282.912 437.142 li
309.952 419.115 li
282.912 401.089 li
cp
0 0 0 rgb
s
0 0 0 rgb
/TimesNewRomanPSMT*1 findfont [14.0207 0 0 -14.0207 0 0 ]mfnt sfnt
275.125 424.122 mov
(r3i) sh
333.987 381.059 mo
324.975 387.067 313.958 396.081 303.943 403.091 cv
0 0 0 rgb
s
305.946 406.096 mo
295.932 409.101 li
301.94 400.087 li
305.946 406.096 li
0 0 0 rgb
f
305.946 406.096 mo
295.932 409.101 li
301.94 400.087 li
305.946 406.096 li
cp
0 0 0 rgb
s
280.909 393.077 mo
280.909 393.077 li
0 0 0 rgb
s
283.913 392.075 mo
281.911 402.09 li
276.903 392.075 li
283.913 392.075 li
0 0 0 rgb
f
283.913 392.075 mo
281.911 402.09 li
276.903 392.075 li
283.913 392.075 li
cp
0 0 0 rgb
s
255.872 449.159 mo
228.832 467.187 li
255.872 485.213 li
282.912 467.187 li
255.872 449.159 li
cp
0 0 0 rgb
s
0 0 0 rgb
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs

systemdict begin
/TimesNewRomanPSMT 
findfont dup
/Private get begin
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/f 
<10bf317040cdafcf4c85ea96770a161ac86c86b3da1de71c3c1d8d7b233d
d5c9149f810914ad38a97a185443c1c2440e78f30291f76f6d029b3ea2b6
66de02ac1bf19ed2dbfc70d08ae79c368cc19dd7ee6f7f891d2c83ea3a82
f4273ce61781b76966f5c7876c34e2b43a45523c4b42ee5dfa86ed1aad28
c225091d8e9e75f9abbae478bde45603b24282244c90d0bd1005e38693d2
05c915e9f7b21b731549211bb149d33709f6ba292435a821caec7d09122a
a85fb1> ND 
systemdict /gcheck known {setglobal} if end end
end
/TimesNewRomanPSMT findfont /Encoding get
dup 102 /f put
pop
%ADOEndSubsetFont
/TimesNewRomanPSMT*1 
[
48{/.notdef}repeat /zero /one /two /three 2{/.notdef}repeat /six 36{/.notdef}repeat 
/bracketleft /.notdef /bracketright /.notdef /underscore 4{/.notdef}repeat /d /e 
/f 2{/.notdef}repeat /i /j 2{/.notdef}repeat /m 2{/.notdef}repeat /p 
/.notdef /r /s 4{/.notdef}repeat /x /y /z 133{/.notdef}repeat
] /TimesNewRomanPSMT nfnt
/TimesNewRomanPSMT*1 findfont [14.0207 0 0 -14.0207 0 0 ]mfnt sfnt
248.084 472.193 mov
(mf) sh
275.901 432.134 mo
273.898 436.141 270.894 440.146 268.891 445.153 cv
0 0 0 rgb
s
271.896 447.156 mo
263.884 454.167 li
265.887 444.152 li
271.896 447.156 li
0 0 0 rgb
f
271.896 447.156 mo
263.884 454.167 li
265.887 444.152 li
271.896 447.156 li
cp
0 0 0 rgb
s
255.872 497.23 mo
228.832 515.257 li
255.872 533.284 li
282.912 515.257 li
255.872 497.23 li
cp
0 0 0 rgb
s
0 0 0 rgb
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs

systemdict begin
/TimesNewRomanPSMT 
findfont dup
/Private get begin
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/o 
<10bf31705fc1db5456c194eea6db4b28ba27bcfe06dfbaea808b4b94782b
858d11975b27223d0b6d7d91b178aa636f44bd6799b0a1e7bdfe3b2848e8
67d16652cf1e1d16eb11c8e931a8c3a5c20ce3e46e302745f5c6d7e5ce21
21e333fdaa150cd3191a1e4c670506e5c48803290df3192b44aa2b4f51a0
a9c983af94e8a18415a60616a6a395b3de67178db0d5045384581c136ad0
9005bf> ND 
systemdict /gcheck known {setglobal} if end end
end
/TimesNewRomanPSMT findfont /Encoding get
dup 111 /o put
pop
%ADOEndSubsetFont
/TimesNewRomanPSMT*1 
[
48{/.notdef}repeat /zero /one /two /three 2{/.notdef}repeat /six 36{/.notdef}repeat 
/bracketleft /.notdef /bracketright /.notdef /underscore 4{/.notdef}repeat /d /e 
/f 2{/.notdef}repeat /i /j 2{/.notdef}repeat /m /.notdef /o 
/p /.notdef /r /s 4{/.notdef}repeat /x /y /z 
133{/.notdef}repeat
] /TimesNewRomanPSMT nfnt
/TimesNewRomanPSMT*1 findfont [14.0207 0 0 -14.0207 0 0 ]mfnt sfnt
244.579 520.265 mov
(mfo) sh
255.872 485.213 mo
255.872 486.214 255.872 486.214 255.872 487.216 cv
0 0 0 rgb
s
259.878 487.216 mo
255.872 497.23 li
252.868 487.216 li
259.878 487.216 li
0 0 0 rgb
f
259.878 487.216 mo
255.872 497.23 li
252.868 487.216 li
259.878 487.216 li
cp
0 0 0 rgb
s
176.755 184.768 mo
180.761 199.791 185.768 219.82 190.775 236.845 cv
213.81 326.979 220.82 349.011 246.858 437.142 cv
246.858 439.145 247.86 440.146 247.86 442.149 cv
0 0 0 rgb
s
250.864 441.147 mo
250.864 452.164 li
244.855 443.15 li
250.864 441.147 li
0 0 0 rgb
f
250.864 441.147 mo
250.864 452.164 li
244.855 443.15 li
250.864 441.147 li
cp
0 0 0 rgb
s
160.731 541.296 mo
133.691 559.322 li
160.731 577.349 li
187.771 559.322 li
160.731 541.296 li
cp
0 0 0 rgb
s
0 0 0 rgb
/TimesNewRomanPSMT*1 findfont [14.0207 0 0 -14.0207 0 0 ]mfnt sfnt
147.881 564.33 mov
(fx[0]) sh
239.848 522.268 mo
224.826 529.278 202.793 539.293 185.768 547.305 cv
0 0 0 rgb
s
186.77 550.309 mo
176.755 552.313 li
183.765 544.3 li
186.77 550.309 li
0 0 0 rgb
f
186.77 550.309 mo
176.755 552.313 li
183.765 544.3 li
186.77 550.309 li
cp
0 0 0 rgb
s
244.855 541.296 mo
217.815 559.322 li
244.855 577.349 li
271.896 559.322 li
244.855 541.296 li
cp
0 0 0 rgb
s
0 0 0 rgb
/TimesNewRomanPSMT*1 findfont [14.0207 0 0 -14.0207 0 0 ]mfnt sfnt
232.005 564.33 mov
(fx[1]) sh
251.866 531.281 mo
251.866 532.282 251.866 532.282 250.864 533.284 cv
0 0 0 rgb
s
253.869 534.285 mo
248.861 543.299 li
247.86 533.284 li
253.869 534.285 li
0 0 0 rgb
f
253.869 534.285 mo
248.861 543.299 li
247.86 533.284 li
253.869 534.285 li
cp
0 0 0 rgb
s
376.05 541.296 mo
349.01 559.322 li
376.05 577.349 li
403.09 559.322 li
376.05 541.296 li
cp
0 0 0 rgb
s
0 0 0 rgb
/TimesNewRomanPSMT*1 findfont [14.0207 0 0 -14.0207 0 0 ]mfnt sfnt
363.199 564.33 mov
(fx[2]) sh
272.897 521.266 mo
292.927 529.278 324.975 540.294 348.008 549.308 cv
0 0 0 rgb
s
350.011 546.303 mo
358.023 553.313 li
347.007 553.313 li
350.011 546.303 li
0 0 0 rgb
f
350.011 546.303 mo
358.023 553.313 li
347.007 553.313 li
350.011 546.303 li
cp
0 0 0 rgb
s
333.987 449.159 mo
343.943 449.159 352.014 457.23 352.014 467.187 cv
352.014 477.142 343.943 485.213 333.987 485.213 cv
324.031 485.213 315.961 477.142 315.961 467.187 cv
315.961 457.23 324.031 449.159 333.987 449.159 cv
0 0 0 rgb
s
333.987 445.153 mo
346.155 445.153 356.021 455.018 356.021 467.187 cv
356.021 479.354 346.155 489.219 333.987 489.219 cv
321.819 489.219 311.955 479.354 311.955 467.187 cv
311.955 455.018 321.819 445.153 333.987 445.153 cv
0 0 0 rgb
s
0 0 0 rgb
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs

systemdict begin
/TimesNewRomanPSMT 
findfont dup
/Private get begin
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/five 
<10bf317049845615ceab2cb35844ace30baf3e54b0e1773fc25e2037b21b
b58b95d34cefc92bea69dc9b438084ed7eb5c6702a368454ebc82a5856ce
9936aede12d64deba22dd59cd070d9cd700c552563a2157176094ad577ca
7175d4c555582970bb6ced51f021b279f79ea313c4e45258856c7401f914
3fd613f871ff33cdce06d0175d18b29427c1e70009e3e10e63caa0676029
8c0b976669b8d245> ND 
systemdict /gcheck known {setglobal} if end end
end
/TimesNewRomanPSMT findfont /Encoding get
dup 53 /five put
pop
%ADOEndSubsetFont
/TimesNewRomanPSMT*1 
[
48{/.notdef}repeat /zero /one /two /three /.notdef /five /six 
36{/.notdef}repeat /bracketleft /.notdef /bracketright /.notdef /underscore 4{/.notdef}repeat /d 
/e /f 2{/.notdef}repeat /i /j 2{/.notdef}repeat /m /.notdef 
/o /p /.notdef /r /s 4{/.notdef}repeat /x /y 
/z 133{/.notdef}repeat
] /TimesNewRomanPSMT nfnt
/TimesNewRomanPSMT*1 findfont [21 0 0 -21 0 0 ]mfnt sfnt
323.978 474.193 mov
(25) sh
314.959 479.204 mo
303.943 485.213 290.924 493.225 279.907 500.235 cv
0 0 0 rgb
s
280.909 503.239 mo
270.894 506.244 li
276.903 498.232 li
280.909 503.239 li
0 0 0 rgb
f
280.909 503.239 mo
270.894 506.244 li
276.903 498.232 li
280.909 503.239 li
cp
0 0 0 rgb
s
188.772 585.361 mo
143.706 585.361 li
132.689 621.414 li
177.756 621.414 li
188.772 585.361 li
cp
0 0 0 rgb
s
0 0 0 rgb
/TimesNewRomanPSMT*1 findfont [14.0207 0 0 -14.0207 0 0 ]mfnt sfnt
145.673 608.395 mov
-0.253296 0 (ff) ash
154.758 608.395 mov
(x[0]) sh
160.731 577.349 mo
160.731 577.349 li
0 0 0 rgb
s
164.737 575.346 mo
160.731 585.361 li
157.727 575.346 li
164.737 575.346 li
0 0 0 rgb
f
164.737 575.346 mo
160.731 585.361 li
157.727 575.346 li
164.737 575.346 li
cp
0 0 0 rgb
s
118.669 338.997 mo
127.682 359.026 139.7 390.071 139.7 419.115 cv
139.7 419.115 139.7 419.115 139.7 467.187 cv
139.7 491.222 145.709 517.26 152.719 535.287 cv
0 0 0 rgb
s
155.724 534.285 mo
155.724 545.302 li
149.715 536.288 li
155.724 534.285 li
0 0 0 rgb
f
155.724 534.285 mo
155.724 545.302 li
149.715 536.288 li
155.724 534.285 li
cp
0 0 0 rgb
s
272.897 585.361 mo
227.831 585.361 li
216.814 621.414 li
261.881 621.414 li
272.897 585.361 li
cp
0 0 0 rgb
s
0 0 0 rgb
/TimesNewRomanPSMT*1 findfont [14.0207 0 0 -14.0207 0 0 ]mfnt sfnt
229.798 608.395 mov
-0.253296 0 (ff) ash
238.883 608.395 mov
(x[1]) sh
244.855 577.349 mo
244.855 577.349 li
0 0 0 rgb
s
248.861 575.346 mo
244.855 585.361 li
241.851 575.346 li
248.861 575.346 li
0 0 0 rgb
f
248.861 575.346 mo
244.855 585.361 li
241.851 575.346 li
248.861 575.346 li
cp
0 0 0 rgb
s
215.813 235.844 mo
206.799 272.898 189.774 352.016 189.774 419.115 cv
189.774 419.115 189.774 419.115 189.774 467.187 cv
189.774 496.229 209.804 524.271 225.828 541.296 cv
0 0 0 rgb
s
227.831 538.291 mo
232.838 548.306 li
222.823 543.299 li
227.831 538.291 li
0 0 0 rgb
f
227.831 538.291 mo
232.838 548.306 li
222.823 543.299 li
227.831 538.291 li
cp
0 0 0 rgb
s
404.091 585.361 mo
359.024 585.361 li
348.008 621.414 li
393.075 621.414 li
404.091 585.361 li
cp
0 0 0 rgb
s
0 0 0 rgb
/TimesNewRomanPSMT*1 findfont [14.0207 0 0 -14.0207 0 0 ]mfnt sfnt
360.992 608.395 mov
-0.253296 0 (ff) ash
370.077 608.395 mov
(x[2]) sh
376.05 577.349 mo
376.05 577.349 li
0 0 0 rgb
s
380.056 575.346 mo
376.05 585.361 li
373.045 575.346 li
380.056 575.346 li
0 0 0 rgb
f
380.056 575.346 mo
376.05 585.361 li
373.045 575.346 li
380.056 575.346 li
cp
0 0 0 rgb
s
443.149 288.922 mo
439.143 309.954 434.136 343.003 434.136 371.044 cv
434.136 371.044 434.136 371.044 434.136 467.187 cv
434.136 497.23 412.104 525.272 395.078 542.297 cv
0 0 0 rgb
s
398.082 544.3 mo
388.067 549.308 li
393.075 539.293 li
398.082 544.3 li
0 0 0 rgb
f
398.082 544.3 mo
388.067 549.308 li
393.075 539.293 li
398.082 544.3 li
cp
0 0 0 rgb
s
347.007 284.917 mo
347.007 285.918 347.007 286.919 347.007 287.921 cv
0 0 0 rgb
s
351.013 287.921 mo
347.007 297.936 li
344.002 287.921 li
351.013 287.921 li
0 0 0 rgb
f
351.013 287.921 mo
347.007 297.936 li
344.002 287.921 li
351.013 287.921 li
cp
0 0 0 rgb
s
160.731 621.414 mo
160.731 621.414 li
0 0 0 rgb
s
164.737 619.411 mo
160.731 629.426 li
157.727 619.411 li
164.737 619.411 li
0 0 0 rgb
f
164.737 619.411 mo
160.731 629.426 li
157.727 619.411 li
164.737 619.411 li
cp
0 0 0 rgb
s
244.855 621.414 mo
244.855 621.414 li
0 0 0 rgb
s
248.861 619.411 mo
244.855 629.426 li
241.851 619.411 li
248.861 619.411 li
0 0 0 rgb
f
248.861 619.411 mo
244.855 629.426 li
241.851 619.411 li
248.861 619.411 li
cp
0 0 0 rgb
s
376.05 621.414 mo
376.05 621.414 li
0 0 0 rgb
s
380.056 619.411 mo
376.05 629.426 li
373.045 619.411 li
380.056 619.411 li
0 0 0 rgb
f
380.056 619.411 mo
376.05 629.426 li
373.045 619.411 li
380.056 619.411 li
cp
0 0 0 rgb
s
355.019 401.089 mo
369.952 401.089 382.059 409.159 382.059 419.115 cv
382.059 429.07 369.952 437.142 355.019 437.142 cv
340.085 437.142 327.979 429.07 327.979 419.115 cv
327.979 409.159 340.085 401.089 355.019 401.089 cv
0 0 0 rgb
s
0 0 0 rgb
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs

systemdict begin
/TimesNewRomanPSMT 
findfont dup
/Private get begin
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/t 
<10bf3170675b4d3401fff3ff5f765da1975e70428467ea281d5658a08302
13a3804f9a1319dd7c580c31580e87e258a447c36de3afa6295edab19ac4
8b72bc19bc7bbb33808d808ebf49d28b777c53d40fa69bc3ca85c2cf0fb2
3dcaafafc241c80c646145936a07b2aeeb3dbc48cf79b8029b13f4d41756
50d9e9> ND 
systemdict /gcheck known {setglobal} if end end
end
/TimesNewRomanPSMT findfont /Encoding get
dup 116 /t put
pop
%ADOEndSubsetFont
/TimesNewRomanPSMT*1 
[
48{/.notdef}repeat /zero /one /two /three /.notdef /five /six 
36{/.notdef}repeat /bracketleft /.notdef /bracketright /.notdef /underscore 4{/.notdef}repeat /d 
/e /f 2{/.notdef}repeat /i /j 2{/.notdef}repeat /m /.notdef 
/o /p /.notdef /r /s /t 3{/.notdef}repeat /x 
/y /z 133{/.notdef}repeat
] /TimesNewRomanPSMT nfnt
/TimesNewRomanPSMT*1 findfont [14.0207 0 0 -14.0207 0 0 ]mfnt sfnt
342.169 424.122 mov
(fofst) sh
347.007 436.141 mo
347.007 436.141 347.007 436.141 347.007 437.142 cv
0 0 0 rgb
s
350.011 438.144 mo
343.001 446.155 li
344.002 435.139 li
350.011 438.144 li
0 0 0 rgb
f
350.011 438.144 mo
343.001 446.155 li
344.002 435.139 li
350.011 438.144 li
cp
0 0 0 rgb
s
6 lw
280.441 348.703 mo
292.609 348.703 302.475 358.567 302.475 370.735 cv
302.475 382.903 292.609 392.769 280.441 392.769 cv
268.273 392.769 258.409 382.903 258.409 370.735 cv
258.409 358.567 268.273 348.703 280.441 348.703 cv
0 0 0 rgb
s
grestore % PSGState
%ADOBeginClientInjection: EndPageContent "AI10"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse

%ADOEndClientInjection: EndPageContent "AI10"
% page clip
grestore
grestore % PSGState
Adobe_AGM_Core/AGMCORE_save get restore
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI10"
%ADOEndClientInjection: PageTrailer Start "AI10"
Adobe_AGM_Image/page_trailer get exec
Adobe_CoolType_Core/page_trailer get exec
Adobe_AGM_Core/page_trailer get exec
currentdict Adobe_AGM_Utils eq {end} if
%ADOBeginClientInjection: PageTrailer End "AI10"
%ADOEndClientInjection: PageTrailer End "AI10"
%%Trailer
%ADOBeginClientInjection: DocumentTrailer Start "AI10"
%ADOEndClientInjection: DocumentTrailer Start "AI10"
Adobe_AGM_Image/doc_trailer get exec
Adobe_CoolType_Core/doc_trailer get exec
Adobe_AGM_Core/doc_trailer get exec
%ADOBeginClientInjection: DocumentTrailer End "AI10"
%ADOEndClientInjection: DocumentTrailer End "AI10"
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 10.0
%%For: (ev02) (ev02)
%%Title: (grav_float_delay.eps)
%%CreationDate: 12/13/2004 2:11 AM
%AI9_DataStream
%Gb"07D0$s]OsYE\:M08A_JDqZP3k"BGXn^YA=%\c?HlHYZr3l)Zg,*,/2F8`h'A2J,YP-Yli2G5\-!")As,TK7#B\,8sP8*^cU<l
%O#mogVk<B/YKr8*cJRt?J,Z0>^56.U6Iu@<T7-:pVuQ_VgVr8XP_n_[8F\%/dX`U_M/>=K.Fb/O_'%FIo'#pdEIRT*C3d1r]\Hkc
%/m"BH1jc.lUVGF,B?TlsU;&ZJ>?q/Qn^FtjZhaDUhu2e.*Tt'#Mi6&J`UPO"VdI!$Z]ikWCq2Tr?T!;\1=<bqK"o'j^KGs3E&c7[
%3^5[=5$iV(oiW8aF[j\1q+5hQ5JC?,>u>sJ1khBGqo?C]+^[&Xs7b3-J(:[sX&^"nrt?J=i8[O#<ZL9U6>;("C\."e,N%`e?>B8k
%iaTWj?_&aoWFRKCrqhWq2@#/loBXjUWI!%6U>XSb%C5c4c.<c)>]M;i[8Q7]r29>)3,u&P[/AgA_Z,&.bn.b'0o_Hm^A6mk`Ft+d
%gVu:#XA]2.;#keQf+WT3@W?R23kniP([3PG>[qnLT2dj@V6T)pZ13g3To$de7m1K:hOQ3HqP*fSMtumPQ'bsj])(jU+#MWQF%s#&
%Oh\Rn?*(b)5IjB23rQ(BNrRT!G]B0dS:#K@kAd\o`1JKuMtuY_ieh8UH$YI!V^f.Nfq5IoT$Q:I<`L;M?S'K0/H<R%h9g)o"OA;Z
%P103O2d/[E;/aHh]Q0$'Nl3s4J8t@=)"d.Ead\Lc0;s5NO3Gdcjqis+[u7#^06SPNMn<i(4T6#ERhP/`Ak/#8g]+cE3UW:uB^0R9
%i$M6/orlR=;Tl#2Y-&Q'\Z+QLMmq;NYKl;YkY>"d8lITDqVHf25+#^%M6;fH1giO,Hge.?i`c17#+sc4Zg7+k^RqLFi7f)22$Qj9
%Of,N'-^SB#,F\B%jZT>`O(dCrAi\>C6_(;HS<!S.H.O3Cf-)&!pdDLfI72iI8(.?a4PAU^SCn<HB/B!:q.tckZ^E)%8kYGG7T-*G
%7FM+h5Y9rCdEjLn+r]1#>:\%H."!3K)MLt)HgVA8N-=.n^X+BV+tMn/aVp/U-at)sOO5\F.X`d(5Vt;,T85:mJX/f_.ka%;I48HU
%:J!%<QNg"RV05a#=$@-pNZrt/L,S$)=iip$bN2kF3!9d%D9O4V>pG3R7XX23)CTu`cW#1On;1gl,<fZmKjCKqV$8>(o)_uWF&F&?
%WM9#JU.OP0^6-u>"1[o"2(;]!cGLu+nfQkaJXK$U5Y`p`QcEba4qUM6*Gq$iOi7#_*&Nb?B.hMn,i'hZ#cD<Yc:jGtN[lb6,>=5R
%,`f)"^=5sT?:pO/j3$P9amG;W,?c^,ZBl!\\br;HMkCDibLfGm8JX,]'3=Ot?d_dA/A8`ejj*/Q5WCpM5gP:W]]Z.Cq>G!i^@"Jn
%FirO^anm^4e]h+>,tl7@<2l2`n=<OT8q1$fU]+KsXHh]A\,9*DkCh?7b?kPG]Dn23)!,t#V=^/SVGhciJ'6a+T)A#kjc>QH*!iPD
%QG:=)q;$PD?X*MmT#V]-;oVmfk?me>2JTjB*WJ06__ff>kA[N>64`C(P]F[:%JjlZ1PNRqQbH&XJ+o1tD,!["Y7oZ8f<"hs4-%I5
%>CYhYcUnCIWr.iJVB<lW6mE\%&.ZR.dn\5`r/tagSjki37=JF3+X9aR,Lf;*3@X2d&e:Of"0R#2cs\_CK^fKNl=Y7!./ES4o!j/r
%<#qck3G,:=rtpgna7ZcQe,d[,>3U<(.M]+M8?M(^NB&:JBO.JrXT8['e*8F>=;PS8\cH(3bRW(AdP6CE[6g-+'fXjSjF,P5I2,]6
%]'grWSnY6\daHn8O:/(U[][1ec#&cfI9&N"pSIc[,W2t_@MlR`gACrE?F"Ij=t5T<>`8$MYUrF,XM[`KH`?=/?@04faHgA!Gq?qe
%8#N4XpEUtYh@EQIX42ZP<lUgO!D7I\k4,&iH"Vk+Ps\*M.DeABOt'5Q=D=EL7:>Xm(=#P(*D1JOk?ujTk:fOK.jZ>LZf6;t%29Oi
%]q2n&9B/Ok@1ou7fh"R;>q48Oal=L(GF']cY!H'VADLn;P>i<"6q`f9-+,1"51KReI>j=oGcH'peF[?BWA.O`1V9Hf*]0]8E=o/!
%mn"mkT'mm61K41YckHt[p2f"tNmK;/b]0%R2`"::h"*=9H`GZ(ju;8-bUNs6@\4r>>],U?CK64B@:l(]FiZTKj-0a#QR!!%AIi9W
%X"%-6@H`'(!,d.KJ!Oip8-G7C/1aX^RF[46ETIe?P]Bl-;C"F^E3CTV"*&>nNEeqR8-mhg+uO469Q%JeClu?3_E*$lD<fsp_Ln6K
%bY47RX!@@bT1U-J1t<S$s3bHA#@*mqb32Kge6n];F/s<`=BUq^aq3^G^7Vd^_-hjilk?]d8@*!$P)H-6!dIfb?"=A+1i:<T]l7"e
%I5R;OAu=XsZk'dGYF2V05D_pJV"3&pSK!\KD@b5(ri,ajN;FOg@QDb/=U/dA/=9*!$7f(#?KO7VfN=,_$5[e][BaG-/>R9,[M9s@
%`-$3uH9.QbR1_7:H(l4/KJZ!hV/a+A(8&1ViH3LLT)!+D$@B\5.kOGaBA,Z'%46Y.drNn.#A]_W:>TcL^(un3O;"E#E`e"+9G>=a
%dVZ[LX@qoB/U&4ap7.K(Psum?<`n\#K/-/cSD10'UOnEP^e4(Waq+*GR223J53OBB"J0GUZp$2Ic_F5G7Umc:'AaSMp1orV%[1>E
%s*?M+(fkqjT53In(c5993:*,uMoj4PGd-&!6$$Xjn$TD3Sj-I!h0KJ6!]k.N86i!=Ek*0([T;Y21)]>Q[L\U&(nuqWGquKu&(CI5
%.nHM[S.^0T/.FTj17@p#gCF%^[B-\"g-qlRl17"J@8OE\pB.6,ZU?-/I3@m7?Nlrj#mF,4I>2"pE#<)VpSI7$#`&)oY%No5Q1^)T
%?ENB`pXGkKA<D-^P^5_e(KjS?.?H9"L.`8UfZ5Q64Qi$.6]nI'ZOUbr+2F)K+8;m;bJ:cj=lt+h$`k6h2pO`&$lLGYi0poLEj!5p
%ZNd-b1MfTC+o.F%jUp!Zb+d+X`I<t\8_0,#O<G>c>Shaaa9X^Z8t'0V(R.6Yr1\%-bk\+r#21u<pIWpCGuPE^RM>itPLGi&i,W*f
%WBb\XT!)e<?=7;YhTSY=F5VEW'L1)_W+MnS<F'DI)7\$T'NBW1do\VXP+=V6=BW3k%@fuk=a*_?@!c$2Ms8jF6+;9gqdSUp4EG)"
%/T[QVL6sSKmNGSY>'/G+O)5N,A%G^SqT*NGecJ^0\CQN6MWQDt4tTO-9U)Pm>8Yp+D0oA4asL8S3&,_7Xq9,`[CPSJ/.GbUOti\Z
%k.G$4AfGK58>cc>MBuKb!U>cjJu#sj?e9G)4Zi=X>XEG#[*7t@KsffbbCo2&,EaWWO)\NnTt2/nVH6e%W?Q*GlKM`FA2^JOaf02.
%5A`Qq<B)mZSW5S%b9.[>0@d%+QcsH9Zf##/[5H^b16lk()47FP\KU3A:PAm=6PKX82?U6@U<bUHc=Lg_<49$U@Gf@&ZY*48J-Fn*
%Gs9E#Rouh4K-#naYq*+1;HfWFQ[(coa>-2RFuXFE4LoUQPn<ViGj-]O851h=f/a"oc_\gtRCR5t&=jQN6(M9cAl\O#Bm=;Mf)F*6
%g\-ZYkm^YKlSHam+m[oIH,]5>CJ(nU@To1r):+Y[]:)_X]c$KNRZ+Yd*fu/gobj^L3"L70gs*75d:=2iWnqhoUS<0LFXNKHc^:]8
%<r1+U4.dHM0Tgd_r'h-)T0[XZ,Rs+9?]r?%A'L[UQTn1X=GBOH(VPQC,rA=9[U,l77sUs'Wb6[HmtT^=[H_eY=+/c.@pM]-US;mH
%n;ui->:Q$EWJ:`W!2e3+i;c[/<9_4C>B)i;$,3CpK=Ve!=;pp+<5S?KfNsc5kA<EuAg,tW.`5Eu*,`mKeB%tMiY^V;)bNoOXB@;9
%@lEs>>7m7UFuCh1<e5ZZGleA[H9Nj*=Ds.FWK+*m0\+0Ck.ng;(R!6]+Q]R=ZCKIoEh;+8'UJ*q6*>jo<*:P\bTKQXHl@4n_J)[l
%DbHD0-4nHNDBG#)=n5#,"<J$,CXt>XFPnV8F\A=5ep;_*I)'m(r*oS^Ke->L<`!\Z,`d>\2DNJ(Hp<:I\/=(jFj0!Xb5tfaGLiOg
%X3A0SR?fgA8Vu0EX&!=-;20]NqGq@+VUZAp.bc,)CECb(8d*o2C"a@o>^O>O.7E.;_;$t[c"gZ#Fm_(=+`!LYGd^[RJ$>`;.\Ef0
%Jg=%AQdRrRqq3:]U=/c%4ctDSD.?UWI26;:Ak8N<s#`a<M;N_Uf-MD<&B<Fe<\_;+WFJh16WnD(1TSjC3mVr6a"0kg/bPj<bd=NC
%5OrZ_TSJt*r.[@Xj<7/h$aTDdVj&6*'fM2>$$eY8`+9j`?UU.$3in;/ZuU8#];;.KlYQd<lCR\W/,fD!%q"RP=__`?3/*Yj=/qT1
%).AA>M@in62+?,rC;3L*[TQpN7XOa4Q7>M][UnM[B(;Cend_r_]<O!U1X"?F.^#hIB74*t[>0b;48-gs;Ns;`Bd@5harT4acB(3"
%H2GG9&p`R06;pm:=lKW\38hCG-kAl2^!)Q1Qkq>^b<kK5kJOADl9ZRd:#R4)!D6ZZB>'L<h5L=^M1*rh.C6+5Q)R+*.m8;?2T!B9
%<LVd[QJ!Mj2i,u:P'!!@cD7I]fC_hdY><\adQQ%:A3.c3QaF%lQ\hCPjBDP/&^G\djIS3AUG;;S!,7aY6@$=AEB[@.BT?=LEqJ$s
%\Z[n!<D"^6R_2%[Ss=+(Y@=/>Bu?5"_lB$%.gu'PG=:'N^-9l3j+dSS0a"j%4?hO7h7PMCZJGBAiV>3OY,C4WndKFX@,JQ^CB%nR
%4C,Zm:\u73m(:6eou/_4B7UBHT($M&8(XdVATBLiqYSD1S*"I.]kB#7q=h3kFuS8rC#7.m/RC*VYF>(E<V)iZ"M>8OolZYH/=q9a
%>]Y:5FO_@<?SnsJR\CsX5L7Xkc'C,G(U$br([j!mNN!25RU<0lIVsUNg'MpqLELM]e3ErGME\^9U@pLFe[D1n/;1ZG<)*A[BQ\?8
%761"9]tG^.f'GAm,ocj)AK79`/b*jZURc>cX4@,22j.NREN],`Ap6T?7WFoUCMEf5S(Gh`F0WAK3Li">V^LYcX(?@`S0'-<=gNI`
%I()R-C3F=heu=#J-`>#^Ds&VZcMomf?G9UUr9EqHqXSAY^KRdHi_>GWo@7EYq"a,jZhs=DajoYHebcD$&?&cV9u^FW[mV59m0OTX
%8p![%Q*#FD)bPjf4*jCGco%_Zo/B`hS'V*,oBI^"_[h[7Ko!iHS,)So:3iaPs*aFOXu-G?rFgKHT#Y:Od?LpbaiXA/@eFVfRd/4i
%Y`&M[dt0&hFP4<0>kRp+46PM"nJ,/MQ[&Wu'`B,l&9AmSPY$IN1d?;u3*s6Z3Ee9>U_s,']`g0&s3o(Eou0.bPLk`AbJcs8hf00C
%07EB^ioo&Cs(l#4S0or:>6OG&Vr3q'f'^9oCm%I")Z>0"puu7Jn`]JbOD3!2Y)UCn6n1[k0hiX+pmVWBd;dO3NgaJu`H.]AY&.Fu
%=;;b^=\Dn#IUG<-Bo*NDAJt9t=O3$VBO.Fd?/oa79G\YO$ti(.kImd&g;\?860)t6J1?;Hl<N?o?;I>7hr9d8,GQ3(ii"Rt2pOr?
%3\%US$l+i7;c,lZOLDS@JQ>aXeGc5k'>th[Vp!8;FH<_,<N78>`s#'L)APs+>Dh3i`p8Yc7lo$rH(%@pNkQq\^@<UB:j8.]HHrni
%gIcfiF%u>%NcQ5kP^;,1`K*.S:5d7nmAWnOD1%T5;uOCD&4K%*_kGM':pV?7Ue4MATGr`<3`+:ICrgXo;5)-@E2;1g+cNp"Dfe^o
%nJ)LuU<4m!N[C(.\'\Gn%RuPYGNiK&T;+]UrA/H\l]]fH%2Mq//;X&4>j%rEnM6d#On$fG1k8o"&@H$]=FdtPdh):Tg.-RK%b1+f
%4J6C4E)G^D3m(,0l[geZD53Ff<./N\W<<=O@tZj&E@+2LDF@@Obp\u@/kB7r((lqYWA!a7H:KoaTo$#bcng=pGI@PL+hN7J_4W5r
%VMnR!lsVn-e"RFBcqW$fV.A'eKIiXN@&>%fU3fZ4r]ImkR-=2tJU!nHB*_BKWKJ$ed$"$!HTLR!99kLTUsq'F10_]8]tOf8q&4WR
%BnCFGjZjtgOg:m)`#'\s.Cln83pLWNWl%)DWQQi8K2nGDeL_/]V=n%A%,Xf_Gsjs%.;$as@3D=7qU(Ch"j4SQ>/e"Q<>61k>(nHk
%"*#?$?BS"q'sC`O3Kc6mI+<6XI*3[J!gV[P.6bZIV8-HT=3uMig8mioH%e^WrWYU?7&%Pk64>T7$W`JmoH>YJPXXuY[nRKr+KJl7
%;lYrioIhQ)W0pp7N_kBiF.uEgBM6.aJ=cIEHOp*0lhj%+F4=t:=gWai%8+M?;*gmkO\6U2"9GEnj)k?39#Wm))m5RqSJCjR_IJ.i
%TnQsnaKt$)jr9FQN&pfr[%tN"Y=@0)FT?OobmFfp!o6U_)CNF]TFno5EQpeL-OV/pOa9BY-8Shi7Z[sCB59nN+fm:hX2\r[q*clk
%]<p*D9S#&,e@6\S`8=m!+\2]OLrYW"2'Jc5O>if*Y,MabJk"r@DN#mi:n'cr*<:MDTr)Y"UFE/UT$s&;M$l0r<`EGb.Om!RN)Iuc
%C^0#L@\3Xd6l`4o(KkqZ(,jE*$D5`l$;dk@/sr%GD@?.+%S@@UTP/j28tb$QPe``M.]cMm/`,GdOB[k]ap-a,Ah4FDKEMhl;@5n)
%!$Z5MUr!"a3Zgu1[dj]eNk#k@8!:mL/jU*W,'MJ[EeYK4'S-lc5i&]J#\^_M&NIRaQKM1")0S7]e7"6l"/dJ,;9qf6mNFr8?&!S.
%$]HZhB"gGD'P=?(cqVl8)KS@^R0GPV/^FUU/)[AW$\LaE.)lN2Z\aaeKA9UlFY*,,H@uDV)IYgEOA3UA5a=l1.;CZ+N:O;PjP!]#
%)lbM_?:j+`I+1O(-rBmJQgmj$4F6-IcC4$KVU>HHI(Ba98<Gs_*;OYDWnNKnEF:EjY&G6n`pf30G)+!L2=XgdTL0-G#,Vl=CeQ*:
%8YP9%QXl<fZjSic*<u2Qhh%4,7+WWk+Vm"CAg/i4!&ed"/@?&C`<h.7J@^aaUhsBD;O/0^dsf7(_)6[OB%Fi5B>X!@)J32_HA.O9
%XMVch)R1H0dB[$H0Ogp,17)M9DAgQ)FK"*4G*^[J[4Id1%Els\P?'&0N=hN`L22=%`*N^pN(b-JF?OG-d]1->P&ZFi/<ghc!Jj\t
%1^?Uu+UX8R,r1Y+J.*\m$J$uY/,j.O@lUD)-"t^&_J4s1cXK'^%M=&@;KW0=3M_8<_[HWU:7r0^P,/9]!pH(B9Ipt^V+IpDH5W-g
%4@pGD=Xp?Jn-k)>of;R9).r$Hg'N!/H4<S&1,?GIU?XEC:mDJ86RQ`,m\)8,en?;c.No$"0o=l!"\IcA[P(=tMN^L1l9Q[agV<sM
%"nYI>#kV#V<%W7n`J(99]r]jIn3$=Og$iiPAgSo;71?"9@[KSqnkd0/qW3PLePCU4G>l?FXYW0q_2e(qYO^3'=iM#-F`f02l<qZK
%=GM(,fQiuk*DX0$[<`&seVdZh.Mkg^"bJaI'*l?Q2@SD&S8)dC+j')R<L^*lc"S0F6F'@OgZ]u..RC1^*oe)[3(:AfOi4Hh^#>Ug
%\2tfp#U4%R!ZYt.:5.%k1T>eg`54ejQq!1,"mF<l!qDZWM,A,Hb5f^W0k$6>lsrS<*p]KGjj4S<(6\m;TX\j+BN%a68@r>'#r2WA
%opB)$ADaZH_on8F]uVJIJ?T_qX^lYW"D("#4<tH+6`^rgke7cpm4a+O>K&^E>J]<dcCme%Jnu!b,JJFmDE4ZRbb.F8Jeh%AZmAs9
%6,&SN;5Et<_`O9J"gm3LV80Y^K;#]#-c:U/Ut9cN[ZptX@($3\`CqfTf"'LK4DQO(=d"aGD#e5d^H*Ko(;n"X"H@*J<WQ*2RjH\2
%1GD94(m#.jg=1M>5U-]QQ;^o5=W0gJ,T:8&qn@^6:Op4fY/FSr$LYt,QCp9t"^iN6:!fD`r=OuS`WN@Ga\appD+CFfpQ1=CjG+Y*
%iQ`^i"s1E?N:Sc4VD0n/F"q_j6aVOj@[@q+@o"$.fQ%M?AH:4""]%XsDg7R]i*:8<Z'(i)U@JUtKLRd4NP:7'+_&JXJ7ciMQ&H\$
%;)Z:!Dee]T,uuL-BI2:8-m#I)fV\)h7Fas]LbCG6^sJ*N#"Pp4<PsnuU[t2(PqIe#gapMN`YF!D!oFPoGM$?2AV-S3N"H'B#J>Tp
%Rq.>a6?;);d(salNl5)?K)qk\-=lUq.)m@TbJ<2#IR%N005dWm"G:Ng)8'FQcS`<2]]V4=T.t;/#j=Y&$(Ot@&F<@+_J'%cJ8`F"
%ji-$'g9P>NmKW<]YkKIh.1[csE0iO"-m&dI5nK%r!$7oR:R`I20G.j=6`AqX'@6_3o\=Xo]UMd61%QTZ-'9oB5Uh?I1oO#u(cM[H
%2t/F*K;#SiO22r9l!+(**!@=<YD:q!5lUn;W1;4lc@siifELdm_0/'Tl6N`U)q&O6HY4R5+ddcKL+;o],a!(4m!/gn$ah"M0Pd#q
%_mX\Y-binf#F.uj#f9/hRDgtD'<;CN(4\>J+N4"kneXb$!o%,q<g69&('Z"MAs2%KKg$W?+DiP1(`li8[::1iMa,iC#&5F)peo3W
%!q)5?B26*pqWg$Z^?N]op)[(mE$p%t,_Pk)[m!,tESrj')+hcI"MNjKk@N<Y%*7\fK_`$;-nC;ZfU#KeM3/BGmU!WV$3GfFoE=G'
%DF%,a6k8REf$#Tl.rc)WB+e4"USL?g`LO&l^iQ5aZ],LGfEHgk4>h\$i?_K,MaPIl4;$O,9K\Gg0!J(P2diqAmgVlI);tcb]TiX#
%I-Y;L[>69C$(`<dVP!IMNS$,h'HT47bc'"]:13NKF>3cCi\Zko$8/@l88Q7aM^KJq1Vcd6q?'`4GsM_h:g$[EZor.i`KGD\QYL@H
%G>A&7]*GrB2qcIJlt1q,U9IkGb;9L@b%\i]j!8?X".#UC`=Upa0*U7WDH9:or0q.\RI!<2lrO`,akpf$W)\]1Ht#%lZ^XbWQ?We+
%.C5L:lt-mBR;M:+g;7aHV.@0SDHb];$G2_CDSgnM[pV.!fW@g5#!a>JPGU[cmT(X_40r/3mbK]7mTB"a+p]mLZ>[PM!:M>P;;f//
%Ghb?g]K@0&4%]qH!;$jGCG8*i_#@(qo'Bpu9,LNV@ZcTDjH);^NckCeFqdi4YCatKK]tk1_ibXR#,5%?CaR"3K5Z.XLJlNj^gNM'
%E4&p\K_1M2.7t4L'/Tob&1p&W6^-)]V?rG:!5u"&Q%f(G6u(ESdqhJA@.9R#>jAX*eIcbrg+53d5!jU'q:MoT)(,a>0NO>&]&Ji'
%g<,5[ZD+4$>;0^1+o$%]kfM%45^Lp%6'*Z<o:i;DiZR*7^uju*9UlcEel*9WW:3r8,Stk0#XYj!bS/WgU0J\ABo7474t.pE]bDA6
%:PZMTOI5+&UfpO697"J%E5cq3i+S9X;!@EH>'>c+q8u=P_[dO%_RF?e@*HSUA%9]!<hYi])cgoSl0.r4d:?G30np,XA<mue`8tY8
%CmkJf>C".p=M+^^&qM9:rP6<0/ZE.\YlT`>!:PUM^>W'j1Ac94l7I\CD"X,[_@mr6Q]6An.m*"6,mYHB#jcK)0:f\4Qh=dT#Boan
%OLkld,D_*kZu'!(o!oFMG(uR*n:sG8"HuT6YKi<V_gVWR)%PebL]S,60D`Lcl,;1fKU[MH\8PbO1-S^K'+mp/k[fn)>NEW/]YH1r
%[YB51;#Kgd8Q#tkQ5)'QAB=?d0*6/]&E7")SaHUN/-HFdR/'j6ku)^03!8+c`R6&\[Ac4i4U,jO$kq\PFXMcSb\7Df/Gum1JH>J"
%q#1@g/+j7""Brla9.aELZ#\W.k^$#\?SX6>O?(q/k<`#c=,0^7pr$T^@UF`(31K92"nmZdY\Y(ubgJCp:19ZFSV^QqQrBDCBsA1\
%#K@AAoItauQ>*94#FE)fUY2CeGVkh[OCHE)AXBH[Q.\;7ieFX1Z%#%RU(UNa/9<?TH1p\HnTpV>*9c$a@d>cU+)bJ9rMLLJq.(BT
%HPlI%Ybg`5f1Tb>V6."q_6+<boXl6bX5*(&MEL(.lig^p_B:P$_N#11+64P8:a#*WLKKAD_'Es<\LcTj1'kNA!o=''Pmcr_1A=ds
%L^IV3&$U`ui]"]bI;J]u.%6&+A8XqB_Sh(0WO):Q@RO\Q3ab3a/3@"C[_/D-h3BpmLfYJC18#kAVhHNNCU.2?g3$q:[>,Ou3l<Qt
%?4ap/(0st$G_q2d)=Bb7s7(L_IR)(/'8`9LHITG#medbWp/j>H&C5SNKdT-D[jDCiO/U:$L*'plUbgu(_Lb1rmQR#pJq8.n2!ddW
%)9%pr?N:.*U(nLR=\N!\![iP$R"#t,!)t\9@OKcfP1Eh+@L(3f!/YGOq-kHk_:'*_9eBbb@CRmQ#S&X3;ETd9cA;EPciutC:Y85S
%pp($tW`[DV#J\La@=ElP>0D]3bfcNF(P$[FedX]WeXPElRJa9m]U#WFfu]Fh)1#;>5ku[%Bg0E;M`!'\eGtsk$S%Q>H0npc4fm1;
%?N_j#8]E;35&>nVBhK%Z@?NJdCmCmoe2/+JfcS]*i/Ze3VpijZlO->eY1VoPR9KYO^d"oe]&_=\*5hsg+O@+/U1JV<*@r9U?<ncp
%QBEZ:jMk]Y!;!QJ??"_cKd@i3_@gc]BE37aO`_aCI\\041B^r;Ctur]O#6]=r-^?Gb3Rh!!(MpM"QQ^(aZ)\WI+5Y)*l>Imdg>?p
%$2oS[H$+kSg558XaP7O<j;!Nj+p;i).Zd_T,;A2$fQ*,@-1#:7Nn<Hm<Cq$KnS2$X]F<r,Cnq&rV5IHLZ/B,E@AEE<\n2;BXNlo/
%B;?LC5_?Z8Co;_l$jU(,GHmj&H%cB*]L(J##2RD80?3ARK)N^L'mTRGMcs4mQU-A6Dn+aWJ:P:#dRi12PPq-?Fp3_*'WBY=5:2LY
%?X^DS[PhSX%c<3W]TD&$%osH.AAO$K+f)n36o[R'Sb<..#kS>a3\T$jlqQXO,6JmK0Fth;=`UVZ&k3g@KeFAuPqTRCk*^Sch8TpS
%LB#p_'EoTKN[OAP>F3p9UOXI\O0Eb7UV!l`f*D\U),'pY":7*iIfW9O+\h</=ZN\fmMOTdfH_Oh,MiVdFYGYgo9W!$67oAiUS$0?
%&1\5_;RV3k/Z:&A'i4n7hQ`nL!U<">gJhn+Y"l>+AhUmIi]"=-Gi%)-4`9'D!X$8*][_p_94#S,!@W`4%uT8/9-Ej/W!p%d%=c$N
%/Tr=)iWRrn!%+>"[drqm'uk$pl\@#enZMDZ&[ApH>!$"#iHX6I>!8(g&o;(5;*84LZHe-kUTS/3@*25M"G=3ZGRpF5otDYj4_sTK
%UV`BuAH/cJ9/:5M"f=")lQMc90-?&9D"DN\c_chVSX-odlm%i3(#H+<G!R%Qa?`;M0GM>5C"Hf.Eu+)9Cl.^h`&&-L*6cTm+qpBP
%mi`_kMoW+:\<Dp:n@1Pd&onD^M+c;u-,:hbCsQ<g=@*Z4Am#,^ia0dnKa;D?\#'K]B`j&5Y<Yt*6f=-"9(BW?E1W1aA:."*"+YG?
%b*o?/#p>h\P@2S<>_R"=!.5!k4.RSa4?o"Z`3aFBH%V\>`:,`3@E&q9@5`[E:c6\T?,sh)#gUOeBqNp7TFq.fj=@F1n_Q@\AIqK"
%3@IN8*2*n;qbR*O\Ar:&NR9RF!5*]u+XcSoi59(+#KBc7\;[Z[!&qo[D!]ZW6EZR>=up5U-&bos\_oCYA$Y,(/KK1]Z=0=@6I;G>
%OGORM3`sJAqQ]07Z"^r\jNMTii&B)s.?`qQ*S+?2"Br'8)qML'ann"XTBh<0(JIo_Rk.o)mE<>o=(>@$Gunq@$/Y4U/M7jrfbUpl
%M-Hioq`s_u6uE'<1Mm;Ub0C;D?)-A-(5jS@2$hJprN'g5jV<W<m9@f2OF"pdBl-Sfb.@Mgm%^j?EA4LZG&\)#C%4at%m)2l^="X[
%2R8>W`VZKq(G%!M"q4h(=kPB.[dn1)*SZNf5YXF*7Yn^p8Fr.E[*qS-'bap(p%"Z>C_=mWV\[dO.OVQPPW&W14(?l^TM%Y;WC-Ac
%2WD`FR*PiNegYq[?m\,X-]aaaVO6GLY\WiB=<LAQeu4tki]kG+gglegp$>,f^s`_4?^E<4`D`)4UD5kp@@OJ)QBjZoOFVrp9dah$
%W0Npd78,iA]N2EB"W`kUM\WiK3a8>_@?r/SV=T^s37a@BV`iK7MDpjg7a&4g2\"<Tne*hq_11<qi_ik3-D.kZa*X<<lYJ4&Z%fY#
%$n!en'a+m+2Bd>oUPOMc,nba5jD_K-ZG[L#0-W)<(R^2e!c:#]'\A)`2&m<:@IJ"I9Tm9Ld[''8XpFq@-J=fmI/t)f8n,i0:+d`p
%LQe&M(j=ZXh&L6B$OuPTkla*jM8q'YpqdCf,".eV!5MUc(X-?&ifK]fAP4=fRSA,5NSrkM8P7`Ubt5Ni&dP9lq^QPLOkEjgA,hS!
%l$/,3.slB5G_4E,aA0!)"ZB,r<eN'nRdhn:L,ViCM@l\8]p2W!d`^Qf:hoBTbd2MaHS4q6bsi:m#-d3"/d%UXKuQ:\-#<?8Rr(_'
%_+N[h[JZT.'mYfl9<;uZXi%"92H/;9Y>+3<S[ro/J\g)rr4:s+D]&Hj3_ZE.=&lJS`7m2`4'Q$^,q2,ZIQ\@J+PnQ,Bb3.uTbdUj
%fUPZOG^*fHGBuCeaXB[)a])$4j>BC$?FQ`q)NL:cl(!W<PegQZ>7rqQMPB6$-7?)kC8eV-74c<<F#$g[Fcq]-L3FTYclEf\-hAXP
%:&UcpQ=_(rS<CFrk"!YbD3K1VVX:VRkrR=W@cqh<3F1L8R^T#0UdI"F))aFse_E`23H$+t8E^tPSe@3,alCW<R/q_4)stOh0uqT(
%W&nG^8jub.KOIM71shTg,l!]FfJW4h=\r>t=>q3YVs9]m@K5mZ:!7JAConr97WELLBhlXj`&d^$[\i[+a3Q2mkb+*4;qmcGDY@WM
%Hl3$X23#gT>LFtgOtm06Lg9Z@ncI.GK]n[tKT8#Hojqgb#5rCq^mUmP%iH?O6:8'oYbU8:T<7A)RA%\4WQ*GU0YIQ-;.Q&1-::R`
%_C*h:=YUbZ4^cpe<#XO\EHA-4Vb2m>]_&T`*P+"j&Z9=mE@'pcR6%dPidORr>r6PM$bb01o]XsU'KS7@EuQ`t([7"e*,#>+IR:=)
%;]ke%#^W'PM>.[(i9l)"0<Z.Xo_`es-J%USebn5))f_n`YND10h:JPtRL=dpr(:X\e'jM=bEGS6h=:EfS&Hk*dIZ1hPL\(Rg$@,+
%cat!Oe^`F9p#Z,LGk\hFq.b2hqr[b9Pk.(E]Y<+uq@F#lOuEZ2+,<oFDr+fc+usE;+cfr8'D6+,\mg-aG'@rG?WSVQa,AcSebjZ3
%2IHER1:pdA<"^i#]>r*qe&CG1$2huYs)rdq=Aau0S)$a&1E9_/GNC*0U\D!YG@.J<Ip\_\R]gu1d;FuZMrOt=Su^o'MmJUg)AKj(
%Z?s01F)j*%4^VO_^3tM$G&b7.U.Os>R^P344e!Oe=t;Urj5T_-P#>UnmU#k!]Y(+:4'A_0YMQDtMt1Y4FFCRL4hJ]P_(O2sEPMb@
%G-j6+M0r&Y/^O;.<2$YojjE`Mf-j*Nr/^1>MUEXBG(09kb"0HDCaRi+1)j%j;^l]iNTO4:G?S0770@_2LV*G_$G2(`I.r^9j7J9[
%q-ckhQ,NMkMYO3/o2UWgGkH7ScWhT(o<fk==qZ3g-2:[/oQ<`LG("[ZEcLr)pZp"$nAP(36/P>pn#OCaQW3u3%putTY)$9tX#&bf
%=/VCsF")@*gG?$2c_]iNa^i]Q0jj8gjmH5AnqH/=kS$lqMj!Kr@\$&kPH'G&&naMdE@qDI-2KCKBiu`aVC3bHn]ABV&>V+b-0_h%
%F?QSKF\212*a`o"][,YOT=d-o:#asC]R4^EICApFq(ja'I0`QuAR@8I2pZm)Ebrs\]:8?!S/*>NrP&&6ca"TB3qL>UHLZU5hV\cY
%\IpQp<o;8#>d8DLR<53=p<Mt@Ip?F/E4jG.hk-OecPFRGRm_#@kKc?F7YUDNp5W:$rnl$cRE]?!Z\-s1Ci;5&FgF%81I#q:4#8ZU
%;mZ1:G'J7VE4CD-G;qbP%c^tWoS;k]*h#HEW".R7ftlX`_86,ehSJiW4,D3H3=#lh^`D&0F.a$X:*nXZgcsHKhr!1\mW\PJ5OA8q
%[r;#c^>;rgmG;[JE:71QIrB7D]%?>g]s-\ogn*=XH[8KT[Eh%)cDHBGKB`AWD`XG4dl7e85BTmd2,cY<e$b`gLYY8*hsGR8Y3TO5
%3o@KnG%B`YWb^WG*l`iB+8=bOFtpkI++87Y7P[O[TsucaLZ'BBLV5Af?kPg45.Fu&RBD+"7mHU#rkS""4[8V1O$7gWS[Y2&GHX-Z
%dEUI?4)k(7cV7^.U'o7.kK(_fRP8)aBD0[nfR:AEVm`qZ"u<V-JRh.1NZq\OAe*(:ff+7i8eu1&`Ck->Z"1jg6dqHpksKllp[t,L
%l;$@>=\fgIeOJ"%Y$3b^L[%.lX$&=?*>uUXH0*+\1,Ot@7<NE\3*R;_G-@`;CT6!hDlIJ'A`!"FR9rjfk0oZD1:O]D@Xq10p)S/0
%bDNZN$&7N5rUW@ke%LCPXMj@k<I7?_hE*g.1Ho0Bbg16Lp!rq<gkrcAYNO*$cM:Q5"Yon8J(6$q5=PVE?YSU#8uDDkNH+Sb^Kpa*
%T/XB0OOJ]S`8@,U?(<N>lF-Ll)Vj4&rPKV>D_jE2g\o#(Pk+-'If0Y.r^O8e)Vb1hq=3@sk4ffWq\D=_)3M;nIP[l+21KlE8[EcJ
%G`;\^ME7JHdYI_^RlS:gW(Rj(c)^N[rM$pT3M.Dm+^Op6\U6a[q)<YK@nN$T2o<lIADD$$2nMu9IO(hj<ZZ_arp82+'NtAVR800P
%;a7.4q!sp'CY%Cdl\hsl?SACLHpUg(c2?jDZZf#\nFH/tdEo;Qomi^-nbj4Fn'Vl'n#u8dTAr`Xou$`kdIu?Bo95*Y5?pF)=Qa%`
%91;q6QZ&?0bN7u]Z5<<2Ig_=u!j:k3r8hg=T9`a=CsV+>.Roi<1kBo4p?I.3bho8Nqf=MmBHFp5HZF4,c2T)$W(Y*MTi_$Aqq1%Y
%>e]rN,FMS?YO0S5rd1Z.qo?`7iqCmrY:Af+jm&q0a+H\QA'OU0V`\66i8*5#r!p9aBXjACNV2kE<Jh[jR('O/Jj9N"RFBE)f-aXX
%dZj^lfu<NNN;)etc7]s4<\2ogP_&ja"uXHq976XjI(WqV^IqYR:?SZHhimsoQ$64YWp-'VLt2+=jk4$8r_hA<5P$k46FK+kN@f%r
%q.U$p=HYO.==9Yrq/SD-!&X3:jQPl>Gs5TK:P9hho_d%Yj+[F-m(XO<kQFu*IGK;Eo,1]ha,:sc!7H?,%.i`,m1J4":TnhuY1`c2
%$6D=M+b/`2RD(WeEa(EH(0C*;C;I)N$h_oTGXod;r"T7?`RX(FWQF2!aD]lVJ*:A_]d<8t[5cL;eiC=!8fE,#nquf'b7sa_.Eu%k
%^:9[8O@*W/LU"Q`gX[j7A9Y!>BE-TZjiaFbbH'aX+)Zm?='bh9_igLpD0Yj'([peE:7Q+r\6Ffer3nb.lGrK#o`OaTT=K/0fPt$+
%U^67jp06@?D(K_=4Sns7p^R`r?_60)+2<.IF!D`t2t!G"*kshn]uS^8iUZY;^[GubH$XN'^XlH-/c'@1]fK?`!Pq"[`i[G&LMNpf
%`-#p5G/%>,:EQ&OCfcSa5MW9k9j6m'IuLLU^V*WplM$'<k.I-NCrC[Z9hT?Uf"AI"XG226IGX9](T`+NmE:LAf"bA1/&J%,(U($V
%?Ce=^rB\hHG5%<Ga4A8TG!)q<RjPZF?)I$sGLlW`RSc(=6m`pL6^ReBIap=Ie^^_^I!+3a/Ph_67Q%4JnNIf_c"^,@ote_QqXMM@
%>eE)"Y3PMmW-'+E)#;_ES@oeYNTh#5C,J5j]U6lCOZ0>)j6#pn+$$5WM`tTVbV'_^H?sa_3l`qN3-[#-.7(oKqYCO8M0qD*<frSq
%E6RJ!`T?[_\k8cRM>jllI/BT_)r+k#/#[$i@3N,Hpu5hihM1jjalPSNCju3S6o.8u?d+Q];dfH%1VLM+QKj`A7MAZYWj[2$$6St%
%p!AR@m^uaD?.$a+R\.mOO1'/o+O0KRMYFYd/UkFFA(8[Pm-32:d9>n3dut.XHam1,DQnb+H2aK_(TYO:@eFWd/Di$[([uP?1.OKL
%Zs4V)Njjs=ZhrqIeaU,Lq<*.YkLc;pF01apm!I$gDe)ZrQ`bU8Z!FHG6n#1K4eKL0r\0U<Eq9VeNpOa>/A-[rQ`6UlHM5Hn[?EUr
%ZWgSl`.!R+k=G\]D4;9Ss6>,<HqP5..>pD]hnGmK./rCXP?q_sQIh=Mq!$HZf?`lmh!DL%2et?,I*T!<'-43@GKdqB[<Ujd'9s"?
%'6okHRom<CdSl*m@)ml3(6OGW:"j:UjMR4I;A7<Y\X*pbL#:fE'BQJ:Ys`BP`3_LiTk%.OFbtfS.TWi)Q/?98rj,D7HhREE%uq97
%&>rm8QT#>pg,/ic?iKik`S6U"_pcT.jc9@c48%n"lLYR(Ukc%gIhAgT6.g8P\()K1O86K5j[Yco-G'^e-Q_`[(A"TGn_X/H87c8:
%j%u)@k,2jn-'%L&b%I>*5Q&i3ZjQ&YB-`ok97.>2.f+`DAJ0#b&[c@B&boC`=;Hc=gGMWB:CMf-SF9%4S=C*]&**d"KjW-r,3+).
%mmRcJS9dM%?6PVLQ(1Is2d:N&D4sI:0kuV:QeUu'/[WX:lagD,\1H[.W-q\K[S,>K:^B9"D,H*GTsM0U3@Q=jTJ%utpt`Q`/P7jb
%Ps`ir&F/fnYuIdb<3![[_L$#*1MVhF><KLPIMZj0]h,NZL8$89E(S&*d70I]N%Togp(RjIQet#&Zs["S91C=a[6Q1E:ujM5A3Q5k
%<[AD(k>V^eEJ7FCPr%\U^<sZAl3]W<MG[G;]%h`N?""l4N7&lH8QV93,Wd7bD4;LXhO,XTKgHEAKt#EN`tI6AUcM?SI<h6$`,Amk
%iupqaaW46!.YPOGSsCnWB9Xp\ftMgu$9.7-;-,lkgjU>N5r3N(a#[82!^`j?[N\$D>J:@g:Z4I5TBLW*63AMYSH2),:KP'COJ*5*
%92Zi@B/AXCF>kTN5>*SKb.a_l%D&HXn=t"@Q,BB?m@fc^%B;^VH*;3^;'9kaSI2[p!S!-.`\UIpP1P4_3%//lhm&=nL+(o99<o,:
%+ma_8K1]1e9e=TXl:]>83Dj]]ZJP8mfM,>#=?39GW6-Wt;QGsVWVK!c=\Z9JMl"(CaY,9TAeK(S7aQ-aEO$]M^Hd:^Gk^Qg(Z01F
%20e#`F<\K$d)at45Q$RTT58ePR6#-3ioJA^]jn%-e>=%c3Tj&Gq?$\'r.?GC&+=(YZ1<\9BDKg<5G#U(Gl-=iX37OsRQcZHYoC(4
%`ACTWLZb2P^[^JoT]e[hp$@kap<jn[c&;P7<%KH4?m^0ha5"HH-iA<D^IaJF<8Y/Yq[Y]+qo'M"p>V=98,W23ZVNd^q;b&Y2YuEG
%m\L_La(cdfk_gO]OtXP8PrVjHbcS.MC(B\,%VZu6*skVaX^((Q#M]Qi7Y>EH=+"-pf#5p=iZ?X$=?(%'X\O8S_*OM:1gFB)/Oe+e
%IN8"5n^"tKbM#%%fr"P8D'N'ql3J&l^PLBUXhE.77E4lX.InV)W[G&&WH%<=Nqdup@\UP^"uiI!Tkh&BdK/cp=@ou^KF]9p`5rpj
%Vc7u:-Y@5DB9c]VQWWJuD;E/#*SMeXZ>C2UA5t%#M1o%]<jF3?he;$ceYI&LFHI<sa/C>J7BE>(iN)nR<u"9n4]N,=Y#Q+646hD-
%pMKO8BkZ!:%UuSpWXrs;.9UO7hBnFIF;#Vg*l3o&8bJRoU^ih17tV\9:T[l`$<0^S"::m4o'u*u3l&@0,Xhraic1N[U'u#2r;J9G
%>.UJl;B72p#X]V7PtVUDCDEFZ8^1^jrQL!e;^ZI^WW\SVHP0N;B9J+SFd(H%>*ar8;Me+DbgP$SPpNXfYnC$G'r.`B(d*jFLC/q2
%PcDNjR-Ramb#R>8+ntR#)RijU<omP'5#P4,eA$OgDR+WW"!"o`A[Z2=g!P=r8-=`K[iR-"hnt%Lh`>qAq6293H3PoMUm_=BWiN&%
%?N4%%\CXU4Lr1*L;_-Nmi7jbcH4G<Z=p]&Xl]et@8XsWB<g4-4>YC8l#fbF/BV.RR2?YW7Xq%Ytb)O>%J)3K=/rng?PTD^L6YkDH
%09:T(p$M4ED`:qS2`e8sWCZJ^4Tq9Y9b`W#mnoPTDM5Q#J6ekupob5:9Is<],uI:9!%4c$M$ggL+AE+TO0ceu<^!9/Yp\[koi[R&
%DmXL7j@$k@M[2N[Eh4g70(gkT%Y##IksfgjOQnOi`Ma(b*V-j304M3Aj$FgU\qtFPa^tN3ER@cSgR<tC3%s(WcJDApY^K$>Wt,Qb
%#\*1BdTF"\Z5Z%9bS8WG6jtDCd6-[*(,rkdS-kr>Y:&IIof;-6Dmkb8@Sb"0!o1AXG!Ud6`h&"b%J1n4K';uAoh65[4;2ir;:*.-
%<nQ?Wn_F5V`(Wa<U=QB&Ldb1mKhu>\."eC0@]ih*<Nc73)n/TKJI9ihC'+:$&%B9nI'@JL6LtY+47%N=]O(,rIu6%:$0.9?i)@Y*
%hYY7R%,38[o!hK$ZB@r6&Wp.4(ngF?U(`Sl&UY!#_tPNm,.-iPO?*`XqjmW65uV<`$>Ck/=/$C_#601KP&Xc"cM%(BeFt\fj634b
%Gd60%Eg6PN@QReK#IWYe:o\ZC>20Cr@AC;,oC'hTc(o1=Q9:&DSB@g4;R)&7<p$^).r+`POn?9B:6J.Z#rUmCm,YSJC^3D)j1P6@
%]cHk'cLKT6J,;Ybq7d.ontV@q;"*E$?FHVHHs4V4P@egIbC`cP%;\stQIHs6+t->7(B1m!;6WlL+pCC>BbS`Z7?,9:N\je7DoG.U
%d](;Lj3lpM'g]?%Fl!P9*t^*A6eRV;L's6<Db59t:c+(,K8VfE-B(:kkQ-f#HK(G5DDO'a]>\$_"iLthELj+QF7kdO[9n`$"e]C+
%<XDBTojWNqCB>ecbIb_[PuXO-,o0sh=NRRBI\VnW@?PL7D.2bs8+'a[gFq84om>Vgd3nS5MXW7]nr>3h&`FcufZ"e?#$VZKc4@mb
%j1Tc5JCD6ibs4jV^tTgrYSFE=Sq.MH+ai;aG"kroa/G;[dF[,"2H/K<rMXn(qM1A_L-MI"5C3+b>W[dNbou/Q"g.J(iA@72IeT`O
%lCGPT<h)K&T<'kABbg2Y`_AMLdG;jkfRI+<PR2JHR9$=engUtQDqe=Bis^JZ>^lS?W9;RpO1QY%M51&s@/W%PSTq67kI-qncB,oI
%]Rdilq)E5bBY*'bis6Jjm<.mj+TlNn<K0K]p,TW[D`C'TI)'rGlCb5EM!Z)\+r*X'c-Y"IRJ^@sBNu6uE"+Mh-@Hd<8.I\>_tTdG
%M`4#h2t[m"/Qf]"gf*L)rX,pC)jk[rX'VX8qX*I]0+1hSQ1B0\)&?:V*\3J$JZKF+$d^3#ncJGQ$b$0\(#);mpjK-&!^^OLH]$R0
%\ks,)Ua?4CN#M1_,,#P36]Y/G6=^Y'\k$SUF?NJ7mP(6:P3]]9DFn()Pko(J64@R(ABDst;I(!?f2%+;)NfhQRjqTT-UptAI9)&"
%+)Y;=\RHkc;YeQqZ:=3&)lNOYo1MmP26JB2aa(RjY*tq2S&b@Lg@/3OS-&]5cLn<o\:$+tTBV.Il%uiLrUN)b>;hZ(g=E/\A[q89
%XRXr98!hujQo#"[MA0(>OZI6"XH\bjh.Te_d0sRGXfDZ%$Rlt=N6&7/`FOu%*(1bd=CqAW>O)+<b]39D4g<H)HoXgu@ksEiF-Z"@
%@ad4A0UCm87V>:<FCI(_>#1Yi]Mi$sW9^C)+1!:,H?$I2ms12[2HlYro,W&:mA(2E<XA7V*I`^O?>eTWH25XDCAL(IMn8.6SPab4
%.ba3/h!F^p5`6uI?mD(L[1:Y,Y(%!5*N"fB!)pq>M7((?=`1"jY/@Um]=?Djj)c,[dSnnJ24eOPi&YT-Jap[#P#^>V7f\TB-^C%c
%C7SnJS+mc;9!&e:V12+'gM"(^,eQif3q#7=-U"l>&^$%nl%+!*\0h'jFHYXA-@Hl(/"p-2d0dg>OMUNLAj6(m6r16tkIV[Bjug*l
%G03PSr(c9:i])S:NdoVUc;N-OhM_]i5f=>2WV2-Jd*4bPNH;f/OQf"eNFPiF`:sU+6["^!'T92W_1`I.a0?J:P@-63R]a9Ya/lQ(
%e`'g8pn"kfQq<oaX#6Nr@]Yo;X%Rl^Au,@,*+lmUr'!kf285LQ^qqaCk)CkKnMltUP'0Q_D+SCC:&V?),).At[_krb,[;MF7[Y%$
%`Ul1lf1fq6SI1s=7;16=_JUpDNeW_g@_LP=:l#iEl&3iEk4uIHpCd1>7;3J08"87O/F8Cmb:,WL]sU/%h)JXg'ma?"YesX-l%8XE
%Ka`i>[r--kNRbP8b.=Ir9%cef=[N(``(WH`gl*2aMPs^m=kcnY'hVb@+dS"NX@hS5g:6Mk)C,E2Z._uWAb7W_b5+j,h2JB"=&WDb
%;Y]^T[-i?ac:r5@rc5bHMgN%+)+(!:btpS5NOLoo!0][`,j;*M?.@kGPj5'cI"[;7PY0moJiHU.H'>pNg,9^5fhb5=2J@ePE:=1-
%ZZfEF[[S[T9[fDdl9]<'^u_1#GB0O7=Po8SD;FTHXGtm*8@k86Wn(r?o<8PN<k8t.$X;p3@6a(pUig!%riE$3%jL>Z'rg'nOc@NN
%d3Gsrb,3>GgL%Nk\T7S7Q.*4Wh.^ZKJ^\iAc6bL74K4C&oD.6i1CnlO&$^.=Wf1<0>s#2u57&U2D`UVU=4jL9DXT*)T<ePq>X,#q
%Lk&47fgSh:OtZU]ld6""fEf`c@h21O7'rL5Z:Kk3D^A0kT5RAN+69-91J&W+Gpr1dNQU>0,EHa%>.l9L4Ybb9_!b0hC>l(bgd0Re
%Mq;_(R]r,VC1/K:apk.m1[VkDI5E]K;1Gs`rO/HGBCBNaO=`06\:b/TBN_!N:XkDqQ]8=[U.f?L6?Y`SFj!J-m#$csT9&7a$Ia-)
%>c&Va^[:Gp'od#G'CfsOaf82&!Xl84X(54F^<s`5(]5I[X3_iV0,mBIn,HbFf'!io&r)F]BoCOq2g"TocTX\+M"=Pl1-qF/]cU@'
%NUr!9mf_2OLGcM`i:PR.-10a@D*U'48<a%YWqDA;r.K*AL*A4sG,-F42pq8A]8;bn/?r'eP(hpTmcEPdFSg??pj?<2HT>`ZNH)]>
%DAq'PUW6*[kt07SN)DZKX`b@"4#_,hp+\)\//DiL^G4k&c<8?VkT@J]pS47b&+L"CW%rfZkNo^Ls%-T6o3fbkKNBLOh6?i-[3ZM"
%XB4L)0<E.tCNR<icB=V&[ak>fokhL^'&j3WL8K.G=D'"t@.U!8;pSTDA"IAZ%ef.(VS8D7Acs.c%6V!WCdq_$fRZQ,f=nu@c]X4l
%cWf7iaOri,mW^</D1]6Mpk+3bn0J$es)46Iauq^D=Hd,'</T^G>`rKY[(Ccss77gVmj78ZrqfRB+)Po1Xf,lXF01j<QW9>nGVM#!
%7M>?d?"5rTBcYIe4XC^EQQ"mVj[(6kTe'gUS<Kf&^C;bO6n5B:OO+TEX!1]p5Ocbf)&5bL?6PVL8OfQ5l]#Ck<)E`p]2%)H-63iO
%'2_ZCTn*t@mC`$*A^KX7,`U=4;!=&W$>R9Al:*-.2d/p\#^%u0dfPe?AQ:.2AnPSP=O*qMr'hX7GbhmZTK@"HP^E9]f1:rTkpN.+
%7pjW,0^np6mh5S>o.I)KH9'hO_HjFK?@9%5&4N#DS?jp_"X[U<P-uC1W(78PN3J-nGXitk1;p/?hVcIP>:3D7TN<CtAEsD;)]/<M
%9Rog:K=AR7(7-Wl9I_V[5DKpK4j=HY\:UZp<i7X<OEP)t8S't'o&!=\3XV[Y-5!N/pA)/Hp[VmV3:f)FRA9b-oJfd)0Hn9_rB\bW
%',]#p$,.cNYP/ao;k'E2>EWd]7\3h3ffF3hal%tbq^W\,I/C=uqRmpNc_FM[1.7nOGl2g,giQ<?07W<1i=o_1\;Zmoe]#AHVI&;=
%Fmg9O"-1AFN5?s1L.47&-Ph&g>GCn;qhsXk[hKdb\'+^ml1GD+_Vk\U[bp/K6g\j[&9\</`/WjPnoB^CSj3,b1HSs(g>iR5O,]Km
%c3D4/:j>dX-:pW4\Bj/XBpUEi.H[:V)RXZ4e?LeUiq)i-pCZs8(]6`Gs4)d-NC*UYK\Xqel<A03-AHBf`&h`=2M+qTiq^<Q8hLRt
%^b0eM8DM:-MhtlH8qupn5L.4BllUO.RLG6]%EK*?o)AhdL7<R.^YD7m\d;W17SSisQYqeSKGL%]ZFsYRSTrpZ>S)QgIc:J'qC9AO
%n;6#eX]1Ela3YbFXM]kXZ*1"P9K9Z(#JA!.oBA:r/U0)I]s,HMb0n2rUYGTbe0Rlj93;8V_,bIh_-Ioa$trYS=9O:BE1Y;Hd(fG[
%U@Ao[i7P,f)gQ>=&h_7s)FqC#hJW^K[Mj_8j4473;=pI`N3Ei$Ok(p<EB$dToE,T2AL(^*oQRP<*SD'/'9Y&Z&D5oU`dBqF0f[*9
%iaj(77;g-XL9u_W$?=05;0)-80kB8$>c*'QdR:HE9m*t6`-Ka;lcJUL,K=<@#@G6uq/Xt1Nug]B0_$WqXa-)ZHPNP>nP!mi_8_*O
%krj`]<4i+?6k]juP;lKW4t/'l'fGMuB8<d!L`XV5#<B\9,Pf#`I9^<-E6#jElVBds,DiMa/!uOZIl8G/2Jd/u>:CY#@5*fp&E?*j
%aO"Qrq^nQiU9Bmt2U^GTbf?&[*`U?Z()N<`2>RNKKW*?^l*(u9lrQEPg]4dh';aDBE!$N))p*#>"5)7T`7F;$<bh7/4DKFSNMdOT
%#sU\bksjK9mK^gZ@,PM\M52kF).67^#;9-mMPK"pk:@S#1;5WKO'NPX<(nkUFmNU%hj41(Yi3V#lD#-jQ+Vra)iU6HYlf`4%88]p
%1Me]gkj5*fC(2lXQloQV#&P9Zgna8a/nr0+I\!oEc;nK7-;h1\2'[RgeIscZSW(qTE@V3Od&7Nt5IRdTXge=VfYV`MdY0T8q`cMG
%k`-."QtpKUGWk:j)!I+L&Ta8I.2R4_48O*gji^N34EBPX8*0:uPfn]M?3oGA_hB`IH^kP$Udr!sP:du#'0T2r;A^"KcCSK:Ku=K=
%0!6FQ6b')5Y)>#F\9)$m-B08#KK&CA`95lQhoBWFEV4P*,/4m]_4nrJ8fkV+P.*Xd6p2)DBVV[t]hjTbpQW:GH8$#9Zl+aI/pe`+
%fc;f/oo8&,P4`hHj!a5S1Ul9:*@X4X>o]:A/RH&tW[A]r-Vc`oANP`SB.HT_(65Vk.2,8bF>;c%LR_@"1eN&X2pPTf";%YXI@Lir
%2Gg&Wdo39pH=F$VT2Vof7e9_*AZBUrKq@(5Cq'+$c)<UA7St+DkFFr4:^1d^7%>kAd.ih=?7kCU.EYPF9]/CpM(u-4@ccXD91D'U
%d-=<KeLF^eWc,7_gVNNQ+uO82`m%!jD0J,IBJf&s]:'cOd<HRqh1NE"@]Z'/T\ri<"rg$YUmLhK>#ONhe>2-3-EW&5bZ[n=6&43W
%Su-c6P=H`d(M2^@T2@).QOa,%/a4P/JO1>'^(8AEj.=cX!9K2$j9`W7FSV2A^e.Jlh$TUD"GfNC@ZY*&qNrP%d5pe,CB,l+6c>MV
%(=t6:7_nE,7YaS-mT6phr75q6<b?G"5B<#t7[rm]!0.:GFV"ntKrDr(dnu'!WsEiUUA"cr<7gfA"7&Tcl_-]Z4tnmXb4-SC04g(D
%J.k!jAfbA!VdUcQ;J"76H7LnD,GV2SAa*tTq7Z]!,P$*C'e)HjUFpii^]S6)'IUrS#3GZ_pNWQ>5I%B?.65@GG7h?;`3LVm'H<_c
%\Pj\9hj4+F!^,n!IrN`O.)A\FJr>o@dYt0##U.HL<YH(ja4SO8dLm5VG(sDl^eEB!ZfJ[AG47KW_APP]1NXn`pY/_hp3JP!*jl?j
%!0+;apalO@@(YB?7s^iGgTZP^F(aR0b^<B];$=N`6$+joLgo>,:dcHIU*JopW&e6mMT4M%6=5Zc)>6Ej.Z!ZR;BhA=//Ck[WM!9e
%jGQtZp`3(%6mL>n,PA`X`4-W_U"p#:?]L$)aaaYVCYbMA6P*[FY?U=I+G,RCJEnTg+C]-1SEEoaTdC,%rb8,S60nChX`O2^3MM="
%XT<["7d5C(0Z$!.c._K<a4Z!!925oh;qs^U%4(4^LS>9M@cPDb*;f(,/Q<5W/hru:97@s*iPl=B&$/6N,=Y](aFT$0bf!mhZ5f?d
%'Dr0R)lIZESt;m@A5KbF1bs795X!r_js%#+.t.,2OZh@tE;/C=mC%^^)R;2!>AXJkhFt#inN;(['FB,\-DD9D[Z7i>AJ:n:>-`!=
%\G]H%:!Krg.8&JqCq5t,&:o>*2Hk3\U9`GnM%nE_6<m<80ASC$I",8So!d._Uc\\6OtQma,XfA1dsdSB1Ndh-\n9qb:YI+h$?kEg
%gdA2J>_`^HQA?j-/LH@,U;/rn'uRu%E8Pk\?iU%6qsRaKPgMVhrFQ$%cS+$Mn=PA^dQNtGicn7@UG^=0mt*M`BH"p'GE((iiU5nV
%-<`b;;BHn\)8e_Gpo&,GnPH^)Llnp#`n^kc2H:HuU^06\+M01IbI;RL,iVbGT5RAN0DmMAG'I[:a3L$H,'j(lU1!R26"iXW416eB
%^n=(8+Gd\YYV"jO#X[9*E?,oU+-.PoL`db>oTS3oL]'=A"Q:Hhi^3$(2)q7_QI(5M(!K>rj:GL>#rW+CIur8[DKg$-'<Hth5]P7Z
%/+4kg][qj]g1!`*.609j.l;$umfO[0k^N;$i5;K^*]\U%R.kUu?O\(cae3R/=J:<ZZ%`dT`84"s)6kLID=GC2ri0<**qT^Z*inXk
%fT/N157R)n*Xk0LNpMXReI=hU1dqpm@F#F>ncFPHMH#:l2_ePR4aSB#kW\L!Vt[!b'Om9CMH4&mJ::B3-4TAk1W-P\LW&lHpOWt:
%DXH<a6B&M:YsX?<DH4)KS'UlkpSK\XB2&*O\jgmXf0W9Tqm:@Q73RDmpfXmP>:iI(Kn=sn#F4S3==tETZRV3N`'Q!ib?=M'he48#
%V2?gN6Fl3RgoTsY\@'lYW>V8!FM8+tV6392,%.bt=Md(4"FTia_\;-&?CnWRS4AF%Y?L4t.[7N_67`kp=d?S%2fQsF*p>3@2/I+9
%+0fPZY/bjuEDtYff%7*lY:m*!\+6-on@N]5jHmVpCC&AI+<[VS&.NQD.50*BWjrQA"l[.7O`ZoWO%n%tOV66S]8cT65.I8<>W>f.
%lXPE_Y\D]]IR?mm6WmUG[5(:!+2$c+]_<B/O)[\F'0prLQcPmF'+5S?B!Y,B8g>5A$B8Rhfl!No9C_LXI1WY_KX-OGH9g9,EJr.6
%&\QM_Zj7OnEdu$F*pf$HjWe<WLh#64nu1*Z\6/]/cpr>b';IL1adq7lFm__8Tq\:6AFV)'T5!BmO$8Io\P[7!55L)]\#$eL`!GCX
%qZl!q\+A^[.@pOX:rZ5:_h"QX6pQR%V>3.0*WD(T^*U#B4O)Mt/u]0&b:13tWF>\V::j!=K]3Abf146l@tJo2cpe7m`7RZ._%ELg
%JT'M9+=j=+DmrRXffqsBO&[cLpV`BI6^16HTMnP-Ms,'<]1u2N7e1oZ.cW%p&#r0\8V=+arGbV!Od)-0b#Zoc8$#b"T$F_u'AM5#
%1e[CbcNE0QNa$<7D+UU7$m02aCpQ:Em;e7g*P<G;\i^kbj2!jMS,7!IDV0&Xb8Y_@mosXUoN>/9b)p#Ifu^XiZ'kGp[`@UgI./_q
%@XF'&iitiT1)+P?9]HEBdf_:4W6N8&\FLbaP;_tn1,R$uMp!6S8I(L,;_%BKP?96@!R_XPP8h'?-;"LV5a)MIn;=KIMCH3uT=<D-
%\k8,_N`LmDHR$mm^^JFP`ToHH-I#tTW9i60gPt:g;($g7AN[='U/p:igS^]>XDUJT.LQC2<dNkL4fOd]DmciYgQ$2q):6qjggYf$
%&GW9:?dJ]gGMGAcAak$$-MM';O,#gVHt.g.faYReDr+:E_/Sm]@"7fO<2qF2<\epA[k]g!;r>dt(glKTn6Pj!IuKiUYlb3^9nI5)
%6WX5_op2dPZ7lZFZ&L%SJ;f]==GO$OI",D4%'rdQm;;_k\5"T>gA^;mq+re$'@Ni[A;CA"Ynj)?N3MP6o&$jagE0s'9KZ?kb$4mZ
%"qDDf;>2%-/!*]T+aC^QotAS1;4B\Tq4UmMpACh]:!0LieqZg9>.G$C-[JZF3;L(^322)/VHBSfgSMTu0K7#n'LPKh`?+p>l.#d$
%,UMUED9;5M*lcfW+8Ft$^2n-*ouAZLrALM=/NDKS]ZgTC2_a3mR,HT%^]d/5\`*Oc*:s!7jS';IESJ@JmucE$noENonE<<O?hLHf
%H'<KB./3%YPplB0<2//$-WX-WRJ]7C*6/rmiO9f2.$+B-7kVrt"0E3t:#atKF-S0J=]D-NHfcfWh+W8N;')(p*o;7iU-./XO'S!&
%+tL(-K0,&e9K*]!R_]jT(9q\)ICrDI*WWj%?&0c@SI/*5-m/?B(RHRAjui&[McDTL8cE/9kDTbA0!5aYX\)?bjr<^Bp:`Ilfu2J.
%O1Se&?M#1Dk'l)H8]GGn7ZW$f0g=51-cLF6DFHYA7]\"0+oULTBD*0R.(0_3V!BE:74P.19Ebh>2ka*?,"=dVZDXM4&!H0HUZCCA
%`m0q28J$pgbM5B?hQ5iUDf68JS+H$=<:E@/kF8*8iDbW!cr4FY1XXV8HsE)ZCL2^N.jJ940HN_Wn:gCd'%KA`'EZW21ln3%[OE([
%c"Vkn?ZLFGEeO0Z8:>dgOuXG`KhRnR\1`Mbk$""6V5B^k@N]mHj$E=\n8_Kn&#h&)r\c7IhaKg\'))iHp3_oB:;:g&&'p</cegBV
%4$,k*oUGZG`J`:EjE*]MbaZfO]1"M?5@7_orYP4*H*^[Z?7f6:k47p1-W#o',l%#\_lm_!55G3Y*ajWR~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial 4691 2669 a
 currentpoint grestore moveto
 4691 2669 a 8 2669 a
 currentpoint currentpoint translate 1 0.4035 div 1 0.4035 div scale
neg exch neg exch translate
 8 2669
a 0 2852 a Fu(Figure)21 b(12:)26 b(Delay)21 b(inserted)g(data)g(\003o)n
(w)g(of)g(gra)n(vitational)f(force)0 2952 y(pipeline.)0
3303 y(tational)28 b(force)f(pipelines)g(is)i(only)e(a)h(se)n(v)o(eral)
g(tens)g(of)g(lines)g(of)0 3402 y(a)i(te)o(xt)f(\002le.)53
b(Re)o(gardless)29 b(of)g(a)h(v)o(ery)e(simple)i(description,)g(we)0
3502 y(could)25 b(obtain)g(v)o(ery)f(ef)n(\002cient)i(implementation.)
39 b(Using)26 b(PGR,)0 3602 y(we)21 b(will)f(reach)g(the)g(design)g
(area)g(where)f(nobody)f(can)i(achie)n(v)o(e.)0 3885
y Fv(Refer)n(ences)0 4072 y Fu([1])40 b(Buell,)45 b(D.,)f(A.,)h
(Arnold,)e(J.,)i(M.,)f(Kleinfelder)m(,)f(W)-8 b(.)40
b(J.:)97 4171 y(Splash)c(2:)58 b(FPGAs)37 b(in)g(a)f(custom)g
(computing)e(machine.)97 4271 y(IEEE)19 b(Computer)g(Society)h(Press,)h
(Los)f(Alamitos.)g(\(1996\))0 4439 y([2])40 b(Hamada,)20
b(T)-6 b(.,)21 b(Fukushige,)f(T)-6 b(.,)21 b(Ka)o(w)o(ai,)g(A.,)g(&)h
(Makino,)d(J.:)97 4539 y(PR)m(OGRAPE-1:)105 b(A)60 b(Programmable,)68
b(Multi-Purpose)97 4639 y(Computer)21 b(for)h(Man)o(y-Body)e
(Simulations.)h(Publication)g(of)97 4738 y(Astronomical)e(Society)g(of)
h(Japan.)g Fe(52)g Fu(\(2000\))e(943\226954)0 4907 y([3])40
b(Ka)o(w)o(ai,)32 b(A.,)k(Fukushige,)30 b(T)-6 b(.,)35
b(Makino,)c(J.,)36 b(&)c(T)-7 b(aiji,)33 b(M.:)97 5006
y(GRAPE-5:)43 b(A)29 b(Special-Purpose)f(Computer)f(for)i(N-body)1996
1747 y
 currentpoint currentpoint translate 0.40207 0.40207 scale neg exch
neg exch translate
 1996 1747 a 1996 1747 a
 gsave currentpoint currentpoint translate +0 neg rotate neg exch neg
exch translate
 1996 1747 a @beginspecial
23 @llx 359 @lly 587 @urx 749 @ury 5640 @rwi @setspecial
%%BeginDocument: ./mat/perform/graph.eps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 23 359 587 749
%%Title: graph
%%CreationDate: Sun Mar 13 02:16:05 2005
%%Creator: Tgif-4.1.40 by William Chia-Wei Cheng (william@cs.UCLA.edu)
%%ProducedBy: (unknown)
%%Pages: 1
%%DocumentFonts: (atend)
%%EndComments
%%BeginProlog

/tgifdict 51 dict def
tgifdict begin

/TGMAX
 { exch dup 3 1 roll exch dup 3 1 roll gt { pop } { exch pop } ifelse
 } def
/TGMIN
 { exch dup 3 1 roll exch dup 3 1 roll lt { pop } { exch pop } ifelse
 } def
/TGSW { stringwidth pop } def

/bd { bind def } bind def

/GS { gsave } bd
/GR { grestore } bd
/NP { newpath } bd
/CP { closepath } bd
/CHP { charpath } bd
/CT { curveto } bd
/L { lineto } bd
/RL { rlineto } bd
/M { moveto } bd
/RM { rmoveto } bd
/S { stroke } bd
/F { fill } bd
/TR { translate } bd
/RO { rotate } bd
/SC { scale } bd
/MU { mul } bd
/DI { div } bd
/DU { dup } bd
/NE { neg } bd
/AD { add } bd
/SU { sub } bd
/PO { pop } bd
/EX { exch } bd
/CO { concat } bd
/CL { clip } bd
/EC { eoclip } bd
/EF { eofill } bd
/IM { image } bd
/IMM { imagemask } bd
/ARY { array } bd
/SG { setgray } bd
/RG { setrgbcolor } bd
/SD { setdash } bd
/W { setlinewidth } bd
/SM { setmiterlimit } bd
/SLC { setlinecap } bd
/SLJ { setlinejoin } bd
/SH { show } bd
/FF { findfont } bd
/MS { makefont setfont } bd
/AR { arcto 4 {pop} repeat } bd
/CURP { currentpoint } bd
/FLAT { flattenpath strokepath clip newpath } bd
/TGSM { tgiforigctm setmatrix } def
/TGRM { savematrix setmatrix } def

end

%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1

%%PageBoundingBox: 23 359 587 749
tgifdict begin
/tgifsavedpage save def

1 SM
1 W

0 SG

72 0 MU 72 11 MU TR
72 128 DI 100.000 MU 100 DI DU NE SC

GS

/tgiforigctm matrix currentmatrix def

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      149 678 M
      156 678 L
   TGSM
   2 W
   S
   1 W
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      1001 678 M
      994 678 L
   TGSM
   2 W
   S
   1 W
GR

% TEXT
NP
0 SG
   GS
      1 W
      139 687 M
      GS
        GS
        0
            /Helvetica FF [34 0 0 -34 0 0] MS
            ( 0) TGSW 
        AD
        GR
      NE 0 RM
            0 SG
            /Helvetica FF [34 0 0 -34 0 0] MS
            ( 0) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      149 582 M
      156 582 L
   TGSM
   2 W
   S
   1 W
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      1001 582 M
      994 582 L
   TGSM
   2 W
   S
   1 W
GR

% TEXT
NP
0 SG
   GS
      1 W
      139 591 M
      GS
        GS
        0
            /Helvetica FF [34 0 0 -34 0 0] MS
            ( 20) TGSW 
        AD
        GR
      NE 0 RM
            0 SG
            /Helvetica FF [34 0 0 -34 0 0] MS
            ( 20) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      149 485 M
      156 485 L
   TGSM
   2 W
   S
   1 W
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      1001 485 M
      994 485 L
   TGSM
   2 W
   S
   1 W
GR

% TEXT
NP
0 SG
   GS
      1 W
      139 494 M
      GS
        GS
        0
            /Helvetica FF [34 0 0 -34 0 0] MS
            ( 40) TGSW 
        AD
        GR
      NE 0 RM
            0 SG
            /Helvetica FF [34 0 0 -34 0 0] MS
            ( 40) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      149 389 M
      156 389 L
   TGSM
   2 W
   S
   1 W
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      1001 389 M
      994 389 L
   TGSM
   2 W
   S
   1 W
GR

% TEXT
NP
0 SG
   GS
      1 W
      139 398 M
      GS
        GS
        0
            /Helvetica FF [34 0 0 -34 0 0] MS
            ( 60) TGSW 
        AD
        GR
      NE 0 RM
            0 SG
            /Helvetica FF [34 0 0 -34 0 0] MS
            ( 60) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      149 293 M
      156 293 L
   TGSM
   2 W
   S
   1 W
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      1001 293 M
      994 293 L
   TGSM
   2 W
   S
   1 W
GR

% TEXT
NP
0 SG
   GS
      1 W
      139 302 M
      GS
        GS
        0
            /Helvetica FF [34 0 0 -34 0 0] MS
            ( 80) TGSW 
        AD
        GR
      NE 0 RM
            0 SG
            /Helvetica FF [34 0 0 -34 0 0] MS
            ( 80) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      149 196 M
      156 196 L
   TGSM
   2 W
   S
   1 W
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      1001 196 M
      994 196 L
   TGSM
   2 W
   S
   1 W
GR

% TEXT
NP
0 SG
   GS
      1 W
      139 205 M
      GS
        GS
        0
            /Helvetica FF [34 0 0 -34 0 0] MS
            ( 100) TGSW 
        AD
        GR
      NE 0 RM
            0 SG
            /Helvetica FF [34 0 0 -34 0 0] MS
            ( 100) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      149 100 M
      156 100 L
   TGSM
   2 W
   S
   1 W
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      1001 100 M
      994 100 L
   TGSM
   2 W
   S
   1 W
GR

% TEXT
NP
0 SG
   GS
      1 W
      139 109 M
      GS
        GS
        0
            /Helvetica FF [34 0 0 -34 0 0] MS
            ( 120) TGSW 
        AD
        GR
      NE 0 RM
            0 SG
            /Helvetica FF [34 0 0 -34 0 0] MS
            ( 120) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      149 678 M
      149 671 L
   TGSM
   2 W
   S
   1 W
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      149 100 M
      149 107 L
   TGSM
   2 W
   S
   1 W
GR

% TEXT
NP
0 SG
   GS
      1 W
      149 715 M
      GS
        GS
        0
            /Helvetica FF [34 0 0 -34 0 0] MS
            ( 0) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Helvetica FF [34 0 0 -34 0 0] MS
            ( 0) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      255 678 M
      255 671 L
   TGSM
   2 W
   S
   1 W
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      255 100 M
      255 107 L
   TGSM
   2 W
   S
   1 W
GR

% TEXT
NP
0 SG
   GS
      1 W
      255 715 M
      GS
        GS
        0
            /Helvetica FF [34 0 0 -34 0 0] MS
            ( 1000) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Helvetica FF [34 0 0 -34 0 0] MS
            ( 1000) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      362 678 M
      362 671 L
   TGSM
   2 W
   S
   1 W
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      362 100 M
      362 107 L
   TGSM
   2 W
   S
   1 W
GR

% TEXT
NP
0 SG
   GS
      1 W
      362 715 M
      GS
        GS
        0
            /Helvetica FF [34 0 0 -34 0 0] MS
            ( 2000) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Helvetica FF [34 0 0 -34 0 0] MS
            ( 2000) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      468 678 M
      468 671 L
   TGSM
   2 W
   S
   1 W
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      468 100 M
      468 107 L
   TGSM
   2 W
   S
   1 W
GR

% TEXT
NP
0 SG
   GS
      1 W
      468 715 M
      GS
        GS
        0
            /Helvetica FF [34 0 0 -34 0 0] MS
            ( 3000) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Helvetica FF [34 0 0 -34 0 0] MS
            ( 3000) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      575 678 M
      575 671 L
   TGSM
   2 W
   S
   1 W
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      575 100 M
      575 107 L
   TGSM
   2 W
   S
   1 W
GR

% TEXT
NP
0 SG
   GS
      1 W
      575 715 M
      GS
        GS
        0
            /Helvetica FF [34 0 0 -34 0 0] MS
            ( 4000) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Helvetica FF [34 0 0 -34 0 0] MS
            ( 4000) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      681 678 M
      681 671 L
   TGSM
   2 W
   S
   1 W
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      681 100 M
      681 107 L
   TGSM
   2 W
   S
   1 W
GR

% TEXT
NP
0 SG
   GS
      1 W
      681 715 M
      GS
        GS
        0
            /Helvetica FF [34 0 0 -34 0 0] MS
            ( 5000) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Helvetica FF [34 0 0 -34 0 0] MS
            ( 5000) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      788 678 M
      788 671 L
   TGSM
   2 W
   S
   1 W
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      788 100 M
      788 107 L
   TGSM
   2 W
   S
   1 W
GR

% TEXT
NP
0 SG
   GS
      1 W
      788 715 M
      GS
        GS
        0
            /Helvetica FF [34 0 0 -34 0 0] MS
            ( 6000) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Helvetica FF [34 0 0 -34 0 0] MS
            ( 6000) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      894 678 M
      894 671 L
   TGSM
   2 W
   S
   1 W
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      894 100 M
      894 107 L
   TGSM
   2 W
   S
   1 W
GR

% TEXT
NP
0 SG
   GS
      1 W
      894 715 M
      GS
        GS
        0
            /Helvetica FF [34 0 0 -34 0 0] MS
            ( 7000) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Helvetica FF [34 0 0 -34 0 0] MS
            ( 7000) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      1001 678 M
      1001 671 L
   TGSM
   2 W
   S
   1 W
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      1001 100 M
      1001 107 L
   TGSM
   2 W
   S
   1 W
GR

% TEXT
NP
0 SG
   GS
      1 W
      1001 715 M
      GS
        GS
        0
            /Helvetica FF [34 0 0 -34 0 0] MS
            ( 8000) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Helvetica FF [34 0 0 -34 0 0] MS
            ( 8000) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      149 678 M
      1001 678 L
      1001 100 L
      149 100 L
      149 678 L
   TGSM
   2 W
   S
   1 W
GR

% TEXT
NP
0.000 1.000 1.000 RG
   GS
      1 W
      924 125 M
      GS
        GS
        0
            0
        AD
        GR
      NE 0 RM
      GR
   GR

% POLYGON/CLOSED-SPLINE
0 SG
NP
   1001 169 M
   1009 175 L
   1006 185 L
   996 185 L
   993 175 L
CP
GS
   EF
GR
GS
   S
GR

% POLYGON/CLOSED-SPLINE
0 SG
NP
   948 184 M
   956 190 L
   953 200 L
   943 200 L
   940 190 L
CP
GS
   EF
GR
GS
   S
GR

% POLYGON/CLOSED-SPLINE
0 SG
NP
   894 195 M
   902 201 L
   899 211 L
   889 211 L
   886 201 L
CP
GS
   EF
GR
GS
   S
GR

% POLYGON/CLOSED-SPLINE
0 SG
NP
   841 208 M
   849 214 L
   846 224 L
   836 224 L
   833 214 L
CP
GS
   EF
GR
GS
   S
GR

% POLYGON/CLOSED-SPLINE
0 SG
NP
   788 223 M
   796 229 L
   793 239 L
   783 239 L
   780 229 L
CP
GS
   EF
GR
GS
   S
GR

% POLYGON/CLOSED-SPLINE
0 SG
NP
   735 238 M
   743 244 L
   740 254 L
   730 254 L
   727 244 L
CP
GS
   EF
GR
GS
   S
GR

% POLYGON/CLOSED-SPLINE
0 SG
NP
   681 259 M
   689 265 L
   686 275 L
   676 275 L
   673 265 L
CP
GS
   EF
GR
GS
   S
GR

% POLYGON/CLOSED-SPLINE
0 SG
NP
   628 279 M
   636 285 L
   633 295 L
   623 295 L
   620 285 L
CP
GS
   EF
GR
GS
   S
GR

% POLYGON/CLOSED-SPLINE
0 SG
NP
   575 301 M
   583 307 L
   580 317 L
   570 317 L
   567 307 L
CP
GS
   EF
GR
GS
   S
GR

% POLYGON/CLOSED-SPLINE
0 SG
NP
   522 326 M
   530 332 L
   527 342 L
   517 342 L
   514 332 L
CP
GS
   EF
GR
GS
   S
GR

% POLYGON/CLOSED-SPLINE
0 SG
NP
   468 355 M
   476 361 L
   473 371 L
   463 371 L
   460 361 L
CP
GS
   EF
GR
GS
   S
GR

% POLYGON/CLOSED-SPLINE
0 SG
NP
   415 392 M
   423 398 L
   420 408 L
   410 408 L
   407 398 L
CP
GS
   EF
GR
GS
   S
GR

% POLYGON/CLOSED-SPLINE
0 SG
NP
   362 429 M
   370 435 L
   367 445 L
   357 445 L
   354 435 L
CP
GS
   EF
GR
GS
   S
GR

% POLYGON/CLOSED-SPLINE
0 SG
NP
   309 474 M
   317 480 L
   314 490 L
   304 490 L
   301 480 L
CP
GS
   EF
GR
GS
   S
GR

% POLYGON/CLOSED-SPLINE
0 SG
NP
   255 527 M
   263 533 L
   260 543 L
   250 543 L
   247 533 L
CP
GS
   EF
GR
GS
   S
GR

% POLYGON/CLOSED-SPLINE
0 SG
NP
   202 591 M
   210 597 L
   207 607 L
   197 607 L
   194 597 L
CP
GS
   EF
GR
GS
   S
GR

% TEXT
NP
0 SG
GS
   94 395 TR
   [0.000 -1.000 1.000 0.000 -49 -117] CO
   94 NE 395 NE TR
GR
   GS
      1 W
      94 395 TR
      [0.000 -1.000 1.000 0.000 -49 -117] CO
      0 31 M
      GS
        GS
        0
            /Helvetica FF [34 0 0 -34 0 0] MS
            (Speed\(Gflops\)) TGSW 
        AD
        GR
      NE 0 RM
            0 SG
            /Helvetica FF [34 0 0 -34 0 0] MS
            (Speed\(Gflops\)) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      589 759 M
      GS
        GS
        0
            /Helvetica FF [34 0 0 -34 0 0] MS
            (N) TGSW 
        AD
        GR
      NE 0 RM
            0 SG
            /Helvetica FF [34 0 0 -34 0 0] MS
            (N) SH
      GR
   GR

GR
tgifsavedpage restore
end
showpage

%%Trailer
%MatchingCreationDate: Sun Mar 13 02:16:05 2005
%%DocumentFonts: Helvetica
%%EOF

%%EndDocument
 @endspecial 6696 1747 a
 currentpoint grestore moveto
 6696 1747 a 1996 1747 a
 currentpoint currentpoint translate 1 0.40207 div 1 0.40207 div scale
neg exch neg exch translate
 1996
1747 a 1988 1929 a Fu(Figure)45 b(13:)75 b(The)45 b(mesured)f
(caluclation)g(speed)h(of)g(single)1988 2029 y(PR)m(OGRAPE-3)24
b(board)f(in)h(G\003ops)g(for)f(the)h(direct-summation)1988
2129 y(algorithm,)18 b(plotted)g(as)i(functions)e(of)g(the)i(number)d
(of)i(particles,)1988 2228 y(N.)2085 2539 y(Simulation.)40
b(Publication)f(of)h(Astronomical)f(Society)i(of)2085
2638 y(Japan.)20 b Fe(52)g Fu(\(2000\))e(659\226676)1988
2793 y([4])41 b(Makino,)17 b(J.,)i(Ito,)g(T)-6 b(.,)18
b(&)h(Ebisuzaki,)e(T)-6 b(.:)25 b(Error)17 b(Analysis)i(of)2085
2893 y(the)f(GRAPE-1)f(Special-Purpose)f(N-Body)h(Machine.)f(Pub-)2085
2992 y(lication)29 b(of)f(Astronomical)g(Society)g(of)h(Japan.)f
Fe(42)g Fu(\(1990\))2085 3092 y(717\226736)1988 3247
y([5])41 b(Makino,)25 b(J.,)j(&)f(T)-7 b(aiji,)27 b(M.:)38
b(Scienti\002c)27 b(Simulations)f(with)2085 3346 y(Special-Purpose)c
(Computers)h(\227)i(The)e(GRAPE)i(Systems.)2085 3446
y(Chichester:)g(John)20 b(W)m(ile)o(y)g(and)f(Sons.)h(\(1998\))1988
3601 y([6])41 b(Lienhart,)d(G,)e(L.,)j(K)o(ugel,)g(A.,)h(&)c(M)5
b(\250)-33 b(anner)m(,)37 b(R.:)57 b(Using)2085 3700
y(Floating)16 b(Point)f(Arithmetic)h(on)f(FPGAs)i(to)g(Accelerate)e
(Sci-)2085 3800 y(enti\002c)25 b(N-Body)f(Simulations.)g(Proc.)g(of)h
(IEEE)f(FCCM'02)2085 3900 y(Symposium)c(on)h(Field-Programmable)d
(Custom)k(Comput-)2085 3999 y(ing)e(Machines,)f(Los)i(Alamitos,)f(CA.)g
(\(2002\))e(182\226191)1988 4154 y([7])41 b(Sank)o(of)n(f,)29
b(D.,)i(&)e(Kruska,)h(J.:)43 b(T)m(ime)29 b(W)-7 b(arps,)31
b(String)e(Ed-)2085 4254 y(its,)f(and)c(Macromeleclues:)34
b(The)25 b(Theory)f(and)g(Practice)i(of)2085 4353 y(Sequence)36
b(Comparison,)j(\(Reading:)57 b(Addison-W)-7 b(esle)o(y\).)2085
4453 y(\(1983\))1988 4608 y([8])41 b(Tsoi,)49 b(K.,)g(Ho,)g(C.,)g(Y)-8
b(eung,)48 b(H.,)h(&)43 b(Leong,)48 b(P)-9 b(.:)71 b(An)2085
4707 y(Arithmetic)50 b(Library)f(and)g(its)j(Application)c(to)j(the)f
(N-)2085 4807 y(body)33 b(Problem.)f(Proc.)h(of)h(IEEE)f(Symposium)f
(on)h(Field-)2085 4907 y(Programmable)k(Custom)i(Computing)f(Machines,)
43 b(IEEE)2085 5006 y(Computer)19 b(Society)h(Press.)h(\(2004\))d
(68\22678)p eop end
%%Page: 13 13
TeXDict begin 13 12 bop 0 523 a Fu([9])40 b(W)-7 b(azlo)n(wski,)18
b(M.,)f(Agarw)o(al,)f(L.,)i(Lee,)f(T)-6 b(.,)17 b(Smith,)g(A.,)g(Lam,)
97 623 y(E.,)28 b(Athanas,)f(P)-9 b(.,)28 b(Silv)o(erman,)e(H.)h(&)f
(Ghosh,)h(S.:)39 b(PRISM-)97 722 y(II)22 b(compiler)g(and)g
(architecture.)e(Proc.)j(of)f(IEEE)g(FCCM'93)97 822 y(Symposium)e(on)h
(Field-Programmable)d(Custom)j(Comput-)97 922 y(ing)f(Machines,)f(Los)h
(Alamitos,)g(CA.)h(\(1993\))d(9\22616)0 1088 y([10])40
b(V)-6 b(uillemin,)39 b(J.,)i(Bertin,)g(P)-9 b(.,)40
b(Roncin,)g(D.,)h(Shand,)e(M.,)97 1187 y(T)-7 b(ouati,)20
b(H.,)g(&)g(Boucard,)f(P)-9 b(.:)26 b(Programmable)18
b(acti)n(v)o(e)i(mem-)97 1287 y(ories:)71 b(Recon\002gurable)40
b(systems)k(come)e(of)h(age.)g(IEEE)97 1386 y(T)m(ransactions)19
b(on)h(VLSI)g(Systems.)g(\(1996\))e(56\22669)p eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
